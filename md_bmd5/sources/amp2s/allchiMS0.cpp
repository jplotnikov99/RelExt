///////////////////CODE GENERATED VIA MATHEMATICA///////////////////


#include "../../model.hpp"

double DT::chiMS0Hmu(const double &cos_t, const double &s){
	using namespace PAR;
	double t = (s* (MH*MH) +  (MchiM*MchiM)*(s +  (MH*MH) -  (MMU*MMU)) + s* (MMU*MMU) + s* (MS0*MS0) -  (MH*MH)* (MS0*MS0) +  (MMU*MMU)* (MS0*MS0) + cos_t*s*sqrt(( (MH*MH*MH*MH) - 2* (MH*MH)*(s +  (MMU*MMU)) +  (( (MMU*MMU) - s)*( (MMU*MMU) - s)))/s)*sqrt(( (MchiM*MchiM*MchiM*MchiM) - 2* (MchiM*MchiM)*(s +  (MS0*MS0)) +  (( (MS0*MS0) - s)*( (MS0*MS0) - s)))/s) -  (s*s))/(2.*s);
	double u = -s - t + MchiM*MchiM + MS0*MS0 + MH*MH + MMU*MMU;
	return ((8*MMU*token1*token10*token20*token50*token52*(-t - 2*u + 3* (MchiM*MchiM) +  (MH*MH) + 2* (MMU*MMU))* (token51*token51))/(token35*(-s +  (MMU*MMU))*(-u +  (MS0*MS0))) + (4*(-(s*t) -  (MH*MH*MH*MH) - 3*t* (MMU*MMU) - 4*u* (MMU*MMU) +  (MH*MH)*(s + t + u + 2* (MMU*MMU)) +  (MchiM*MchiM)*(s - 2* (MH*MH) + 7* (MMU*MMU)) + 4* (MMU*MMU*MMU*MMU))* (token1*token1)* (token50*token50)* (token51*token51))/ (( (MMU*MMU) - s)*( (MMU*MMU) - s)) + (4*(-u +  (MchiM*MchiM) +  (MMU*MMU))* (token10*token10)* (token20*token20)* (token51*token51)* (token52*token52))/( (token35*token35)* (( (MS0*MS0) - u)*( (MS0*MS0) - u))));
}
double DT::chiMS0Amu(const double &cos_t, const double &s){
	using namespace PAR;
	double t = ( (MchiM*MchiM)*(s -  (MMU*MMU)) + s* (MMU*MMU) + s* (MS0*MS0) +  (MMU*MMU)* (MS0*MS0) + cos_t*s*sqrt( (( (MMU*MMU) - s)*( (MMU*MMU) - s))/s)*sqrt(( (MchiM*MchiM*MchiM*MchiM) - 2* (MchiM*MchiM)*(s +  (MS0*MS0)) +  (( (MS0*MS0) - s)*( (MS0*MS0) - s)))/s) -  (s*s))/(2.*s);
	double u = -s - t + MchiM*MchiM + MS0*MS0 + 0*0 + MMU*MMU;
	return ((-16*( (MMU*MMU)*(s - 2* (MS0*MS0)) +  (MchiM*MchiM)*(-s + 2*t + 3* (MMU*MMU) - 2* (MS0*MS0)) + (t + u)*(-t +  (MS0*MS0)))* (token20*token20)* (token51*token51)* (token53*token53))/((-t +  (MchiM*MchiM))*(-s +  (MMU*MMU))* (token35*token35)) - (8*(s*t - (3*t + 2*u)* (MMU*MMU) +  (MchiM*MchiM)*(-s + 5* (MMU*MMU)) + 2* (MMU*MMU*MMU*MMU))* (token20*token20)* (token51*token51)* (token53*token53))/( (( (MMU*MMU) - s)*( (MMU*MMU) - s))* (token35*token35)) + (8*(-(s*t) +  (MchiM*MchiM*MchiM*MchiM) - (s + u)* (MMU*MMU) +  (MMU*MMU*MMU*MMU) -  (MchiM*MchiM)*(3*t + u +  (MMU*MMU) - 2* (MS0*MS0)) + s* (MS0*MS0) + t* (MS0*MS0) + u* (MS0*MS0) -  (MS0*MS0*MS0*MS0))* (token20*token20)* (token51*token51)* (token53*token53))/( (( (MchiM*MchiM) - t)*( (MchiM*MchiM) - t))* (token35*token35)));
}
double DT::chiMS0Zmu(const double &cos_t, const double &s){
	using namespace PAR;
	double t = (s* (MMU*MMU) + s* (MS0*MS0) +  (MMU*MMU)* (MS0*MS0) + s* (MZ*MZ) -  (MS0*MS0)* (MZ*MZ) +  (MchiM*MchiM)*(s -  (MMU*MMU) +  (MZ*MZ)) + cos_t*s*sqrt(( (MchiM*MchiM*MchiM*MchiM) - 2* (MchiM*MchiM)*(s +  (MS0*MS0)) +  (( (MS0*MS0) - s)*( (MS0*MS0) - s)))/s)*sqrt(( (MMU*MMU*MMU*MMU) - 2* (MMU*MMU)*(s +  (MZ*MZ)) +  (( (MZ*MZ) - s)*( (MZ*MZ) - s)))/s) -  (s*s))/(2.*s);
	double u = -s - t + MchiM*MchiM + MS0*MS0 + MZ*MZ + MMU*MMU;
	return ((-4*((-t +  (MchiM*MchiM))*(-(t*u) - (s + u)* (MMU*MMU) +  (MchiM*MchiM)*(-s +  (MMU*MMU)) +  (MMU*MMU*MMU*MMU) + s* (MS0*MS0) + t* (MS0*MS0) + u* (MS0*MS0) -  (MS0*MS0*MS0*MS0)) + ( (MchiM*MchiM)*(-s + 5*t + u + 6* (MMU*MMU) - 6* (MS0*MS0)) - t*(-s + t + u + 2* (MMU*MMU) - 2* (MS0*MS0)))* (MZ*MZ) + (t +  (MchiM*MchiM) + 2* (MMU*MMU) - 2* (MS0*MS0))* (MZ*MZ*MZ*MZ))* (token20*token20)* (token51*token51)* (token53*token53)* (token7*token7)* (token8*token8))/( (MZ*MZ)* (( (MchiM*MchiM) - t)*( (MchiM*MchiM) - t))* (token15*token15)* (token16*token16)* (token35*token35)* (token4*token4)) + (8*token20*token25*token26*token54*token7*token8* (token51*token51)* (token53*token53)*(-4* (MZ*MZ*MZ*MZ)*( (cw*cw)*(t +  (MchiM*MchiM) -  (MS0*MS0)) - (t +  (MchiM*MchiM) + 2* (MMU*MMU) -  (MS0*MS0))* (sw*sw)) +  (MZ*MZ)*( (sw*sw)*(-(s*t) - s*u - 4*t*u +  (MMU*MMU)*(3*s - 3*t + u - 8* (MS0*MS0)) +  (MchiM*MchiM)*(-2*s + 8*t + 22* (MMU*MMU) - 8* (MS0*MS0)) + 4*t* (MS0*MS0) + 4*u* (MS0*MS0) +  (s*s) - 4* (t*t)) +  (cw*cw)*(s*t + s*u + 4*t*u - 4*t* (MS0*MS0) - 4*u* (MS0*MS0) + 2* (MchiM*MchiM)*(s - 4*t +  (MMU*MMU) + 4* (MS0*MS0)) +  (MMU*MMU)*(-3*s - 5*t - u + 8* (MS0*MS0)) -  (s*s) + 4* (t*t))) +  (sw*sw)*((-s - 3*t + u)* (MMU*MMU*MMU*MMU) +  (MchiM*MchiM)*(-((s - t + u)* (MMU*MMU)) + 2* (MMU*MMU*MMU*MMU) - s*(s + t + u - 2* (MS0*MS0))) -  (MMU*MMU)*(s*(-3*t + u) + (s + t - u)* (MS0*MS0) - 2* (s*s) +  ((t - u)*(t - u))) + s*((s - t - u)* (MS0*MS0) -  (s*s) +  (t*t) +  (u*u))) +  (cw*cw)*((s - t - u)* (MMU*MMU*MMU*MMU) +  (MchiM*MchiM)*(2* (MMU*MMU*MMU*MMU) + s*(s + t + u - 2* (MS0*MS0)) +  (MMU*MMU)*(-3*s - t - 3*u + 4* (MS0*MS0))) + s*((-s + t + u)* (MS0*MS0) +  (s*s) -  (t*t) -  (u*u)) +  (MMU*MMU)*(s*(t + u) + (s - 3*t - u)* (MS0*MS0) - 2* (s*s) +  ((t + u)*(t + u))))))/(token15*token16*token4*(-t +  (MchiM*MchiM))*(-s +  (MMU*MMU))* (MZ*MZ)* (token35*token35)) + (16* (token25*token25)* (token26*token26)* (token51*token51)* (token53*token53)* (token54*token54)*( (MZ*MZ*MZ*MZ)*( (cw*cw*cw*cw)*(2*(s + t + u) - 4* (MchiM*MchiM) -  (MMU*MMU)) + 2* (cw*cw)*(-2*(s + t + u) + 4* (MchiM*MchiM) + 7* (MMU*MMU))* (sw*sw) + (2*(s + t + u) - 4* (MchiM*MchiM) - 17* (MMU*MMU))* (sw*sw*sw*sw)) +  (MZ*MZ)*( (cw*cw*cw*cw)*(-2*s*t - (s + t + u)* (MMU*MMU) + 2* (MchiM*MchiM)*(s +  (MMU*MMU)) + 2* (MMU*MMU*MMU*MMU)) + 2* (cw*cw)*(2*s*t + (s - 5*(t + u))* (MMU*MMU) + 2* (MchiM*MchiM)*(-s + 5* (MMU*MMU)) + 4* (MMU*MMU*MMU*MMU))* (sw*sw) + (-2*s*t +  (MchiM*MchiM)*(2*s - 22* (MMU*MMU)) + (3*s + 15*t + 7*u)* (MMU*MMU) - 10* (MMU*MMU*MMU*MMU))* (sw*sw*sw*sw)) + (-s +  (MMU*MMU))*( (cw*cw*cw*cw)*(s*u - (s + t + u)* (MMU*MMU) +  (MchiM*MchiM)*(-s + 2* (MMU*MMU)) +  (MMU*MMU*MMU*MMU)) + 2* (cw*cw)*(-(s*u) +  (MchiM*MchiM)*(s - 2* (MMU*MMU)) + (s + t + u)* (MMU*MMU) -  (MMU*MMU*MMU*MMU))* (sw*sw) + (s*u - (s - 3*t + u)* (MMU*MMU) -  (MchiM*MchiM)*(s + 2* (MMU*MMU)) +  (MMU*MMU*MMU*MMU))* (sw*sw*sw*sw)) - 2* (MZ*MZ*MZ*MZ*MZ*MZ)* (( (cw*cw) -  (sw*sw))*( (cw*cw) -  (sw*sw)))))/( (MZ*MZ)* (( (MMU*MMU) - s)*( (MMU*MMU) - s))* (token35*token35)));
}
double DT::chiMS0wvm(const double &cos_t, const double &s){
	using namespace PAR;
	double t = (s* (MS0*MS0) + s* (MW*MW) -  (MS0*MS0)* (MW*MW) +  (MchiM*MchiM)*(s +  (MW*MW)) + cos_t*s*sqrt(( (MchiM*MchiM*MchiM*MchiM) - 2* (MchiM*MchiM)*(s +  (MS0*MS0)) +  (( (MS0*MS0) - s)*( (MS0*MS0) - s)))/s)*sqrt( (( (MW*MW) - s)*( (MW*MW) - s))/s) -  (s*s))/(2.*s);
	double u = -s - t + MchiM*MchiM + MS0*MS0 + MW*MW + 0*0;
	return ((16*(2*s*(-t +  (MchiM*MchiM))* (MW*MW) + 2*(s + t + u - 2* (MchiM*MchiM))* (MW*MW*MW*MW) - 2* (MW*MW*MW*MW*MW*MW) + (-u +  (MchiM*MchiM))* (s*s))* (token1*token1)* (token51*token51)* (token53*token53))/( (MW*MW)* (( (MMU*MMU) - s)*( (MMU*MMU) - s))* (token16*token16)* (token4*token4)) + (4*((-t +  (MchiM*MchiM))*(t*u + s* (Mchi0*Mchi0) - (s + t + u)* (MS0*MS0) +  (MS0*MS0*MS0*MS0)) + ((s + t - u)* (Mchi0*Mchi0) + t*(-s + t + u - 2* (MS0*MS0)) + 6*Mchi0*MchiM*(-t +  (MS0*MS0)))* (MW*MW) - (t +  (Mchi0*Mchi0) - 2* (MS0*MS0))* (MW*MW*MW*MW))* (token23*token23)* (token51*token51)* (token53*token53))/( (MW*MW)* (( (Mchi0*Mchi0) - t)*( (Mchi0*Mchi0) - t))* (token16*token16)* (token4*token4)) - (8*token1*token23* (token51*token51)* (token53*token53)*(-4*(Mchi0*MchiM + t -  (MS0*MS0))* (MW*MW*MW*MW) +  (MW*MW)*(2*Mchi0*MchiM*s + s*(t + u) - 4*(t + u)*(-t +  (MS0*MS0)) + 8* (MchiM*MchiM)*(-t +  (MS0*MS0)) -  (s*s)) + s*(2*Mchi0*MchiM*s +  (MchiM*MchiM)*(-s + t + u - 2* (MS0*MS0)) + (-s + t + u)* (MS0*MS0) +  (s*s) -  (t*t) -  (u*u))))/((-t +  (Mchi0*Mchi0))*(-s +  (MMU*MMU))* (MW*MW)* (token16*token16)* (token4*token4)));
}
