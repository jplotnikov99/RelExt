///////////////////CODE GENERATED VIA MATHEMATICA///////////////////


#include "../../model.hpp"

double DT::chiMchiMmumu(const double &cos_t, const double &s){
	double t =  (MchiM*MchiM) + (-s + cos_t*sqrt(s - 4* (MchiM*MchiM))*sqrt(s - 4* (MMU*MMU)))/2. +  (MMU*MMU);
	double u = -s - t + MchiM*MchiM + MchiM*MchiM + MMU*MMU + MMU*MMU;
	return (-8*token1*token3* (( (MchiM*MchiM) +  (MMU*MMU) - t)*( (MchiM*MchiM) +  (MMU*MMU) - t))* (token2*token2))/((-t +  (MA0*MA0))*(t -  (MS0*MS0))* (token4*token4)) + (4* (( (MchiM*MchiM) +  (MMU*MMU) - t)*( (MchiM*MchiM) +  (MMU*MMU) - t))* (token1*token1)* (token2*token2))/( (( (MS0*MS0) - t)*( (MS0*MS0) - t))* (token4*token4)) + (4* (( (MchiM*MchiM) +  (MMU*MMU) - t)*( (MchiM*MchiM) +  (MMU*MMU) - t))* (token2*token2)* (token3*token3))/( (( (MA0*MA0) - t)*( (MA0*MA0) - t))* (token4*token4)) - (8*token1*token3* (token2*token2)* (( (MchiM*MchiM) +  (MMU*MMU) - u)*( (MchiM*MchiM) +  (MMU*MMU) - u)))/((-u +  (MA0*MA0))*(u -  (MS0*MS0))* (token4*token4)) + (4* (token1*token1)* (token2*token2)* (( (MchiM*MchiM) +  (MMU*MMU) - u)*( (MchiM*MchiM) +  (MMU*MMU) - u)))/( (token4*token4)* (( (MA0*MA0) - u)*( (MA0*MA0) - u))) + (4* (token2*token2)* (token3*token3)* (( (MchiM*MchiM) +  (MMU*MMU) - u)*( (MchiM*MchiM) +  (MMU*MMU) - u)))/( (token4*token4)* (( (MS0*MS0) - u)*( (MS0*MS0) - u))) + (4*token1*token3* (token2*token2)*(2*(s - t - u)* (MchiM*MchiM) + 2* (MchiM*MchiM*MchiM*MchiM) + 2*(s - t - u)* (MMU*MMU) + 2* (MMU*MMU*MMU*MMU) -  (s*s) +  (t*t) +  (u*u)))/((-t +  (MA0*MA0))*(-u +  (MA0*MA0))* (token4*token4)) + (4*token1*token3* (token2*token2)*(2*(s - t - u)* (MchiM*MchiM) + 2* (MchiM*MchiM*MchiM*MchiM) + 2*(s - t - u)* (MMU*MMU) + 2* (MMU*MMU*MMU*MMU) -  (s*s) +  (t*t) +  (u*u)))/((-t +  (MS0*MS0))*(-u +  (MS0*MS0))* (token4*token4)) + (4* (token1*token1)* (token2*token2)*(2*(s - t - u)* (MchiM*MchiM) + 2* (MchiM*MchiM*MchiM*MchiM) + 2*(s - t - u)* (MMU*MMU) + 2* (MMU*MMU*MMU*MMU) -  (s*s) +  (t*t) +  (u*u)))/((-u +  (MA0*MA0))*(-t +  (MS0*MS0))* (token4*token4)) + (4* (token2*token2)* (token3*token3)*(2*(s - t - u)* (MchiM*MchiM) + 2* (MchiM*MchiM*MchiM*MchiM) + 2*(s - t - u)* (MMU*MMU) + 2* (MMU*MMU*MMU*MMU) -  (s*s) +  (t*t) +  (u*u)))/((-t +  (MA0*MA0))*(-u +  (MS0*MS0))* (token4*token4));
}
double DT::chiMCHIMHZ(const double &cos_t, const double &s){
	double t = (-s + 2* (MchiM*MchiM) +  (MH*MH) +  (MZ*MZ) + cos_t*sqrt(s - 4* (MchiM*MchiM))*sqrt(( (MH*MH*MH*MH) - 2* (MH*MH)*(s +  (MZ*MZ)) +  (( (MZ*MZ) - s)*( (MZ*MZ) - s)))/s))/2.;
	double u = -s - t + MchiM*MchiM + MchiM*MchiM + MH*MH + MZ*MZ;
	return (((-t +  (MchiM*MchiM))*(-u +  (MchiM*MchiM)) + (s - t - u + 6* (MchiM*MchiM))* (MZ*MZ) +  (MZ*MZ*MZ*MZ))* (token15*token15)* (token16*token16)* (token40*token40)* (token41*token41)* (token42*token42)* (token9*token9))/(2.* (MZ*MZ)* (token43*token43)* (token44*token44)* (token45*token45)*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ))));
}
double DT::chiMCHIMAA(const double &cos_t, const double &s){
	double t = (-s + cos_t*sqrt(s)*sqrt(s - 4* (MchiM*MchiM)))/2. +  (MchiM*MchiM);
	double u = -s - t + MchiM*MchiM + MchiM*MchiM + 0*0 + 0*0;
	return (-4*(s*(s + t + u) - (4*s + t + u)* (MchiM*MchiM) + 6* (MchiM*MchiM*MchiM*MchiM))* (token40*token40)* (token46*token46))/((-t +  (MchiM*MchiM))*(-u +  (MchiM*MchiM))) + (2*(t*u - (2*s + 5*t + 3*u)* (MchiM*MchiM) + 3* (MchiM*MchiM*MchiM*MchiM))* (token40*token40)* (token46*token46))/ (( (MchiM*MchiM) - t)*( (MchiM*MchiM) - t)) + (2*(t*u - (2*s + 3*t + 5*u)* (MchiM*MchiM) + 3* (MchiM*MchiM*MchiM*MchiM))* (token40*token40)* (token46*token46))/ (( (MchiM*MchiM) - u)*( (MchiM*MchiM) - u));
}
double DT::chiMCHIMAZ(const double &cos_t, const double &s){
	double t = (-s + 2* (MchiM*MchiM) +  (MZ*MZ) + cos_t*sqrt(s - 4* (MchiM*MchiM))*sqrt( ((- (MZ*MZ) + s)*(- (MZ*MZ) + s))/s))/2.;
	double u = -s - t + MchiM*MchiM + MchiM*MchiM + 0*0 + MZ*MZ;
	return ((2*(t*u - (2*s + 5*t + 3*u)* (MchiM*MchiM) + 3* (MchiM*MchiM*MchiM*MchiM))* (MZ*MZ) + (-2*(s + t + u) + 4* (MchiM*MchiM))* (MZ*MZ*MZ*MZ) + 2* (MZ*MZ*MZ*MZ*MZ*MZ) + (s + 2* (MchiM*MchiM))* (( (MchiM*MchiM) - t)*( (MchiM*MchiM) - t)))* (token15*token15)* (token16*token16)* (token40*token40)* (token46*token46))/( (MZ*MZ)* (( (MchiM*MchiM) - t)*( (MchiM*MchiM) - t))* (token17*token17)* (token18*token18)* (token4*token4)) - (((-u +  (MchiM*MchiM))*(s*u - (3*s + 2*t)* (MchiM*MchiM) + 2* (MchiM*MchiM*MchiM*MchiM)) + (u*(s - t + u) + (-s + t + u)* (MchiM*MchiM) + 6* (MchiM*MchiM*MchiM*MchiM))* (MZ*MZ) + (-u + 5* (MchiM*MchiM))* (MZ*MZ*MZ*MZ))* (token15*token15)* (token16*token16)* (token40*token40)* (token46*token46))/( (MZ*MZ)* (token17*token17)* (token18*token18)* (token4*token4)* (( (MchiM*MchiM) - u)*( (MchiM*MchiM) - u))) - ( (token15*token15)* (token16*token16)* (token40*token40)* (token46*token46)*(8*(-s +  (MchiM*MchiM))* (MZ*MZ*MZ*MZ) +  (MZ*MZ)*(t*(-t + u) + s*(5*t + 4*u) - (17*s + t + 5*u)* (MchiM*MchiM) + 22* (MchiM*MchiM*MchiM*MchiM) + 4* (s*s)) + (-t +  (MchiM*MchiM))*(2*(s + 2*t - 2*u)* (MchiM*MchiM) +  (s*s) -  (t*t) +  (u*u))))/((-t +  (MchiM*MchiM))*(-u +  (MchiM*MchiM))* (MZ*MZ)* (token17*token17)* (token18*token18)* (token4*token4));
}
double DT::chiMCHIMZZ(const double &cos_t, const double &s){
	double t =  (MchiM*MchiM) + (-s + cos_t*sqrt(s - 4* (MchiM*MchiM))*sqrt(s - 4* (MZ*MZ)))/2. +  (MZ*MZ);
	double u = -s - t + MchiM*MchiM + MchiM*MchiM + MZ*MZ + MZ*MZ;
	return (((-t +  (MchiM*MchiM))*(t*(-3*s + t + u) + (7*s - 7*t + 3*u)* (MchiM*MchiM) + 2* (MchiM*MchiM*MchiM*MchiM))* (MZ*MZ) + (-(t*(4*s + 3*t)) + (4*s + 6*t)* (MchiM*MchiM) - 19* (MchiM*MchiM*MchiM*MchiM))* (MZ*MZ*MZ*MZ) + 8*(t - 3* (MchiM*MchiM))* (MZ*MZ*MZ*MZ*MZ*MZ) - 4* (MZ*MZ*MZ*MZ*MZ*MZ*MZ*MZ) + (-u +  (MchiM*MchiM))* (( (MchiM*MchiM) - t)*( (MchiM*MchiM) - t)*( (MchiM*MchiM) - t)))* (token40*token40)* (token46*token46)* (token47*token47))/(2.* (MZ*MZ*MZ*MZ)* (( (MchiM*MchiM) - t)*( (MchiM*MchiM) - t))* (token43*token43)* (token48*token48)* (token49*token49)) + ( (token40*token40)* (token46*token46)* (token47*token47)*((-u +  (MchiM*MchiM))*(u*(-3*s + t + u) + (7*s + 3*t - 7*u)* (MchiM*MchiM) + 2* (MchiM*MchiM*MchiM*MchiM))* (MZ*MZ) + (-(u*(4*s + 3*u)) + (4*s + 6*u)* (MchiM*MchiM) - 19* (MchiM*MchiM*MchiM*MchiM))* (MZ*MZ*MZ*MZ) + 8*(u - 3* (MchiM*MchiM))* (MZ*MZ*MZ*MZ*MZ*MZ) - 4* (MZ*MZ*MZ*MZ*MZ*MZ*MZ*MZ) + (-t +  (MchiM*MchiM))* (( (MchiM*MchiM) - u)*( (MchiM*MchiM) - u)*( (MchiM*MchiM) - u))))/(2.* (MZ*MZ*MZ*MZ)* (token43*token43)* (token48*token48)* (token49*token49)* (( (MchiM*MchiM) - u)*( (MchiM*MchiM) - u))) + ( (token40*token40)* (token46*token46)* (token47*token47)*(-32*(-s +  (MchiM*MchiM))* (MZ*MZ*MZ*MZ*MZ*MZ) - 2* (MZ*MZ*MZ*MZ)*(3*t*u + 6*s*(t + u) + (-20*s + t + u)* (MchiM*MchiM) + 15* (MchiM*MchiM*MchiM*MchiM) + 4* (s*s) - 2* (t*t) - 2* (u*u)) + (-t +  (MchiM*MchiM))*(-u +  (MchiM*MchiM))*(-2*(t + u)* (MchiM*MchiM) + 2* (MchiM*MchiM*MchiM*MchiM) -  (s*s) +  (t*t) +  (u*u)) + 2* (MZ*MZ)*(s*t*u - 3*(s + t + u)* (MchiM*MchiM*MchiM*MchiM) + 2* (MchiM*MchiM*MchiM*MchiM*MchiM*MchiM) + (t + u)* (s*s) -  (t*t*t) +  (MchiM*MchiM)*(-4*t*u + s*(t + u) - 2* (s*s) + 5* (t*t) + 5* (u*u)) -  (u*u*u))))/(2.*(-t +  (MchiM*MchiM))*(-u +  (MchiM*MchiM))* (MZ*MZ*MZ*MZ)* (token43*token43)* (token48*token48)* (token49*token49));
}
double DT::chiMCHIMwW(const double &cos_t, const double &s){
	double t =  (MchiM*MchiM) + (-s + cos_t*sqrt(s - 4* (MchiM*MchiM))*sqrt(s - 4* (MW*MW)))/2. +  (MW*MW);
	double u = -s - t + MchiM*MchiM + MchiM*MchiM + MW*MW + MW*MW;
	return (((-t +  (MchiM*MchiM))*(6*Mchi0*MchiM*(s - t + u) + t*(-3*s + t + u) + 2*(s + t - u)* (Mchi0*Mchi0) - (s + 3*t + u)* (MchiM*MchiM) + 2* (MchiM*MchiM*MchiM*MchiM))* (MW*MW) + (24*Mchi0*MchiM*t - t*(4*s + 3*t) + 2*(s - 10*t + u)* (MchiM*MchiM) - 2* (Mchi0*Mchi0)*(-s - t + u + 10* (MchiM*MchiM)) +  (MchiM*MchiM*MchiM*MchiM))* (MW*MW*MW*MW) + 8*(-3*Mchi0*MchiM + t)* (MW*MW*MW*MW*MW*MW) - 4* (MW*MW*MW*MW*MW*MW*MW*MW) + (t*u + s* (Mchi0*Mchi0) - (s + t + u)* (MchiM*MchiM) +  (MchiM*MchiM*MchiM*MchiM))* (( (MchiM*MchiM) - t)*( (MchiM*MchiM) - t)))* (token40*token40)* (token46*token46))/(2.* (MW*MW*MW*MW)* (( (Mchi0*Mchi0) - t)*( (Mchi0*Mchi0) - t))* (token4*token4)* (token49*token49)) + ( (token46*token46)*(-16*(s - 8*(t + u) + 16* (MchiM*MchiM))* (MW*MW*MW*MW*MW*MW) - 128* (MW*MW*MW*MW*MW*MW*MW*MW) +  (s*s)*( (s*s) -  ((t - u)*(t - u))) + 4*s* (MW*MW)*(2*t*u + 8*(s - t - u)* (MchiM*MchiM) + 8* (MchiM*MchiM*MchiM*MchiM) + 3* (t*t) + 3* (u*u)) - 4* (MW*MW*MW*MW)*(10*t*u + 8*s*(t + u) + 16*(s - 2*(t + u))* (MchiM*MchiM) + 32* (MchiM*MchiM*MchiM*MchiM) +  (s*s) + 11* (t*t) + 11* (u*u))))/(8.* (MW*MW*MW*MW)* (s*s)) + (token40* (token46*token46)*(-8*(20*Mchi0*MchiM + 5*s - 7*t - u - 4* (MchiM*MchiM))* (MW*MW*MW*MW*MW*MW) - 32* (MW*MW*MW*MW*MW*MW*MW*MW) + s*(-t +  (MchiM*MchiM))*(4*Mchi0*MchiM*s + 2*t*u - 4*s* (MchiM*MchiM) +  (s*s) -  (t*t) -  (u*u)) - 4* (MW*MW*MW*MW)*(2*s*t - 4*s*u + 2*t*u + 2*(6*s + t + 3*u)* (MchiM*MchiM) + 2*Mchi0*MchiM*(-3*s - 13*t - 7*u + 20* (MchiM*MchiM)) - 16* (MchiM*MchiM*MchiM*MchiM) -  (s*s) + 5* (t*t) +  (u*u)) + 2* (MW*MW)*(2*s*t*u + 2*Mchi0*MchiM*s*(s - 3*(t + u) + 6* (MchiM*MchiM)) - 4*(t - u)* (MchiM*MchiM*MchiM*MchiM) - u* (s*s) +  (s*s*s) + 3*s* (t*t) + u* (t*t) - 2* (t*t*t) +  (MchiM*MchiM)*(-14*s*t + 10*s*u - 2*t*u + 3* (s*s) + 5* (t*t) - 3* (u*u)) - s* (u*u) +  (u*u*u))))/(4.*s*token4*token49*(-t +  (Mchi0*Mchi0))* (MW*MW*MW*MW)) - (token15*token16*token50*token7*(-s +  (MZ*MZ))* (token46*token46)*(-16*(s - 8*(t + u) + 16* (MchiM*MchiM))* (MW*MW*MW*MW*MW*MW) - 128* (MW*MW*MW*MW*MW*MW*MW*MW) +  (s*s)*( (s*s) -  ((t - u)*(t - u))) + 4*s* (MW*MW)*(2*t*u + 8*(s - t - u)* (MchiM*MchiM) + 8* (MchiM*MchiM*MchiM*MchiM) + 3* (t*t) + 3* (u*u)) - 4* (MW*MW*MW*MW)*(10*t*u + 8*s*(t + u) + 16*(s - 2*(t + u))* (MchiM*MchiM) + 32* (MchiM*MchiM*MchiM*MchiM) +  (s*s) + 11* (t*t) + 11* (u*u))))/(4.*s* (MW*MW*MW*MW)*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + ( (token15*token15)* (token16*token16)* (token46*token46)* (token50*token50)* (token7*token7)*(-16*(s - 8*(t + u) + 16* (MchiM*MchiM))* (MW*MW*MW*MW*MW*MW) - 128* (MW*MW*MW*MW*MW*MW*MW*MW) +  (s*s)*( (s*s) -  ((t - u)*(t - u))) + 4*s* (MW*MW)*(2*t*u + 8*(s - t - u)* (MchiM*MchiM) + 8* (MchiM*MchiM*MchiM*MchiM) + 3* (t*t) + 3* (u*u)) - 4* (MW*MW*MW*MW)*(10*t*u + 8*s*(t + u) + 16*(s - 2*(t + u))* (MchiM*MchiM) + 32* (MchiM*MchiM*MchiM*MchiM) +  (s*s) + 11* (t*t) + 11* (u*u))))/(8.* (MW*MW*MW*MW)*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + (token15*token16*token40*token50*token7*(-s +  (MZ*MZ))* (token46*token46)*(8*(20*Mchi0*MchiM + 5*s - 7*t - u - 4* (MchiM*MchiM))* (MW*MW*MW*MW*MW*MW) + 32* (MW*MW*MW*MW*MW*MW*MW*MW) + s*(-t +  (MchiM*MchiM))*(-4*Mchi0*MchiM*s - 2*t*u + 4*s* (MchiM*MchiM) -  (s*s) +  (t*t) +  (u*u)) + 4* (MW*MW*MW*MW)*(2*s*t - 4*s*u + 2*t*u + 2*(6*s + t + 3*u)* (MchiM*MchiM) + 2*Mchi0*MchiM*(-3*s - 13*t - 7*u + 20* (MchiM*MchiM)) - 16* (MchiM*MchiM*MchiM*MchiM) -  (s*s) + 5* (t*t) +  (u*u)) - 2* (MW*MW)*(2*s*t*u + 2*Mchi0*MchiM*s*(s - 3*(t + u) + 6* (MchiM*MchiM)) - 4*(t - u)* (MchiM*MchiM*MchiM*MchiM) - u* (s*s) +  (s*s*s) + 3*s* (t*t) + u* (t*t) - 2* (t*t*t) +  (MchiM*MchiM)*(-14*s*t + 10*s*u - 2*t*u + 3* (s*s) + 5* (t*t) - 3* (u*u)) - s* (u*u) +  (u*u*u))))/(4.*token4*token49*(-t +  (Mchi0*Mchi0))* (MW*MW*MW*MW)*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ))));
}
double DT::chiMCHIMVEve(const double &cos_t, const double &s){
	double t = (-s + cos_t*sqrt(s)*sqrt(s - 4* (MchiM*MchiM)))/2. +  (MchiM*MchiM);
	double u = -s - t + MchiM*MchiM + MchiM*MchiM + 0*0 + 0*0;
	return (16* (token19*token19)* (token46*token46)* (token51*token51)*(2*(s - t - u)* (MchiM*MchiM) + 2* (MchiM*MchiM*MchiM*MchiM) +  (t*t) +  (u*u)))/(9.* (token43*token43)* (token48*token48)* (token49*token49)*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ))));
}
double DT::chiMCHIMVMvm(const double &cos_t, const double &s){
	double t = (-s + cos_t*sqrt(s)*sqrt(s - 4* (MchiM*MchiM)))/2. +  (MchiM*MchiM);
	double u = -s - t + MchiM*MchiM + MchiM*MchiM + 0*0 + 0*0;
	return (16* (token19*token19)* (token46*token46)* (token51*token51)*(2*(s - t - u)* (MchiM*MchiM) + 2* (MchiM*MchiM*MchiM*MchiM) +  (t*t) +  (u*u)))/(9.* (token43*token43)* (token48*token48)* (token49*token49)*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ))));
}
double DT::chiMCHIMVTvt(const double &cos_t, const double &s){
	double t = (-s + cos_t*sqrt(s)*sqrt(s - 4* (MchiM*MchiM)))/2. +  (MchiM*MchiM);
	double u = -s - t + MchiM*MchiM + MchiM*MchiM + 0*0 + 0*0;
	return (16* (token19*token19)* (token46*token46)* (token51*token51)*(2*(s - t - u)* (MchiM*MchiM) + 2* (MchiM*MchiM*MchiM*MchiM) +  (t*t) +  (u*u)))/(9.* (token43*token43)* (token48*token48)* (token49*token49)*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ))));
}
double DT::chiMCHIMEe(const double &cos_t, const double &s){
	double t =  (MchiM*MchiM) + (-s + cos_t*sqrt(s - 4* (MchiM*MchiM))*sqrt(s - 4* (Me*Me)))/2. +  (Me*Me);
	double u = -s - t + MchiM*MchiM + MchiM*MchiM + Me*Me + Me*Me;
	return (2* (token46*token46)*(2* (MchiM*MchiM*MchiM*MchiM) + 2*(s - t - u)* (Me*Me) + 2* (MchiM*MchiM)*(s - t - u + 2* (Me*Me)) + 2* (Me*Me*Me*Me) +  (t*t) +  (u*u)))/ (s*s) - (4*token1*token13*token14*(-s +  (MZ*MZ))*( (cw*cw*cw*cw) - 4* (cw*cw)* (sw*sw) + 3* (sw*sw*sw*sw))* (token46*token46)*(2* (MchiM*MchiM*MchiM*MchiM) + 2*(s - t - u)* (Me*Me) + 2* (MchiM*MchiM)*(s - t - u + 2* (Me*Me)) + 2* (Me*Me*Me*Me) +  (t*t) +  (u*u)))/(s*token17*token18*token4*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + (4* (token1*token1)* (token13*token13)* (token14*token14)* (token46*token46)*( (cw*cw*cw*cw)*(2*(s - t - u)* (MchiM*MchiM) + 2* (MchiM*MchiM*MchiM*MchiM) - 2*(t + u)* (Me*Me) + 2* (Me*Me*Me*Me) +  (t*t) +  (u*u)) - 2* (cw*cw)* (sw*sw)*(2* (MchiM*MchiM*MchiM*MchiM) + (4*s - 2*(t + u))* (Me*Me) + 2* (MchiM*MchiM)*(s - t - u + 4* (Me*Me)) + 2* (Me*Me*Me*Me) +  (t*t) +  (u*u)) +  (sw*sw*sw*sw)*(10* (MchiM*MchiM*MchiM*MchiM) + 2*(4*s - 5*(t + u))* (Me*Me) + 2* (MchiM*MchiM)*(5*s - 5*t - 5*u + 8* (Me*Me)) + 10* (Me*Me*Me*Me) + 5*( (t*t) +  (u*u))))* (( (cw*cw) -  (sw*sw))*( (cw*cw) -  (sw*sw))))/( (token17*token17)* (token18*token18)* (token4*token4)*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ))));
}
double DT::chiMCHIMMUmu(const double &cos_t, const double &s){
	double t =  (MchiM*MchiM) + (-s + cos_t*sqrt(s - 4* (MchiM*MchiM))*sqrt(s - 4* (MMU*MMU)))/2. +  (MMU*MMU);
	double u = -s - t + MchiM*MchiM + MchiM*MchiM + MMU*MMU + MMU*MMU;
	return (-8* (token1*token1)* (token2*token2)* (( (MchiM*MchiM) +  (MMU*MMU) - u)*( (MchiM*MchiM) +  (MMU*MMU) - u)))/((-u +  (MA0*MA0))*(u -  (MS0*MS0))* (token4*token4)) + (4* (token1*token1)* (token2*token2)* (( (MchiM*MchiM) +  (MMU*MMU) - u)*( (MchiM*MchiM) +  (MMU*MMU) - u)))/( (token4*token4)* (( (MA0*MA0) - u)*( (MA0*MA0) - u))) + (4* (token1*token1)* (token2*token2)* (( (MchiM*MchiM) +  (MMU*MMU) - u)*( (MchiM*MchiM) +  (MMU*MMU) - u)))/( (token4*token4)* (( (MS0*MS0) - u)*( (MS0*MS0) - u))) - (4*token1*token2*token46*( (MchiM*MchiM*MchiM*MchiM) + (s - 2*u)* (MMU*MMU) +  (MchiM*MchiM)*(s - 2*u + 2* (MMU*MMU)) +  (MMU*MMU*MMU*MMU) +  (u*u)))/(s*token4*(-u +  (MA0*MA0))) - (4*token1*token2*token46*( (MchiM*MchiM*MchiM*MchiM) + (s - 2*u)* (MMU*MMU) +  (MchiM*MchiM)*(s - 2*u + 2* (MMU*MMU)) +  (MMU*MMU*MMU*MMU) +  (u*u)))/(s*token4*(-u +  (MS0*MS0))) + (2* (token46*token46)*(2* (MchiM*MchiM*MchiM*MchiM) + 2*(s - t - u)* (MMU*MMU) + 2* (MchiM*MchiM)*(s - t - u + 2* (MMU*MMU)) + 2* (MMU*MMU*MMU*MMU) +  (t*t) +  (u*u)))/ (s*s) - (4*token1*token13*token14*(-s +  (MZ*MZ))*( (cw*cw*cw*cw) - 4* (cw*cw)* (sw*sw) + 3* (sw*sw*sw*sw))* (token46*token46)*(2* (MchiM*MchiM*MchiM*MchiM) + 2*(s - t - u)* (MMU*MMU) + 2* (MchiM*MchiM)*(s - t - u + 2* (MMU*MMU)) + 2* (MMU*MMU*MMU*MMU) +  (t*t) +  (u*u)))/(s*token17*token18*token4*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + (8*token13*token14*token2*token46*(-s +  (MZ*MZ))*( (cw*cw) -  (sw*sw))* (token1*token1)*( (cw*cw)*((s - 2*u)* (MchiM*MchiM) +  (MchiM*MchiM*MchiM*MchiM) +  (( (MMU*MMU) - u)*( (MMU*MMU) - u))) -  (sw*sw)*( (MchiM*MchiM*MchiM*MchiM) + 2*(s - u)* (MMU*MMU) +  (MchiM*MchiM)*(s - 2*u + 4* (MMU*MMU)) +  (MMU*MMU*MMU*MMU) +  (u*u))))/(token17*token18*(-u +  (MA0*MA0))* (token4*token4)*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + (8*token13*token14*token2*token46*(-s +  (MZ*MZ))*( (cw*cw) -  (sw*sw))* (token1*token1)*( (cw*cw)*((s - 2*u)* (MchiM*MchiM) +  (MchiM*MchiM*MchiM*MchiM) +  (( (MMU*MMU) - u)*( (MMU*MMU) - u))) -  (sw*sw)*( (MchiM*MchiM*MchiM*MchiM) + 2*(s - u)* (MMU*MMU) +  (MchiM*MchiM)*(s - 2*u + 4* (MMU*MMU)) +  (MMU*MMU*MMU*MMU) +  (u*u))))/(token17*token18*(-u +  (MS0*MS0))* (token4*token4)*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + (4* (token1*token1)* (token13*token13)* (token14*token14)* (token46*token46)*( (cw*cw*cw*cw)*(2*(s - t - u)* (MchiM*MchiM) + 2* (MchiM*MchiM*MchiM*MchiM) - 2*(t + u)* (MMU*MMU) + 2* (MMU*MMU*MMU*MMU) +  (t*t) +  (u*u)) - 2* (cw*cw)* (sw*sw)*(2* (MchiM*MchiM*MchiM*MchiM) + (4*s - 2*(t + u))* (MMU*MMU) + 2* (MchiM*MchiM)*(s - t - u + 4* (MMU*MMU)) + 2* (MMU*MMU*MMU*MMU) +  (t*t) +  (u*u)) +  (sw*sw*sw*sw)*(10* (MchiM*MchiM*MchiM*MchiM) + 2*(4*s - 5*(t + u))* (MMU*MMU) + 2* (MchiM*MchiM)*(5*s - 5*t - 5*u + 8* (MMU*MMU)) + 10* (MMU*MMU*MMU*MMU) + 5*( (t*t) +  (u*u))))* (( (cw*cw) -  (sw*sw))*( (cw*cw) -  (sw*sw))))/( (token17*token17)* (token18*token18)* (token4*token4)*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ))));
}
double DT::chiMCHIMTAta(const double &cos_t, const double &s){
	double t =  (MchiM*MchiM) + (-s + cos_t*sqrt(s - 4* (MchiM*MchiM))*sqrt(s - 4* (MTA*MTA)))/2. +  (MTA*MTA);
	double u = -s - t + MchiM*MchiM + MchiM*MchiM + MTA*MTA + MTA*MTA;
	return (2* (token46*token46)*(2* (MchiM*MchiM*MchiM*MchiM) + 2*(s - t - u)* (MTA*MTA) + 2* (MchiM*MchiM)*(s - t - u + 2* (MTA*MTA)) + 2* (MTA*MTA*MTA*MTA) +  (t*t) +  (u*u)))/ (s*s) - (4*token1*token13*token14*(-s +  (MZ*MZ))*( (cw*cw*cw*cw) - 4* (cw*cw)* (sw*sw) + 3* (sw*sw*sw*sw))* (token46*token46)*(2* (MchiM*MchiM*MchiM*MchiM) + 2*(s - t - u)* (MTA*MTA) + 2* (MchiM*MchiM)*(s - t - u + 2* (MTA*MTA)) + 2* (MTA*MTA*MTA*MTA) +  (t*t) +  (u*u)))/(s*token17*token18*token4*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + (4* (token1*token1)* (token13*token13)* (token14*token14)* (token46*token46)*( (cw*cw*cw*cw)*(2*(s - t - u)* (MchiM*MchiM) + 2* (MchiM*MchiM*MchiM*MchiM) - 2*(t + u)* (MTA*MTA) + 2* (MTA*MTA*MTA*MTA) +  (t*t) +  (u*u)) - 2* (cw*cw)* (sw*sw)*(2* (MchiM*MchiM*MchiM*MchiM) + (4*s - 2*(t + u))* (MTA*MTA) + 2* (MchiM*MchiM)*(s - t - u + 4* (MTA*MTA)) + 2* (MTA*MTA*MTA*MTA) +  (t*t) +  (u*u)) +  (sw*sw*sw*sw)*(10* (MchiM*MchiM*MchiM*MchiM) + 2*(4*s - 5*(t + u))* (MTA*MTA) + 2* (MchiM*MchiM)*(5*s - 5*t - 5*u + 8* (MTA*MTA)) + 10* (MTA*MTA*MTA*MTA) + 5*( (t*t) +  (u*u))))* (( (cw*cw) -  (sw*sw))*( (cw*cw) -  (sw*sw))))/( (token17*token17)* (token18*token18)* (token4*token4)*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ))));
}
double DT::chiMCHIMUu(const double &cos_t, const double &s){
	double t =  (MchiM*MchiM) + (-s + cos_t*sqrt(s - 4* (MchiM*MchiM))*sqrt(s - 4* (MU*MU)))/2. +  (MU*MU);
	double u = -s - t + MchiM*MchiM + MchiM*MchiM + MU*MU + MU*MU;
	return (6* (token27*token27)* (token46*token46)*(2* (MchiM*MchiM*MchiM*MchiM) + 2*(s - t - u)* (MU*MU) + 2* (MchiM*MchiM)*(s - t - u + 2* (MU*MU)) + 2* (MU*MU*MU*MU) +  (t*t) +  (u*u)))/( (s*s)* (token28*token28)) - (12*token13*token14*token15*token16*token27*token52*(-s +  (MZ*MZ))*(3* (cw*cw) - 5* (sw*sw))* (token46*token46)*(2* (MchiM*MchiM*MchiM*MchiM) + 2*(s - t - u)* (MU*MU) + 2* (MchiM*MchiM)*(s - t - u + 2* (MU*MU)) + 2* (MU*MU*MU*MU) +  (t*t) +  (u*u)))/(s*token17*token18*token28*token4*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + (12* (token13*token13)* (token14*token14)* (token15*token15)* (token16*token16)* (token46*token46)* (token52*token52)*(9* (cw*cw*cw*cw)*(2*(s - t - u)* (MchiM*MchiM) + 2* (MchiM*MchiM*MchiM*MchiM) - 2*(t + u)* (MU*MU) + 2* (MU*MU*MU*MU) +  (t*t) +  (u*u)) - 6* (cw*cw)* (sw*sw)*(2* (MchiM*MchiM*MchiM*MchiM) + (8*s - 2*(t + u))* (MU*MU) + 2* (MchiM*MchiM)*(s - t - u + 8* (MU*MU)) + 2* (MU*MU*MU*MU) +  (t*t) +  (u*u)) +  (sw*sw*sw*sw)*(34* (MchiM*MchiM*MchiM*MchiM) + 2*(8*s - 17*(t + u))* (MU*MU) +  (MchiM*MchiM)*(34*(s - t - u) + 32* (MU*MU)) + 34* (MU*MU*MU*MU) + 17*( (t*t) +  (u*u)))))/( (token17*token17)* (token18*token18)* (token4*token4)*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ))));
}
double DT::chiMCHIMCc(const double &cos_t, const double &s){
	double t =  (MC*MC) + (-s + cos_t*sqrt(s - 4* (MC*MC))*sqrt(s - 4* (MchiM*MchiM)))/2. +  (MchiM*MchiM);
	double u = -s - t + MchiM*MchiM + MchiM*MchiM + MC*MC + MC*MC;
	return (6* (token27*token27)* (token46*token46)*(2* (MC*MC*MC*MC) + 2*(s - t - u)* (MchiM*MchiM) + 2* (MC*MC)*(s - t - u + 2* (MchiM*MchiM)) + 2* (MchiM*MchiM*MchiM*MchiM) +  (t*t) +  (u*u)))/( (s*s)* (token28*token28)) - (12*token13*token14*token15*token16*token27*token52*(-s +  (MZ*MZ))*(3* (cw*cw) - 5* (sw*sw))* (token46*token46)*(2* (MC*MC*MC*MC) + 2*(s - t - u)* (MchiM*MchiM) + 2* (MC*MC)*(s - t - u + 2* (MchiM*MchiM)) + 2* (MchiM*MchiM*MchiM*MchiM) +  (t*t) +  (u*u)))/(s*token17*token18*token28*token4*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + (12* (token13*token13)* (token14*token14)* (token15*token15)* (token16*token16)* (token46*token46)* (token52*token52)*(9* (cw*cw*cw*cw)*(-2*(t + u)* (MC*MC) + 2* (MC*MC*MC*MC) + 2*(s - t - u)* (MchiM*MchiM) + 2* (MchiM*MchiM*MchiM*MchiM) +  (t*t) +  (u*u)) - 6* (cw*cw)* (sw*sw)*(2* (MC*MC*MC*MC) + 2*(s - t - u)* (MchiM*MchiM) + 2* (MC*MC)*(4*s - t - u + 8* (MchiM*MchiM)) + 2* (MchiM*MchiM*MchiM*MchiM) +  (t*t) +  (u*u)) +  (sw*sw*sw*sw)*(34* (MC*MC*MC*MC) + 2* (MC*MC)*(8*s - 17*(t + u) + 16* (MchiM*MchiM)) + 17*(2*(s - t - u)* (MchiM*MchiM) + 2* (MchiM*MchiM*MchiM*MchiM) +  (t*t) +  (u*u)))))/( (token17*token17)* (token18*token18)* (token4*token4)*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ))));
}
double DT::chiMCHIMTt(const double &cos_t, const double &s){
	double t =  (MchiM*MchiM) + (-s + cos_t*sqrt(s - 4* (MchiM*MchiM))*sqrt(s - 4* (MT*MT)))/2. +  (MT*MT);
	double u = -s - t + MchiM*MchiM + MchiM*MchiM + MT*MT + MT*MT;
	return (6* (token27*token27)* (token46*token46)*(2* (MchiM*MchiM*MchiM*MchiM) + 2*(s - t - u)* (MT*MT) + 2* (MchiM*MchiM)*(s - t - u + 2* (MT*MT)) + 2* (MT*MT*MT*MT) +  (t*t) +  (u*u)))/( (s*s)* (token28*token28)) - (12*token13*token14*token15*token16*token27*token52*(-s +  (MZ*MZ))*(3* (cw*cw) - 5* (sw*sw))* (token46*token46)*(2* (MchiM*MchiM*MchiM*MchiM) + 2*(s - t - u)* (MT*MT) + 2* (MchiM*MchiM)*(s - t - u + 2* (MT*MT)) + 2* (MT*MT*MT*MT) +  (t*t) +  (u*u)))/(s*token17*token18*token28*token4*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + (12* (token13*token13)* (token14*token14)* (token15*token15)* (token16*token16)* (token46*token46)* (token52*token52)*(9* (cw*cw*cw*cw)*(2*(s - t - u)* (MchiM*MchiM) + 2* (MchiM*MchiM*MchiM*MchiM) - 2*(t + u)* (MT*MT) + 2* (MT*MT*MT*MT) +  (t*t) +  (u*u)) - 6* (cw*cw)* (sw*sw)*(2* (MchiM*MchiM*MchiM*MchiM) + (8*s - 2*(t + u))* (MT*MT) + 2* (MchiM*MchiM)*(s - t - u + 8* (MT*MT)) + 2* (MT*MT*MT*MT) +  (t*t) +  (u*u)) +  (sw*sw*sw*sw)*(34* (MchiM*MchiM*MchiM*MchiM) + 2*(8*s - 17*(t + u))* (MT*MT) +  (MchiM*MchiM)*(34*(s - t - u) + 32* (MT*MT)) + 34* (MT*MT*MT*MT) + 17*( (t*t) +  (u*u)))))/( (token17*token17)* (token18*token18)* (token4*token4)*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ))));
}
double DT::chiMCHIMDd(const double &cos_t, const double &s){
	double t =  (MchiM*MchiM) + (-s + cos_t*sqrt(s - 4* (MchiM*MchiM))*sqrt(s - 4* (MD*MD)))/2. +  (MD*MD);
	double u = -s - t + MchiM*MchiM + MchiM*MchiM + MD*MD + MD*MD;
	return (6* (token46*token46)*(2* (MchiM*MchiM*MchiM*MchiM) + 2*(s - t - u)* (MD*MD) + 2* (MchiM*MchiM)*(s - t - u + 2* (MD*MD)) + 2* (MD*MD*MD*MD) +  (t*t) +  (u*u)))/( (s*s)* (token28*token28)) - (12*token13*token14*token15*token16*token53*(-s +  (MZ*MZ))*(3* (cw*cw) -  (sw*sw))* (token46*token46)*(2* (MchiM*MchiM*MchiM*MchiM) + 2*(s - t - u)* (MD*MD) + 2* (MchiM*MchiM)*(s - t - u + 2* (MD*MD)) + 2* (MD*MD*MD*MD) +  (t*t) +  (u*u)))/(s*token17*token18*token28*token4*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + (12* (token13*token13)* (token14*token14)* (token15*token15)* (token16*token16)* (token46*token46)* (token53*token53)*(9* (cw*cw*cw*cw)*(2*(s - t - u)* (MchiM*MchiM) + 2* (MchiM*MchiM*MchiM*MchiM) - 2*(t + u)* (MD*MD) + 2* (MD*MD*MD*MD) +  (t*t) +  (u*u)) + 6* (cw*cw)* (sw*sw)*(2* (MchiM*MchiM*MchiM*MchiM) - 2*(2*s + t + u)* (MD*MD) - 2* (MchiM*MchiM)*(-s + t + u + 4* (MD*MD)) + 2* (MD*MD*MD*MD) +  (t*t) +  (u*u)) +  (sw*sw*sw*sw)*(10* (MchiM*MchiM*MchiM*MchiM) - 2*(4*s + 5*(t + u))* (MD*MD) - 2* (MchiM*MchiM)*(5*(-s + t + u) + 8* (MD*MD)) + 10* (MD*MD*MD*MD) + 5*( (t*t) +  (u*u)))))/( (token17*token17)* (token18*token18)* (token4*token4)*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ))));
}
double DT::chiMCHIMSs(const double &cos_t, const double &s){
	double t =  (MchiM*MchiM) + (-s + cos_t*sqrt(s - 4* (MchiM*MchiM))*sqrt(s - 4* (MS*MS)))/2. +  (MS*MS);
	double u = -s - t + MchiM*MchiM + MchiM*MchiM + MS*MS + MS*MS;
	return (12* (token1*token1)* (token54*token54)* (( (MchiM*MchiM) +  (MS*MS) - u)*( (MchiM*MchiM) +  (MS*MS) - u)))/ (( (MphiQ*MphiQ) - u)*( (MphiQ*MphiQ) - u)) - (12*token1*token46*token54*( (MchiM*MchiM*MchiM*MchiM) + (s - 2*u)* (MS*MS) +  (MchiM*MchiM)*(s - 2*u + 2* (MS*MS)) +  (MS*MS*MS*MS) +  (u*u)))/(s*token28*(-u +  (MphiQ*MphiQ))) + (6* (token46*token46)*(2* (MchiM*MchiM*MchiM*MchiM) + 2*(s - t - u)* (MS*MS) + 2* (MchiM*MchiM)*(s - t - u + 2* (MS*MS)) + 2* (MS*MS*MS*MS) +  (t*t) +  (u*u)))/( (s*s)* (token28*token28)) - (12*token13*token14*token15*token16*token53*(-s +  (MZ*MZ))*(3* (cw*cw) -  (sw*sw))* (token46*token46)*(2* (MchiM*MchiM*MchiM*MchiM) + 2*(s - t - u)* (MS*MS) + 2* (MchiM*MchiM)*(s - t - u + 2* (MS*MS)) + 2* (MS*MS*MS*MS) +  (t*t) +  (u*u)))/(s*token17*token18*token28*token4*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + (24*token1*token13*token14*token15*token16*token46*token53*token54*(-s +  (MZ*MZ))*(3* (cw*cw)*((s - 2*u)* (MchiM*MchiM) +  (MchiM*MchiM*MchiM*MchiM) +  (( (MS*MS) - u)*( (MS*MS) - u))) +  (sw*sw)*( (MchiM*MchiM*MchiM*MchiM) +  (MchiM*MchiM)*(s - 2*u - 4* (MS*MS)) - 2*(s + u)* (MS*MS) +  (MS*MS*MS*MS) +  (u*u))))/(token17*token18*token4*(-u +  (MphiQ*MphiQ))*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + (12* (token13*token13)* (token14*token14)* (token15*token15)* (token16*token16)* (token46*token46)* (token53*token53)*(9* (cw*cw*cw*cw)*(2*(s - t - u)* (MchiM*MchiM) + 2* (MchiM*MchiM*MchiM*MchiM) - 2*(t + u)* (MS*MS) + 2* (MS*MS*MS*MS) +  (t*t) +  (u*u)) + 6* (cw*cw)* (sw*sw)*(2* (MchiM*MchiM*MchiM*MchiM) - 2*(2*s + t + u)* (MS*MS) - 2* (MchiM*MchiM)*(-s + t + u + 4* (MS*MS)) + 2* (MS*MS*MS*MS) +  (t*t) +  (u*u)) +  (sw*sw*sw*sw)*(10* (MchiM*MchiM*MchiM*MchiM) - 2*(4*s + 5*(t + u))* (MS*MS) - 2* (MchiM*MchiM)*(5*(-s + t + u) + 8* (MS*MS)) + 10* (MS*MS*MS*MS) + 5*( (t*t) +  (u*u)))))/( (token17*token17)* (token18*token18)* (token4*token4)*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ))));
}
double DT::chiMCHIMSb(const double &cos_t, const double &s){
	double t = (-s +  (MB*MB) + 2* (MchiM*MchiM) +  (MS*MS) + cos_t*sqrt(s - 4* (MchiM*MchiM))*sqrt(( (MB*MB*MB*MB) - 2* (MB*MB)*(s +  (MS*MS)) +  (( (MS*MS) - s)*( (MS*MS) - s)))/s))/2.;
	double u = -s - t + MchiM*MchiM + MchiM*MchiM + MS*MS + MB*MB;
	return (12*(-u +  (MB*MB) +  (MchiM*MchiM))*(-u +  (MchiM*MchiM) +  (MS*MS))* (token1*token1)* (token22*token22)* (token26*token26))/ (( (MphiQ*MphiQ) - u)*( (MphiQ*MphiQ) - u));
}
double DT::chiMCHIMsB(const double &cos_t, const double &s){
	double t = (-s +  (MB*MB) + 2* (MchiM*MchiM) +  (MS*MS) + cos_t*sqrt(s - 4* (MchiM*MchiM))*sqrt(( (MB*MB*MB*MB) - 2* (MB*MB)*(s +  (MS*MS)) +  (( (MS*MS) - s)*( (MS*MS) - s)))/s))/2.;
	double u = -s - t + MchiM*MchiM + MchiM*MchiM + MS*MS + MB*MB;
	return (12*(-t +  (MB*MB) +  (MchiM*MchiM))*(-t +  (MchiM*MchiM) +  (MS*MS))* (token22*token22)* (token26*token26)* (token3*token3))/ (( (MphiQ*MphiQ) - t)*( (MphiQ*MphiQ) - t));
}
double DT::chiMCHIMBb(const double &cos_t, const double &s){
	double t =  (MB*MB) + (-s + cos_t*sqrt(s - 4* (MB*MB))*sqrt(s - 4* (MchiM*MchiM)))/2. +  (MchiM*MchiM);
	double u = -s - t + MchiM*MchiM + MchiM*MchiM + MB*MB + MB*MB;
	return (12* (token1*token1)* (token55*token55)* (( (MB*MB) +  (MchiM*MchiM) - u)*( (MB*MB) +  (MchiM*MchiM) - u)))/ (( (MphiQ*MphiQ) - u)*( (MphiQ*MphiQ) - u)) - (12*token1*token46*token55*( (MB*MB*MB*MB) + (s - 2*u)* (MchiM*MchiM) +  (MB*MB)*(s - 2*u + 2* (MchiM*MchiM)) +  (MchiM*MchiM*MchiM*MchiM) +  (u*u)))/(s*token28*(-u +  (MphiQ*MphiQ))) + (6* (token46*token46)*(2* (MB*MB*MB*MB) + 2*(s - t - u)* (MchiM*MchiM) + 2* (MB*MB)*(s - t - u + 2* (MchiM*MchiM)) + 2* (MchiM*MchiM*MchiM*MchiM) +  (t*t) +  (u*u)))/( (s*s)* (token28*token28)) - (12*token13*token14*token15*token16*token53*(-s +  (MZ*MZ))*(3* (cw*cw) -  (sw*sw))* (token46*token46)*(2* (MB*MB*MB*MB) + 2*(s - t - u)* (MchiM*MchiM) + 2* (MB*MB)*(s - t - u + 2* (MchiM*MchiM)) + 2* (MchiM*MchiM*MchiM*MchiM) +  (t*t) +  (u*u)))/(s*token17*token18*token28*token4*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + (24*token1*token13*token14*token15*token16*token46*token53*token55*(-s +  (MZ*MZ))*(3* (cw*cw)*(-2*u* (MB*MB) +  (MB*MB*MB*MB) + (s - 2*u)* (MchiM*MchiM) +  (MchiM*MchiM*MchiM*MchiM) +  (u*u)) +  (sw*sw)*( (MB*MB*MB*MB) + (s - 2*u)* (MchiM*MchiM) - 2* (MB*MB)*(s + u + 2* (MchiM*MchiM)) +  (MchiM*MchiM*MchiM*MchiM) +  (u*u))))/(token17*token18*token4*(-u +  (MphiQ*MphiQ))*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + (12* (token13*token13)* (token14*token14)* (token15*token15)* (token16*token16)* (token46*token46)* (token53*token53)*(9* (cw*cw*cw*cw)*(-2*(t + u)* (MB*MB) + 2* (MB*MB*MB*MB) + 2*(s - t - u)* (MchiM*MchiM) + 2* (MchiM*MchiM*MchiM*MchiM) +  (t*t) +  (u*u)) + 6* (cw*cw)* (sw*sw)*(2* (MB*MB*MB*MB) + 2*(s - t - u)* (MchiM*MchiM) - 2* (MB*MB)*(2*s + t + u + 4* (MchiM*MchiM)) + 2* (MchiM*MchiM*MchiM*MchiM) +  (t*t) +  (u*u)) +  (sw*sw*sw*sw)*(10* (MB*MB*MB*MB) - 2* (MB*MB)*(4*s + 5*(t + u) + 8* (MchiM*MchiM)) + 5*(2*(s - t - u)* (MchiM*MchiM) + 2* (MchiM*MchiM*MchiM*MchiM) +  (t*t) +  (u*u)))))/( (token17*token17)* (token18*token18)* (token4*token4)*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ))));
}
