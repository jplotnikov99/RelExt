///////////////////CODE GENERATED VIA MATHEMATICA///////////////////


#include "../../model.hpp"

double DT::chiMchi0vmmu(const double &cos_t, const double &s){
	double t = (s* (MchiM*MchiM) + s* (MMU*MMU) -  (MchiM*MchiM)* (MMU*MMU) +  (Mchi0*Mchi0)*(s +  (MMU*MMU)) + cos_t*s*sqrt(( (Mchi0*Mchi0*Mchi0*Mchi0) - 2* (Mchi0*Mchi0)*(s +  (MchiM*MchiM)) +  (( (MchiM*MchiM) - s)*( (MchiM*MchiM) - s)))/s)*sqrt( (( (MMU*MMU) - s)*( (MMU*MMU) - s))/s) -  (s*s))/(2.*s);
	double u = -s - t + MchiM*MchiM + Mchi0*Mchi0 + 0*0 + MMU*MMU;
	return (-16*token1*token3*(-u +  (Mchi0*Mchi0))*(-u +  (MchiM*MchiM) +  (MMU*MMU))* (token2*token2))/(3.*(-u +  (MA0*MA0))*(u -  (MS0*MS0))* (token4*token4)) + (8*(-u +  (Mchi0*Mchi0))*(-u +  (MchiM*MchiM) +  (MMU*MMU))* (token1*token1)* (token2*token2))/(3.* (token4*token4)* (( (MA0*MA0) - u)*( (MA0*MA0) - u))) + (8*(-u +  (Mchi0*Mchi0))*(-u +  (MchiM*MchiM) +  (MMU*MMU))* (token2*token2)* (token3*token3))/(3.* (token4*token4)* (( (MS0*MS0) - u)*( (MS0*MS0) - u)));
}
double DT::chiMCHI0Hw(const double &cos_t, const double &s){
	double t = (s* (MchiM*MchiM) + s* (MH*MH) +  (MchiM*MchiM)* (MH*MH) + s* (MW*MW) -  (MchiM*MchiM)* (MW*MW) +  (Mchi0*Mchi0)*(s -  (MH*MH) +  (MW*MW)) + cos_t*s*sqrt(( (Mchi0*Mchi0*Mchi0*Mchi0) - 2* (Mchi0*Mchi0)*(s +  (MchiM*MchiM)) +  (( (MchiM*MchiM) - s)*( (MchiM*MchiM) - s)))/s)*sqrt(( (MH*MH*MH*MH) - 2* (MH*MH)*(s +  (MW*MW)) +  (( (MW*MW) - s)*( (MW*MW) - s)))/s) -  (s*s))/(2.*s);
	double u = -s - t + MchiM*MchiM + Mchi0*Mchi0 + MH*MH + MW*MW;
	return (((-t +  (Mchi0*Mchi0))*(-u +  (MchiM*MchiM)) + (6*Mchi0*MchiM + s - t - u)* (MW*MW) +  (MW*MW*MW*MW))* (token41*token41)* (token9*token9))/(2.* (MW*MW)* (token10*token10)* (token4*token4)* (token45*token45)*( (MW*MW*MW*MW) +  (s*s) +  (MW*MW)*(-2*s +  (WW*WW))));
}
double DT::chiMCHI0Aw(const double &cos_t, const double &s){
	double t = (s* (MchiM*MchiM) + s* (MW*MW) -  (MchiM*MchiM)* (MW*MW) +  (Mchi0*Mchi0)*(s +  (MW*MW)) + cos_t*s*sqrt(( (Mchi0*Mchi0*Mchi0*Mchi0) - 2* (Mchi0*Mchi0)*(s +  (MchiM*MchiM)) +  (( (MchiM*MchiM) - s)*( (MchiM*MchiM) - s)))/s)*sqrt( (( (MW*MW) - s)*( (MW*MW) - s))/s) -  (s*s))/(2.*s);
	double u = -s - t + MchiM*MchiM + Mchi0*Mchi0 + 0*0 + MW*MW;
	return ((-((-t +  (Mchi0*Mchi0))*(s*t +  (Mchi0*Mchi0*Mchi0*Mchi0) + (3*t + u)* (MchiM*MchiM) -  (Mchi0*Mchi0)*(s + t + u + 2* (MchiM*MchiM)) -  (MchiM*MchiM*MchiM*MchiM))) + (2*t*u - 6*Mchi0*MchiM*(s + 2*t + u) + 6*MchiM* (Mchi0*Mchi0*Mchi0) - 2* (Mchi0*Mchi0*Mchi0*Mchi0) + (s + t - u)* (MchiM*MchiM) +  (Mchi0*Mchi0)*(s + t + u + 2* (MchiM*MchiM)))* (MW*MW) + (6*Mchi0*MchiM - 2*(s + t + u) +  (Mchi0*Mchi0) - 3* (MchiM*MchiM))* (MW*MW*MW*MW) + 2* (MW*MW*MW*MW*MW*MW))* (token46*token46))/( (MW*MW)* (( (MchiM*MchiM) - t)*( (MchiM*MchiM) - t))* (token10*token10)* (token18*token18)) + ( (token14*token14)* (token21*token21)* (token46*token46)*((-30*Mchi0*MchiM - 7*s + 9*(t + u))* (MW*MW*MW*MW) - 3* (MW*MW*MW*MW*MW*MW) +  (MW*MW)*(-6*Mchi0*MchiM*s - 3*s*t - 3*s*u - 4*t*u +  (Mchi0*Mchi0)*(2*s + 7*t + 9*u - 16* (MchiM*MchiM)) + (2*s + 9*t + 7*u)* (MchiM*MchiM) +  (s*s) - 6* (t*t) - 6* (u*u)) + s*(6*Mchi0*MchiM*s + 2*t*u - (s + 3*t + u)* (MchiM*MchiM) +  (Mchi0*Mchi0)*(-s - t - 3*u + 4* (MchiM*MchiM)) +  (s*s) +  (t*t) +  (u*u))))/(2.* (MW*MW)*( (MW*MW*MW*MW) +  (s*s) +  (MW*MW)*(-2*s +  (WW*WW)))) + (token14*token21*(-s +  (MW*MW))* (token46*token46)*(6*MchiM*s* (Mchi0*Mchi0*Mchi0) + 2*Mchi0*MchiM*s*(-3*t - 2*u + 2* (MchiM*MchiM)) +  (Mchi0*Mchi0*Mchi0*Mchi0)*(-3*s - t - 3*u + 4* (MchiM*MchiM)) + 2*(-20*Mchi0*MchiM - 3*(3*s + u) + 16* (Mchi0*Mchi0) - 5* (MchiM*MchiM))* (MW*MW*MW*MW) + 4* (MW*MW*MW*MW*MW*MW) +  (Mchi0*Mchi0)*(3*s*t + 4*s*u + 5*t*u + (s - 7*t - u)* (MchiM*MchiM) + 3* (s*s) + 2* (t*t) +  (u*u)) +  (MW*MW)*(5*s*t + 8*s*u + 7*t*u - 6*MchiM* (Mchi0*Mchi0*Mchi0) + 16* (Mchi0*Mchi0*Mchi0*Mchi0) + 2*Mchi0*MchiM*(8*s + t + 14*u - 12* (MchiM*MchiM)) + 2*(s + 10*t)* (MchiM*MchiM) -  (Mchi0*Mchi0)*(23*s + 15*t + 23*u + 4* (MchiM*MchiM)) + 6* (s*s) - 3* (t*t) + 2* (u*u)) - t*((5*s - 3*t - u)* (MchiM*MchiM) + 3* (s*s) +  ((t + u)*(t + u)))))/(2.*token10*token18*(-t +  (MchiM*MchiM))* (MW*MW)*( (MW*MW*MW*MW) +  (s*s) +  (MW*MW)*(-2*s +  (WW*WW))));
}
double DT::chiMCHI0Zw(const double &cos_t, const double &s){
	double t = (s* (MchiM*MchiM) + s* (MW*MW) -  (MchiM*MchiM)* (MW*MW) +  (Mchi0*Mchi0)*(s +  (MW*MW) -  (MZ*MZ)) + s* (MZ*MZ) +  (MchiM*MchiM)* (MZ*MZ) + cos_t*s*sqrt(( (Mchi0*Mchi0*Mchi0*Mchi0) - 2* (Mchi0*Mchi0)*(s +  (MchiM*MchiM)) +  (( (MchiM*MchiM) - s)*( (MchiM*MchiM) - s)))/s)*sqrt(( (MW*MW*MW*MW) - 2* (MW*MW)*(s +  (MZ*MZ)) +  (( (MZ*MZ) - s)*( (MZ*MZ) - s)))/s) -  (s*s))/(2.*s);
	double u = -s - t + MchiM*MchiM + Mchi0*Mchi0 + MZ*MZ + MW*MW;
	return ((-2*(-t +  (MchiM*MchiM))* (MW*MW*MW*MW*MW*MW) -  (MW*MW*MW*MW)*((-t +  (MchiM*MchiM))*(6*Mchi0*MchiM - 2*(s + t + u) +  (Mchi0*Mchi0) +  (MchiM*MchiM)) + 4*(-t + 3* (MchiM*MchiM))* (MZ*MZ) + 4* (MZ*MZ*MZ*MZ)) +  (MW*MW)*((-t +  (MchiM*MchiM))*(-2*s*t + 6*Mchi0*MchiM*(s + u) - (s + t + u)* (Mchi0*Mchi0) - 6*MchiM* (Mchi0*Mchi0*Mchi0) + 2* (Mchi0*Mchi0*Mchi0*Mchi0) + (s + t - u)* (MchiM*MchiM)) - 2*(t*(s + t - u) +  (Mchi0*Mchi0)*(t - 3* (MchiM*MchiM)) + (-s - 3*t + u)* (MchiM*MchiM) + 3*Mchi0*MchiM*(t + 3* (MchiM*MchiM)))* (MZ*MZ) + 2*(-6*Mchi0*MchiM + t +  (Mchi0*Mchi0))* (MZ*MZ*MZ*MZ)) - (-t +  (Mchi0*Mchi0))*(-((-t +  (MchiM*MchiM))*(t*u - (s + t + u)* (Mchi0*Mchi0) +  (Mchi0*Mchi0*Mchi0*Mchi0) + s* (MchiM*MchiM))) - (t*(-s + t + u) + (s - 5*t - u)* (MchiM*MchiM) +  (Mchi0*Mchi0)*(-2*t + 6* (MchiM*MchiM)))* (MZ*MZ) + (t - 2* (Mchi0*Mchi0) +  (MchiM*MchiM))* (MZ*MZ*MZ*MZ)))* (token15*token15)* (token16*token16)* (token46*token46))/(2.* (MW*MW)* (MZ*MZ)* (( (MchiM*MchiM) - t)*( (MchiM*MchiM) - t))* (token10*token10)* (token17*token17)* (token4*token4)* (token49*token49)) + ( (token40*token40)* (token46*token46)* (token56*token56)*( (MW*MW*MW*MW)*(2*(u - 5* (Mchi0*Mchi0))* (MZ*MZ) - 4* (MZ*MZ*MZ*MZ) +  (( (Mchi0*Mchi0) - u)*( (Mchi0*Mchi0) - u))) +  (MW*MW)*(-2*(6*Mchi0*MchiM*u + u*(s - t + u) + (-s + t - 5*u)* (Mchi0*Mchi0) + 6*MchiM* (Mchi0*Mchi0*Mchi0))* (MZ*MZ) + 4*(-3*Mchi0*MchiM + u)* (MZ*MZ*MZ*MZ) + (6*Mchi0*MchiM + s - t - u)* (( (Mchi0*Mchi0) - u)*( (Mchi0*Mchi0) - u))) + (-u +  (MchiM*MchiM))*((-2*s*u + (6*s + 4*t)* (Mchi0*Mchi0) - 4* (Mchi0*Mchi0*Mchi0*Mchi0))* (MZ*MZ) + 2*(s + t + u - 4* (Mchi0*Mchi0))* (MZ*MZ*MZ*MZ) - 2* (MZ*MZ*MZ*MZ*MZ*MZ) + (-t +  (Mchi0*Mchi0))* (( (Mchi0*Mchi0) - u)*( (Mchi0*Mchi0) - u)))))/(2.* (MW*MW)* (MZ*MZ)* (token10*token10)* (token17*token17)* (token4*token4)* (token49*token49)* (( (Mchi0*Mchi0) - u)*( (Mchi0*Mchi0) - u))) + (token15*token16*token40*token56* (token46*token46)*(2* (MW*MW*MW*MW)*((-u +  (Mchi0*Mchi0))*(3*Mchi0*MchiM + s + t - u -  (MchiM*MchiM)) - 2*(-5*Mchi0*MchiM - 4*s + 7* (Mchi0*Mchi0) + 2* (MchiM*MchiM))* (MZ*MZ)) + 2*(t*(-s + t - u) + 2*MchiM* (Mchi0*Mchi0*Mchi0) +  (Mchi0*Mchi0)*(s - t + 3*u - 2* (MchiM*MchiM)) + 2*Mchi0*MchiM*(-t - u +  (MchiM*MchiM)))* (MZ*MZ*MZ*MZ) - (-t +  (Mchi0*Mchi0))*(-u +  (Mchi0*Mchi0))*( (Mchi0*Mchi0)*(-s + t + u - 2* (MchiM*MchiM)) + (s + t + u)* (MchiM*MchiM) +  (s*s) -  (t*t) -  (u*u)) +  (MZ*MZ)*(-4*MchiM*s* (Mchi0*Mchi0*Mchi0) + 4*Mchi0*MchiM*s*(t + u -  (MchiM*MchiM)) +  (Mchi0*Mchi0*Mchi0*Mchi0)*(3*s - 3*t + 5*u + 2* (MchiM*MchiM)) -  (Mchi0*Mchi0)*(3*s*t + 5*s*u + 4*t*u - 2*(s - 4*t)* (MchiM*MchiM) + 2* (s*s) - 5* (t*t) +  (u*u)) + t*(s*u - t*u + 2*(s + 3*t)* (MchiM*MchiM) + 2* (s*s) - 2* (t*t) +  (u*u))) +  (MW*MW)*(-4*(-3*Mchi0*MchiM - 4*s + 6* (Mchi0*Mchi0) +  (MchiM*MchiM))* (MZ*MZ*MZ*MZ) - 2* (MZ*MZ)*(5*s*t + 5*s*u + t*u - (14*s + 9*t + 10*u)* (Mchi0*Mchi0) + 3*MchiM* (Mchi0*Mchi0*Mchi0) + 10* (Mchi0*Mchi0*Mchi0*Mchi0) - 2*(s - t)* (MchiM*MchiM) + Mchi0*MchiM*(-2*s + 6*t + 9*u + 6* (MchiM*MchiM)) + 4* (s*s) -  (t*t) -  (u*u)) + (-u +  (Mchi0*Mchi0))*(-(s*t) + t*u + 6*MchiM* (Mchi0*Mchi0*Mchi0) - 6*Mchi0*MchiM*(s - t + u +  (MchiM*MchiM)) +  (Mchi0*Mchi0)*(3*s - t - 3*u + 2* (MchiM*MchiM)) - 2* (s*s) -  (t*t) + 2* (u*u)))))/(2.*(-u +  (Mchi0*Mchi0))*(-t +  (MchiM*MchiM))* (MW*MW)* (MZ*MZ)* (token10*token10)* (token17*token17)* (token4*token4)* (token49*token49)) - ( (token17*token17)* (token21*token21)* (token46*token46)* (token50*token50)*(- (MW*MW*MW*MW*MW*MW*MW*MW) +  (MW*MW*MW*MW*MW*MW)*(-20*Mchi0*MchiM - 4*t - 4*u + 6* (Mchi0*Mchi0) + 6* (MchiM*MchiM) + 24* (MZ*MZ)) +  (MW*MW*MW*MW)*(38*Mchi0*MchiM*s + 4*s*t + 4*s*u + 6*t*u - 7*s* (MchiM*MchiM) - 4*t* (MchiM*MchiM) - 12*u* (MchiM*MchiM) +  (Mchi0*Mchi0)*(-7*s - 4*(3*t + u) + 16* (MchiM*MchiM)) + (68*Mchi0*MchiM + 8*s - 60*t - 60*u + 34* (Mchi0*Mchi0) + 34* (MchiM*MchiM))* (MZ*MZ) + 82* (MZ*MZ*MZ*MZ) + 2* (s*s) + 5* (t*t) + 5* (u*u)) + (s -  (MZ*MZ))*((20*Mchi0*MchiM + s + 4*t + 4*u - 6* (Mchi0*Mchi0) - 6* (MchiM*MchiM))* (MZ*MZ*MZ*MZ) +  (MZ*MZ*MZ*MZ*MZ*MZ) +  (MZ*MZ)*(-18*Mchi0*MchiM*s - 6*t*u +  (Mchi0*Mchi0)*(s + 4*t + 12*u - 16* (MchiM*MchiM)) + (s + 12*t + 4*u)* (MchiM*MchiM) -  (s*s) - 5* (t*t) - 5* (u*u)) + s*(-2*Mchi0*MchiM*s - 2*t*u + s* (Mchi0*Mchi0) + s* (MchiM*MchiM) -  (s*s) +  (t*t) +  (u*u))) + 2* (MW*MW)*((34*Mchi0*MchiM + 4*s - 30*t - 30*u + 17* (Mchi0*Mchi0) + 17* (MchiM*MchiM))* (MZ*MZ*MZ*MZ) + 12* (MZ*MZ*MZ*MZ*MZ*MZ) + s*(-8*Mchi0*MchiM*s - 2*t*u +  (Mchi0*Mchi0)*(6*t + 2*u - 8* (MchiM*MchiM)) + 2*(t + 3*u)* (MchiM*MchiM) - 3* (t*t) - 3* (u*u)) +  (MZ*MZ)*(30*Mchi0*MchiM*s + 12*s*t + 12*s*u + 14*t*u - (11*s + 24*(t + u))* (MchiM*MchiM) +  (Mchi0*Mchi0)*(-11*s - 24*(t + u) + 48* (MchiM*MchiM)) + 17* (t*t) + 17* (u*u)))))/(8.* (MW*MW)* (MZ*MZ)*( (MW*MW*MW*MW) +  (s*s) +  (MW*MW)*(-2*s +  (WW*WW)))) - (token21*token40*token50*token56*(-s +  (MW*MW))* (token46*token46)*(-(s*(-u +  (Mchi0*Mchi0))*(-2*Mchi0*MchiM*s + (s - t + u)* (Mchi0*Mchi0) + (s + t - u)*(-s + t - u +  (MchiM*MchiM)))) - 2* (MW*MW*MW*MW*MW*MW)*(-u +  (Mchi0*Mchi0) + 4* (MZ*MZ)) +  (MW*MW*MW*MW)*((-u +  (Mchi0*Mchi0))*(-22*Mchi0*MchiM - s - t - u + 4* (Mchi0*Mchi0) + 4* (MchiM*MchiM)) - 2*(34*Mchi0*MchiM + 9*s - 5*t - 13*u + 12* (Mchi0*Mchi0) - 8* (MchiM*MchiM))* (MZ*MZ) - 24* (MZ*MZ*MZ*MZ)) + 2*(6*Mchi0*MchiM + s - t + 3*u - 4* (MchiM*MchiM))* (MZ*MZ*MZ*MZ*MZ*MZ) +  (MW*MW)*(2*(-36*Mchi0*MchiM - 12*s + 11*u + 5* (Mchi0*Mchi0) + 4* (MchiM*MchiM))* (MZ*MZ*MZ*MZ) + 2* (MZ*MZ)*(6*s*t - s*u - 2*t*u + 2*Mchi0*MchiM*(2*s + 11*t + 5*u) - 32*MchiM* (Mchi0*Mchi0*Mchi0) + 10* (Mchi0*Mchi0*Mchi0*Mchi0) - (3*s + t - 3*u)* (MchiM*MchiM) -  (Mchi0*Mchi0)*(6*s + 3*t - 17*u + 14* (MchiM*MchiM)) + 4* (s*s) - 2* (t*t) - 8* (u*u)) - (-u +  (Mchi0*Mchi0))*(-20*Mchi0*MchiM*s + s*t + s*u - 2*t*u +  (Mchi0*Mchi0)*(s + 7*t + u - 8* (MchiM*MchiM)) + (s + t + 7*u)* (MchiM*MchiM) - 2* (s*s) - 3* (t*t) - 3* (u*u))) +  (MZ*MZ*MZ*MZ)*(4*s*t - 7*s*u - 5*t*u - 2*Mchi0*MchiM*(12*s + 2*t + u) + 6*MchiM* (Mchi0*Mchi0*Mchi0) +  (Mchi0*Mchi0)*(s - t + 19*u - 16* (MchiM*MchiM)) + 2*(5*s + t + 3*u)* (MchiM*MchiM) - 4* (s*s) - 5* (u*u)) +  (MZ*MZ)*(3*s*t*u + 4*Mchi0*MchiM*s*(3*s + t + u) - 8*MchiM*s* (Mchi0*Mchi0*Mchi0) +  (Mchi0*Mchi0*Mchi0*Mchi0)*(-s + t + 7*u - 8* (MchiM*MchiM)) - 2*t* (s*s) + 2*u* (s*s) + 2* (s*s*s) - 2*s* (t*t) + 3*u* (t*t) + 2* (t*t*t) +  (Mchi0*Mchi0)*(5*s*t - 18*s*u - 11*t*u + (15*s + 15*t + u)* (MchiM*MchiM) - 2* (s*s) - 3* (t*t) - 2* (u*u)) + 5*s* (u*u) + 4*t* (u*u) +  (MchiM*MchiM)*(-7*s*u - 3*t*u - 2* (s*s) - 6* (t*t) +  (u*u)) -  (u*u*u))))/(4.*token10*token4*token49*(-u +  (Mchi0*Mchi0))* (MW*MW)* (MZ*MZ)*( (MW*MW*MW*MW) +  (s*s) +  (MW*MW)*(-2*s +  (WW*WW)))) + (token15*token16*token21*token50*(-s +  (MW*MW))* (token46*token46)*(2*(5*Mchi0*MchiM + s + 3*t - u - 3* (MchiM*MchiM))* (MW*MW*MW*MW*MW*MW) + (-10*MchiM* (Mchi0*Mchi0*Mchi0) + 4* (Mchi0*Mchi0*Mchi0*Mchi0) + Mchi0*MchiM*(-4*s + 8*t + 6*u - 4* (MchiM*MchiM)) -  (Mchi0*Mchi0)*(-3*s + 3*t + 7*u + 4* (MchiM*MchiM)) + t*(s + t + u + 8* (MchiM*MchiM)))* (MZ*MZ*MZ*MZ) + 2*(Mchi0*MchiM + t - 2* (Mchi0*Mchi0))* (MZ*MZ*MZ*MZ*MZ*MZ) + s*(-((s + t - u)* (Mchi0*Mchi0*Mchi0*Mchi0)) + 2*Mchi0*MchiM*s*(-t +  (MchiM*MchiM)) - t*(s + t - u)*(s - t + u +  (MchiM*MchiM)) +  (Mchi0*Mchi0)*(3*s*t + (t - u)*u - (s - t + u)* (MchiM*MchiM) +  (s*s))) +  (MW*MW*MW*MW)*(-7*s*t + 4*s*u - 5*t*u + 10*MchiM* (Mchi0*Mchi0*Mchi0) +  (MchiM*MchiM)*(6*s + 4*t + 8*u - 40* (MZ*MZ)) - 24*s* (MZ*MZ) + 22*t* (MZ*MZ) - 2*Mchi0*MchiM*(10*s - 6*t + 5*u + 6* (MchiM*MchiM) + 29* (MZ*MZ)) +  (Mchi0*Mchi0)*(s + 7*t - u - 8* (MchiM*MchiM) + 44* (MZ*MZ)) - 24* (MZ*MZ*MZ*MZ) - 4* (s*s) - 5* (t*t)) +  (MZ*MZ)*(10*MchiM*s* (Mchi0*Mchi0*Mchi0) + 2*Mchi0*MchiM*s*(s - 3*(t + u) +  (MchiM*MchiM)) +  (Mchi0*Mchi0*Mchi0*Mchi0)*(-s - t - 7*u + 8* (MchiM*MchiM)) + t*(-2*t*u + s*(t + u) + (-9*s + 7*t + u)* (MchiM*MchiM) - 2* (s*s) - 3* (t*t) - 3* (u*u)) +  (Mchi0*Mchi0)*(-4*s*t + 5*s*u + 9*t*u + (7*s - 15*t - u)* (MchiM*MchiM) + 4* (t*t) + 3* (u*u))) +  (MW*MW)*(3*s*t*u - 10*MchiM*s* (Mchi0*Mchi0*Mchi0) +  (Mchi0*Mchi0*Mchi0*Mchi0)*(-s + 7*t + u - 8* (MchiM*MchiM)) - 3*s*t* (MchiM*MchiM) - 6*s*u* (MchiM*MchiM) - 3*t*u* (MchiM*MchiM) + 10*Mchi0*MchiM*s*(s - t + u +  (MchiM*MchiM)) + 2*(-41*Mchi0*MchiM - 9*s + 13*t + 5*u + 12* (Mchi0*Mchi0) - 9* (MchiM*MchiM))* (MZ*MZ*MZ*MZ) - 8* (MZ*MZ*MZ*MZ*MZ*MZ) + 2*t* (s*s) - 2*u* (s*s) + 2* (s*s*s) + 5*s* (t*t) + 4*u* (t*t) +  (MchiM*MchiM)* (t*t) -  (t*t*t) +  (Mchi0*Mchi0)*(-8*s*t + 5*s*u - 11*t*u + (7*s + t + 15*u)* (MchiM*MchiM) - 2* (s*s) - 2* (t*t) - 3* (u*u)) + 2* (MZ*MZ)*(-(s*t) + 6*s*u - 2*t*u + 10* (Mchi0*Mchi0*Mchi0*Mchi0) + 2*Mchi0*MchiM*(2*s + 5*t + 11*u - 16* (MchiM*MchiM)) + (5*s + 24*t + 10*u)* (MchiM*MchiM) - 2* (Mchi0*Mchi0)*(7*s + 2*t + 7*u + 7* (MchiM*MchiM)) + 4* (s*s) - 8* (t*t) - 2* (u*u)) - 2*s* (u*u) + 3*t* (u*u) - 6* (MchiM*MchiM)* (u*u) + 2* (u*u*u))))/(4.*token10*token4*token49*(-t +  (MchiM*MchiM))* (MW*MW)* (MZ*MZ)*( (MW*MW*MW*MW) +  (s*s) +  (MW*MW)*(-2*s +  (WW*WW))));
}
double DT::chiMCHI0VEe(const double &cos_t, const double &s){
	double t = (s* (MchiM*MchiM) + s* (Me*Me) -  (MchiM*MchiM)* (Me*Me) +  (Mchi0*Mchi0)*(s +  (Me*Me)) + cos_t*s*sqrt(( (Mchi0*Mchi0*Mchi0*Mchi0) - 2* (Mchi0*Mchi0)*(s +  (MchiM*MchiM)) +  (( (MchiM*MchiM) - s)*( (MchiM*MchiM) - s)))/s)*sqrt( (( (Me*Me) - s)*( (Me*Me) - s))/s) -  (s*s))/(2.*s);
	double u = -s - t + MchiM*MchiM + Mchi0*Mchi0 + 0*0 + Me*Me;
	return (8* (token46*token46)* (token7*token7)*(2*Mchi0*MchiM*(s -  (Me*Me)) - t* (Me*Me) - u* (Me*Me) +  (MchiM*MchiM)*(-t - u +  (Me*Me)) +  (Mchi0*Mchi0)*(-t - u + 2* (MchiM*MchiM) +  (Me*Me)) +  (t*t) +  (u*u)))/(3.* (token4*token4)* (token49*token49)*( (MW*MW*MW*MW) +  (s*s) +  (MW*MW)*(-2*s +  (WW*WW))));
}
double DT::chiMCHI0VMmu(const double &cos_t, const double &s){
	double t = (s* (MchiM*MchiM) + s* (MMU*MMU) -  (MchiM*MchiM)* (MMU*MMU) +  (Mchi0*Mchi0)*(s +  (MMU*MMU)) + cos_t*s*sqrt(( (Mchi0*Mchi0*Mchi0*Mchi0) - 2* (Mchi0*Mchi0)*(s +  (MchiM*MchiM)) +  (( (MchiM*MchiM) - s)*( (MchiM*MchiM) - s)))/s)*sqrt( (( (MMU*MMU) - s)*( (MMU*MMU) - s))/s) -  (s*s))/(2.*s);
	double u = -s - t + MchiM*MchiM + Mchi0*Mchi0 + 0*0 + MMU*MMU;
	return (-16*(-u +  (Mchi0*Mchi0))*(-u +  (MchiM*MchiM) +  (MMU*MMU))* (token1*token1)* (token2*token2))/(3.*(-u +  (MA0*MA0))*(u -  (MS0*MS0))* (token4*token4)) + (8*(-u +  (Mchi0*Mchi0))*(-u +  (MchiM*MchiM) +  (MMU*MMU))* (token1*token1)* (token2*token2))/(3.* (token4*token4)* (( (MA0*MA0) - u)*( (MA0*MA0) - u))) + (8*(-u +  (Mchi0*Mchi0))*(-u +  (MchiM*MchiM) +  (MMU*MMU))* (token1*token1)* (token2*token2))/(3.* (token4*token4)* (( (MS0*MS0) - u)*( (MS0*MS0) - u))) + (16*token1*token2*token46*token7*(Mchi0*MchiM*(s -  (MMU*MMU)) + u*(u -  (MchiM*MchiM) -  (MMU*MMU)) +  (Mchi0*Mchi0)*(-u +  (MchiM*MchiM) +  (MMU*MMU)))*(-s +  (MW*MW)))/(3.*token49*(-u +  (MA0*MA0))* (token4*token4)*( (MW*MW*MW*MW) +  (s*s) +  (MW*MW)*(-2*s +  (WW*WW)))) + (16*token1*token2*token46*token7*(Mchi0*MchiM*(s -  (MMU*MMU)) + u*(u -  (MchiM*MchiM) -  (MMU*MMU)) +  (Mchi0*Mchi0)*(-u +  (MchiM*MchiM) +  (MMU*MMU)))*(-s +  (MW*MW)))/(3.*token49*(-u +  (MS0*MS0))* (token4*token4)*( (MW*MW*MW*MW) +  (s*s) +  (MW*MW)*(-2*s +  (WW*WW)))) + (8* (token46*token46)* (token7*token7)*(2*Mchi0*MchiM*(s -  (MMU*MMU)) - t* (MMU*MMU) - u* (MMU*MMU) +  (MchiM*MchiM)*(-t - u +  (MMU*MMU)) +  (Mchi0*Mchi0)*(-t - u + 2* (MchiM*MchiM) +  (MMU*MMU)) +  (t*t) +  (u*u)))/(3.* (token4*token4)* (token49*token49)*( (MW*MW*MW*MW) +  (s*s) +  (MW*MW)*(-2*s +  (WW*WW))));
}
double DT::chiMCHI0VTta(const double &cos_t, const double &s){
	double t = (s* (MchiM*MchiM) + s* (MTA*MTA) -  (MchiM*MchiM)* (MTA*MTA) +  (Mchi0*Mchi0)*(s +  (MTA*MTA)) + cos_t*s*sqrt(( (Mchi0*Mchi0*Mchi0*Mchi0) - 2* (Mchi0*Mchi0)*(s +  (MchiM*MchiM)) +  (( (MchiM*MchiM) - s)*( (MchiM*MchiM) - s)))/s)*sqrt( (( (MTA*MTA) - s)*( (MTA*MTA) - s))/s) -  (s*s))/(2.*s);
	double u = -s - t + MchiM*MchiM + Mchi0*Mchi0 + 0*0 + MTA*MTA;
	return (8* (token46*token46)* (token7*token7)*(2*Mchi0*MchiM*(s -  (MTA*MTA)) - t* (MTA*MTA) - u* (MTA*MTA) +  (MchiM*MchiM)*(-t - u +  (MTA*MTA)) +  (Mchi0*Mchi0)*(-t - u + 2* (MchiM*MchiM) +  (MTA*MTA)) +  (t*t) +  (u*u)))/(3.* (token4*token4)* (token49*token49)*( (MW*MW*MW*MW) +  (s*s) +  (MW*MW)*(-2*s +  (WW*WW))));
}
double DT::chiMCHI0Ud(const double &cos_t, const double &s){
	double t = (s* (MchiM*MchiM) + s* (MD*MD) -  (MchiM*MchiM)* (MD*MD) +  (Mchi0*Mchi0)*(s +  (MD*MD) -  (MU*MU)) + s* (MU*MU) +  (MchiM*MchiM)* (MU*MU) + cos_t*s*sqrt(( (Mchi0*Mchi0*Mchi0*Mchi0) - 2* (Mchi0*Mchi0)*(s +  (MchiM*MchiM)) +  (( (MchiM*MchiM) - s)*( (MchiM*MchiM) - s)))/s)*sqrt(( (MD*MD*MD*MD) - 2* (MD*MD)*(s +  (MU*MU)) +  (( (MU*MU) - s)*( (MU*MU) - s)))/s) -  (s*s))/(2.*s);
	double u = -s - t + MchiM*MchiM + Mchi0*Mchi0 + MU*MU + MD*MD;
	return (12* (token46*token46)* (token57*token57)* (token7*token7)*(2*Mchi0*MchiM*s - t* (Mchi0*Mchi0) - u* (Mchi0*Mchi0) - t* (MchiM*MchiM) - u* (MchiM*MchiM) + 2* (Mchi0*Mchi0)* (MchiM*MchiM) + (-2*Mchi0*MchiM - t - u +  (Mchi0*Mchi0) +  (MchiM*MchiM))* (MU*MU) +  (MD*MD)*(-2*Mchi0*MchiM - t - u +  (Mchi0*Mchi0) +  (MchiM*MchiM) + 2* (MU*MU)) +  (t*t) +  (u*u)))/( (token4*token4)* (token49*token49)*( (MW*MW*MW*MW) +  (s*s) +  (MW*MW)*(-2*s +  (WW*WW))));
}
double DT::chiMCHI0Us(const double &cos_t, const double &s){
	double t = (s* (MchiM*MchiM) + s* (MS*MS) -  (MchiM*MchiM)* (MS*MS) +  (Mchi0*Mchi0)*(s +  (MS*MS) -  (MU*MU)) + s* (MU*MU) +  (MchiM*MchiM)* (MU*MU) + cos_t*s*sqrt(( (Mchi0*Mchi0*Mchi0*Mchi0) - 2* (Mchi0*Mchi0)*(s +  (MchiM*MchiM)) +  (( (MchiM*MchiM) - s)*( (MchiM*MchiM) - s)))/s)*sqrt(( (MS*MS*MS*MS) - 2* (MS*MS)*(s +  (MU*MU)) +  (( (MU*MU) - s)*( (MU*MU) - s)))/s) -  (s*s))/(2.*s);
	double u = -s - t + MchiM*MchiM + Mchi0*Mchi0 + MU*MU + MS*MS;
	return (12*(-u +  (MchiM*MchiM) +  (MS*MS))*(-u +  (Mchi0*Mchi0) +  (MU*MU))* (token1*token1)* (token22*token22)* (token32*token32))/ (( (MphiQ*MphiQ) - u)*( (MphiQ*MphiQ) - u)) + (24*token1*token22*token30*token32*token46*token7*( (Mchi0*Mchi0)*(-u +  (MchiM*MchiM) +  (MS*MS)) + (-u +  (MchiM*MchiM) +  (MS*MS))*(-u +  (MU*MU)) - Mchi0*MchiM*(-s +  (MS*MS) +  (MU*MU)))*(-s +  (MW*MW)))/(token4*token49*(-u +  (MphiQ*MphiQ))*( (MW*MW*MW*MW) +  (s*s) +  (MW*MW)*(-2*s +  (WW*WW)))) + (12* (token30*token30)* (token46*token46)* (token7*token7)*(2*Mchi0*MchiM*s - t* (Mchi0*Mchi0) - u* (Mchi0*Mchi0) - t* (MchiM*MchiM) - u* (MchiM*MchiM) + 2* (Mchi0*Mchi0)* (MchiM*MchiM) + (-2*Mchi0*MchiM - t - u +  (Mchi0*Mchi0) +  (MchiM*MchiM))* (MU*MU) +  (MS*MS)*(-2*Mchi0*MchiM - t - u +  (Mchi0*Mchi0) +  (MchiM*MchiM) + 2* (MU*MU)) +  (t*t) +  (u*u)))/( (token4*token4)* (token49*token49)*( (MW*MW*MW*MW) +  (s*s) +  (MW*MW)*(-2*s +  (WW*WW))));
}
double DT::chiMCHI0Ub(const double &cos_t, const double &s){
	double t = (s* (Mchi0*Mchi0) +  (MB*MB)*(s +  (Mchi0*Mchi0) -  (MchiM*MchiM)) + s* (MchiM*MchiM) + s* (MU*MU) -  (Mchi0*Mchi0)* (MU*MU) +  (MchiM*MchiM)* (MU*MU) + cos_t*s*sqrt(( (Mchi0*Mchi0*Mchi0*Mchi0) - 2* (Mchi0*Mchi0)*(s +  (MchiM*MchiM)) +  (( (MchiM*MchiM) - s)*( (MchiM*MchiM) - s)))/s)*sqrt(( (MB*MB*MB*MB) - 2* (MB*MB)*(s +  (MU*MU)) +  (( (MU*MU) - s)*( (MU*MU) - s)))/s) -  (s*s))/(2.*s);
	double u = -s - t + MchiM*MchiM + Mchi0*Mchi0 + MU*MU + MB*MB;
	return (12*(-u +  (MB*MB) +  (MchiM*MchiM))*(-u +  (Mchi0*Mchi0) +  (MU*MU))* (token1*token1)* (token26*token26)* (token32*token32))/ (( (MphiQ*MphiQ) - u)*( (MphiQ*MphiQ) - u)) + (24*token1*token26*token31*token32*token46*token7*( (Mchi0*Mchi0)*(-u +  (MchiM*MchiM)) + Mchi0*MchiM*(s -  (MU*MU)) + (-u +  (MchiM*MchiM))*(-u +  (MU*MU)) +  (MB*MB)*(-(Mchi0*MchiM) - u +  (Mchi0*Mchi0) +  (MU*MU)))*(-s +  (MW*MW)))/(token4*token49*(-u +  (MphiQ*MphiQ))*( (MW*MW*MW*MW) +  (s*s) +  (MW*MW)*(-2*s +  (WW*WW)))) + (12* (token31*token31)* (token46*token46)* (token7*token7)*(2*Mchi0*MchiM*s - t* (Mchi0*Mchi0) - u* (Mchi0*Mchi0) - t* (MchiM*MchiM) - u* (MchiM*MchiM) + 2* (Mchi0*Mchi0)* (MchiM*MchiM) + (-2*Mchi0*MchiM - t - u +  (Mchi0*Mchi0) +  (MchiM*MchiM))* (MU*MU) +  (MB*MB)*(-2*Mchi0*MchiM - t - u +  (Mchi0*Mchi0) +  (MchiM*MchiM) + 2* (MU*MU)) +  (t*t) +  (u*u)))/( (token4*token4)* (token49*token49)*( (MW*MW*MW*MW) +  (s*s) +  (MW*MW)*(-2*s +  (WW*WW))));
}
double DT::chiMCHI0Cd(const double &cos_t, const double &s){
	double t = (s* (Mchi0*Mchi0) + s* (MchiM*MchiM) +  (MC*MC)*(s -  (Mchi0*Mchi0) +  (MchiM*MchiM)) + s* (MD*MD) +  (Mchi0*Mchi0)* (MD*MD) -  (MchiM*MchiM)* (MD*MD) + cos_t*s*sqrt(( (Mchi0*Mchi0*Mchi0*Mchi0) - 2* (Mchi0*Mchi0)*(s +  (MchiM*MchiM)) +  (( (MchiM*MchiM) - s)*( (MchiM*MchiM) - s)))/s)*sqrt(( (MC*MC*MC*MC) - 2* (MC*MC)*(s +  (MD*MD)) +  (( (MD*MD) - s)*( (MD*MD) - s)))/s) -  (s*s))/(2.*s);
	double u = -s - t + MchiM*MchiM + Mchi0*Mchi0 + MC*MC + MD*MD;
	return (12* (token46*token46)* (token58*token58)* (token7*token7)*(2*Mchi0*MchiM*s - t* (Mchi0*Mchi0) - u* (Mchi0*Mchi0) - t* (MchiM*MchiM) - u* (MchiM*MchiM) + 2* (Mchi0*Mchi0)* (MchiM*MchiM) + (-2*Mchi0*MchiM - t - u +  (Mchi0*Mchi0) +  (MchiM*MchiM))* (MD*MD) +  (MC*MC)*(-2*Mchi0*MchiM - t - u +  (Mchi0*Mchi0) +  (MchiM*MchiM) + 2* (MD*MD)) +  (t*t) +  (u*u)))/( (token4*token4)* (token49*token49)*( (MW*MW*MW*MW) +  (s*s) +  (MW*MW)*(-2*s +  (WW*WW))));
}
double DT::chiMCHI0Cs(const double &cos_t, const double &s){
	double t = (s* (Mchi0*Mchi0) + s* (MchiM*MchiM) +  (MC*MC)*(s -  (Mchi0*Mchi0) +  (MchiM*MchiM)) + s* (MS*MS) +  (Mchi0*Mchi0)* (MS*MS) -  (MchiM*MchiM)* (MS*MS) + cos_t*s*sqrt(( (Mchi0*Mchi0*Mchi0*Mchi0) - 2* (Mchi0*Mchi0)*(s +  (MchiM*MchiM)) +  (( (MchiM*MchiM) - s)*( (MchiM*MchiM) - s)))/s)*sqrt(( (MC*MC*MC*MC) - 2* (MC*MC)*(s +  (MS*MS)) +  (( (MS*MS) - s)*( (MS*MS) - s)))/s) -  (s*s))/(2.*s);
	double u = -s - t + MchiM*MchiM + Mchi0*Mchi0 + MC*MC + MS*MS;
	return (12*(-u +  (MC*MC) +  (Mchi0*Mchi0))*(-u +  (MchiM*MchiM) +  (MS*MS))* (token1*token1)* (token22*token22)* (token35*token35))/ (( (MphiQ*MphiQ) - u)*( (MphiQ*MphiQ) - u)) + (24*token1*token22*token33*token35*token46*token7*(Mchi0*MchiM*(s -  (MS*MS)) + u*(u -  (MchiM*MchiM) -  (MS*MS)) +  (Mchi0*Mchi0)*(-u +  (MchiM*MchiM) +  (MS*MS)) +  (MC*MC)*(-(Mchi0*MchiM) - u +  (MchiM*MchiM) +  (MS*MS)))*(-s +  (MW*MW)))/(token4*token49*(-u +  (MphiQ*MphiQ))*( (MW*MW*MW*MW) +  (s*s) +  (MW*MW)*(-2*s +  (WW*WW)))) + (12* (token33*token33)* (token46*token46)* (token7*token7)*(2*Mchi0*MchiM*s - t* (Mchi0*Mchi0) - u* (Mchi0*Mchi0) - t* (MchiM*MchiM) - u* (MchiM*MchiM) + 2* (Mchi0*Mchi0)* (MchiM*MchiM) + (-2*Mchi0*MchiM - t - u +  (Mchi0*Mchi0) +  (MchiM*MchiM))* (MS*MS) +  (MC*MC)*(-2*Mchi0*MchiM - t - u +  (Mchi0*Mchi0) +  (MchiM*MchiM) + 2* (MS*MS)) +  (t*t) +  (u*u)))/( (token4*token4)* (token49*token49)*( (MW*MW*MW*MW) +  (s*s) +  (MW*MW)*(-2*s +  (WW*WW))));
}
double DT::chiMCHI0Cb(const double &cos_t, const double &s){
	double t = (s* (MC*MC) + s* (Mchi0*Mchi0) -  (MC*MC)* (Mchi0*Mchi0) +  (MB*MB)*(s +  (Mchi0*Mchi0) -  (MchiM*MchiM)) + s* (MchiM*MchiM) +  (MC*MC)* (MchiM*MchiM) + cos_t*s*sqrt(( (MB*MB*MB*MB) - 2* (MB*MB)*(s +  (MC*MC)) +  (( (MC*MC) - s)*( (MC*MC) - s)))/s)*sqrt(( (Mchi0*Mchi0*Mchi0*Mchi0) - 2* (Mchi0*Mchi0)*(s +  (MchiM*MchiM)) +  (( (MchiM*MchiM) - s)*( (MchiM*MchiM) - s)))/s) -  (s*s))/(2.*s);
	double u = -s - t + MchiM*MchiM + Mchi0*Mchi0 + MC*MC + MB*MB;
	return (12*(-u +  (MC*MC) +  (Mchi0*Mchi0))*(-u +  (MB*MB) +  (MchiM*MchiM))* (token1*token1)* (token26*token26)* (token35*token35))/ (( (MphiQ*MphiQ) - u)*( (MphiQ*MphiQ) - u)) + (24*token1*token26*token34*token35*token46*token7*(-s +  (MW*MW))*(Mchi0*MchiM*s - u* (Mchi0*Mchi0) +  (MB*MB)*(-(Mchi0*MchiM) - u +  (MC*MC) +  (Mchi0*Mchi0)) -  (MC*MC)*(Mchi0*MchiM + u -  (MchiM*MchiM)) - u* (MchiM*MchiM) +  (Mchi0*Mchi0)* (MchiM*MchiM) +  (u*u)))/(token4*token49*(-u +  (MphiQ*MphiQ))*( (MW*MW*MW*MW) +  (s*s) +  (MW*MW)*(-2*s +  (WW*WW)))) + (12* (token34*token34)* (token46*token46)* (token7*token7)*(2*Mchi0*MchiM*s - t* (Mchi0*Mchi0) - u* (Mchi0*Mchi0) - t* (MchiM*MchiM) - u* (MchiM*MchiM) + 2* (Mchi0*Mchi0)* (MchiM*MchiM) +  (MC*MC)*(-2*Mchi0*MchiM - t - u +  (Mchi0*Mchi0) +  (MchiM*MchiM)) +  (MB*MB)*(-2*Mchi0*MchiM - t - u + 2* (MC*MC) +  (Mchi0*Mchi0) +  (MchiM*MchiM)) +  (t*t) +  (u*u)))/( (token4*token4)* (token49*token49)*( (MW*MW*MW*MW) +  (s*s) +  (MW*MW)*(-2*s +  (WW*WW))));
}
double DT::chiMCHI0Td(const double &cos_t, const double &s){
	double t = (s* (MchiM*MchiM) + s* (MD*MD) -  (MchiM*MchiM)* (MD*MD) +  (Mchi0*Mchi0)*(s +  (MD*MD) -  (MT*MT)) + s* (MT*MT) +  (MchiM*MchiM)* (MT*MT) + cos_t*s*sqrt(( (Mchi0*Mchi0*Mchi0*Mchi0) - 2* (Mchi0*Mchi0)*(s +  (MchiM*MchiM)) +  (( (MchiM*MchiM) - s)*( (MchiM*MchiM) - s)))/s)*sqrt(( (MD*MD*MD*MD) - 2* (MD*MD)*(s +  (MT*MT)) +  (( (MT*MT) - s)*( (MT*MT) - s)))/s) -  (s*s))/(2.*s);
	double u = -s - t + MchiM*MchiM + Mchi0*Mchi0 + MT*MT + MD*MD;
	return (12* (token46*token46)* (token59*token59)* (token7*token7)*(2*Mchi0*MchiM*s - t* (Mchi0*Mchi0) - u* (Mchi0*Mchi0) - t* (MchiM*MchiM) - u* (MchiM*MchiM) + 2* (Mchi0*Mchi0)* (MchiM*MchiM) + (-2*Mchi0*MchiM - t - u +  (Mchi0*Mchi0) +  (MchiM*MchiM))* (MT*MT) +  (MD*MD)*(-2*Mchi0*MchiM - t - u +  (Mchi0*Mchi0) +  (MchiM*MchiM) + 2* (MT*MT)) +  (t*t) +  (u*u)))/( (token4*token4)* (token49*token49)*( (MW*MW*MW*MW) +  (s*s) +  (MW*MW)*(-2*s +  (WW*WW))));
}
double DT::chiMCHI0Ts(const double &cos_t, const double &s){
	double t = (s* (MchiM*MchiM) + s* (MS*MS) -  (MchiM*MchiM)* (MS*MS) +  (Mchi0*Mchi0)*(s +  (MS*MS) -  (MT*MT)) + s* (MT*MT) +  (MchiM*MchiM)* (MT*MT) + cos_t*s*sqrt(( (Mchi0*Mchi0*Mchi0*Mchi0) - 2* (Mchi0*Mchi0)*(s +  (MchiM*MchiM)) +  (( (MchiM*MchiM) - s)*( (MchiM*MchiM) - s)))/s)*sqrt(( (MS*MS*MS*MS) - 2* (MS*MS)*(s +  (MT*MT)) +  (( (MT*MT) - s)*( (MT*MT) - s)))/s) -  (s*s))/(2.*s);
	double u = -s - t + MchiM*MchiM + Mchi0*Mchi0 + MT*MT + MS*MS;
	return (12*(-u +  (MchiM*MchiM) +  (MS*MS))*(-u +  (Mchi0*Mchi0) +  (MT*MT))* (token1*token1)* (token22*token22)* (token38*token38))/ (( (MphiQ*MphiQ) - u)*( (MphiQ*MphiQ) - u)) + (24*token1*token22*token36*token38*token46*token7*( (Mchi0*Mchi0)*(-u +  (MchiM*MchiM) +  (MS*MS)) + (-u +  (MchiM*MchiM) +  (MS*MS))*(-u +  (MT*MT)) - Mchi0*MchiM*(-s +  (MS*MS) +  (MT*MT)))*(-s +  (MW*MW)))/(token4*token49*(-u +  (MphiQ*MphiQ))*( (MW*MW*MW*MW) +  (s*s) +  (MW*MW)*(-2*s +  (WW*WW)))) + (12* (token36*token36)* (token46*token46)* (token7*token7)*(2*Mchi0*MchiM*s - t* (Mchi0*Mchi0) - u* (Mchi0*Mchi0) - t* (MchiM*MchiM) - u* (MchiM*MchiM) + 2* (Mchi0*Mchi0)* (MchiM*MchiM) + (-2*Mchi0*MchiM - t - u +  (Mchi0*Mchi0) +  (MchiM*MchiM))* (MT*MT) +  (MS*MS)*(-2*Mchi0*MchiM - t - u +  (Mchi0*Mchi0) +  (MchiM*MchiM) + 2* (MT*MT)) +  (t*t) +  (u*u)))/( (token4*token4)* (token49*token49)*( (MW*MW*MW*MW) +  (s*s) +  (MW*MW)*(-2*s +  (WW*WW))));
}
double DT::chiMCHI0Tb(const double &cos_t, const double &s){
	double t = (s* (Mchi0*Mchi0) +  (MB*MB)*(s +  (Mchi0*Mchi0) -  (MchiM*MchiM)) + s* (MchiM*MchiM) + s* (MT*MT) -  (Mchi0*Mchi0)* (MT*MT) +  (MchiM*MchiM)* (MT*MT) + cos_t*s*sqrt(( (Mchi0*Mchi0*Mchi0*Mchi0) - 2* (Mchi0*Mchi0)*(s +  (MchiM*MchiM)) +  (( (MchiM*MchiM) - s)*( (MchiM*MchiM) - s)))/s)*sqrt(( (MB*MB*MB*MB) - 2* (MB*MB)*(s +  (MT*MT)) +  (( (MT*MT) - s)*( (MT*MT) - s)))/s) -  (s*s))/(2.*s);
	double u = -s - t + MchiM*MchiM + Mchi0*Mchi0 + MT*MT + MB*MB;
	return (12*(-u +  (MB*MB) +  (MchiM*MchiM))*(-u +  (Mchi0*Mchi0) +  (MT*MT))* (token1*token1)* (token26*token26)* (token38*token38))/ (( (MphiQ*MphiQ) - u)*( (MphiQ*MphiQ) - u)) + (24*token1*token26*token37*token38*token46*token7*( (Mchi0*Mchi0)*(-u +  (MchiM*MchiM)) + Mchi0*MchiM*(s -  (MT*MT)) + (-u +  (MchiM*MchiM))*(-u +  (MT*MT)) +  (MB*MB)*(-(Mchi0*MchiM) - u +  (Mchi0*Mchi0) +  (MT*MT)))*(-s +  (MW*MW)))/(token4*token49*(-u +  (MphiQ*MphiQ))*( (MW*MW*MW*MW) +  (s*s) +  (MW*MW)*(-2*s +  (WW*WW)))) + (12* (token37*token37)* (token46*token46)* (token7*token7)*(2*Mchi0*MchiM*s - t* (Mchi0*Mchi0) - u* (Mchi0*Mchi0) - t* (MchiM*MchiM) - u* (MchiM*MchiM) + 2* (Mchi0*Mchi0)* (MchiM*MchiM) + (-2*Mchi0*MchiM - t - u +  (Mchi0*Mchi0) +  (MchiM*MchiM))* (MT*MT) +  (MB*MB)*(-2*Mchi0*MchiM - t - u +  (Mchi0*Mchi0) +  (MchiM*MchiM) + 2* (MT*MT)) +  (t*t) +  (u*u)))/( (token4*token4)* (token49*token49)*( (MW*MW*MW*MW) +  (s*s) +  (MW*MW)*(-2*s +  (WW*WW))));
}
