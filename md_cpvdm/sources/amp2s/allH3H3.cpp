///////////////////CODE GENERATED VIA MATHEMATICA///////////////////


#include "../../model.hpp"

double DT::H3H3hh(const double &cos_t, const double &s){
double t =  (mH3*mH3) + (-s + cos_t*sqrt(s - 4* (mH3*mH3))*sqrt(s - 4* (mHsm*mHsm)))/2. +  (mHsm*mHsm);
double u = -s - t + mH3*mH3 + mH3*mH3 + mHsm*mHsm + mHsm*mHsm;
return (2*token6*token82*token9)/(t -  (mH1*mH1)) + (2*token6*token82*token9)/(u -  (mH1*mH1)) + (2*token6*token74*token82)/(t -  (mH2*mH2)) + (2*token6*token74*token82)/(u -  (mH2*mH2)) + (2*token6*token82*token83)/(t -  (mH3*mH3)) + (2*token6*token82*token83)/(u -  (mH3*mH3)) + (2*token74*token9* (token6*token6))/((t -  (mH1*mH1))*(t -  (mH2*mH2))) + (2*token74*token9* (token6*token6))/((u -  (mH1*mH1))*(u -  (mH2*mH2))) + (2*token74*token9* (token6*token6))/((-u +  (mH1*mH1))*(-t +  (mH2*mH2))) + (2*token74*token9* (token6*token6))/((-t +  (mH1*mH1))*(-u +  (mH2*mH2))) + (2*token83*token9* (token6*token6))/((t -  (mH1*mH1))*(t -  (mH3*mH3))) + (2*token74*token83* (token6*token6))/((t -  (mH2*mH2))*(t -  (mH3*mH3))) + (2*token83*token9* (token6*token6))/((u -  (mH1*mH1))*(u -  (mH3*mH3))) + (2*token74*token83* (token6*token6))/((u -  (mH2*mH2))*(u -  (mH3*mH3))) + (2*token83*token9* (token6*token6))/((-u +  (mH1*mH1))*(-t +  (mH3*mH3))) + (2*token74*token83* (token6*token6))/((-u +  (mH2*mH2))*(-t +  (mH3*mH3))) + (2*token83*token9* (token6*token6))/((-t +  (mH1*mH1))*(-u +  (mH3*mH3))) + (2*token74*token83* (token6*token6))/((-t +  (mH2*mH2))*(-u +  (mH3*mH3))) + (2* (token6*token6)* (token74*token74))/((-t +  (mH2*mH2))*(-u +  (mH2*mH2))) + ( (token6*token6)* (token74*token74))/ (( (mH2*mH2) - t)*( (mH2*mH2) - t)) +  (token82*token82) + (2* (token6*token6)* (token83*token83))/((-t +  (mH3*mH3))*(-u +  (mH3*mH3))) + ( (token6*token6)* (token83*token83))/ (( (mH3*mH3) - t)*( (mH3*mH3) - t)) + (2* (token6*token6)* (token9*token9))/((-t +  (mH1*mH1))*(-u +  (mH1*mH1))) + ( (token6*token6)* (token9*token9))/ (( (mH1*mH1) - t)*( (mH1*mH1) - t)) + ( (token6*token6)* (token9*token9))/ (( (mH1*mH1) - u)*( (mH1*mH1) - u)) + ( (token6*token6)* (token74*token74))/ (( (mH2*mH2) - u)*( (mH2*mH2) - u)) + ( (token6*token6)* (token83*token83))/ (( (mH3*mH3) - u)*( (mH3*mH3) - u)) + (2*token2*token3*token4*token53*token82*(s -  (mHsm*mHsm)))/( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm))) + (2*token2*token3*token4*token53*token6*token9*(-s +  (mHsm*mHsm)))/((-t +  (mH1*mH1))*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + (2*token2*token3*token4*token53*token6*token9*(-s +  (mHsm*mHsm)))/((-u +  (mH1*mH1))*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + (2*token2*token3*token4*token53*token6*token74*(-s +  (mHsm*mHsm)))/((-t +  (mH2*mH2))*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + (2*token2*token3*token4*token53*token6*token74*(-s +  (mHsm*mHsm)))/((-u +  (mH2*mH2))*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + (2*token2*token3*token4*token53*token6*token83*(-s +  (mHsm*mHsm)))/((-t +  (mH3*mH3))*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + (2*token2*token3*token4*token53*token6*token83*(-s +  (mHsm*mHsm)))/((-u +  (mH3*mH3))*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + ( (token2*token2)* (token3*token3)* (token4*token4)* (token53*token53))/( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)));
}
double DT::H3H3hZ(const double &cos_t, const double &s){
double t = (-s + 2* (mH3*mH3) +  (mHsm*mHsm) +  (MZ*MZ) + cos_t*sqrt(s - 4* (mH3*mH3))*sqrt(( (mHsm*mHsm*mHsm*mHsm) - 2* (mHsm*mHsm)*(s +  (MZ*MZ)) +  (( (MZ*MZ) - s)*( (MZ*MZ) - s)))/s))/2.;
double u = -s - t + mH3*mH3 + mH3*mH3 + mHsm*mHsm + MZ*MZ;
return -0.5*(token16*token17*token42*token46*((-t +  (mH3*mH3))*(-s - t + u +  (mHsm*mHsm)) + (s - 2*t - u - 5* (mH3*mH3) + 3* (mHsm*mHsm))* (MZ*MZ) +  (MZ*MZ*MZ*MZ))* (token11*token11)* (token12*token12))/(token20*(-u +  (mH1*mH1))*(-t +  (mH2*mH2))* (MZ*MZ)* (token18*token18)* (token19*token19)) - (token16*token17*token42*token46*((-t +  (mH3*mH3))*(-s - t + u +  (mHsm*mHsm)) + (s - 2*t - u - 5* (mH3*mH3) + 3* (mHsm*mHsm))* (MZ*MZ) +  (MZ*MZ*MZ*MZ))* (token11*token11)* (token12*token12))/(2.*token20*(-t +  (mH1*mH1))*(-u +  (mH2*mH2))* (MZ*MZ)* (token18*token18)* (token19*token19)) - (token16*token17*token42*token46*( (mH3*mH3*mH3*mH3) - 2* (mH3*mH3)*(t +  (MZ*MZ)) +  (( (MZ*MZ) - t)*( (MZ*MZ) - t)))* (token11*token11)* (token12*token12))/(2.*(-t +  (mH1*mH1))*(t -  (mH2*mH2))* (MZ*MZ)* (token18*token18)* (token19*token19)) - (((-t +  (mH3*mH3))*(-s - t + u +  (mHsm*mHsm)) + (s - 2*t - u - 5* (mH3*mH3) + 3* (mHsm*mHsm))* (MZ*MZ) +  (MZ*MZ*MZ*MZ))* (token11*token11)* (token12*token12)* (token16*token16)* (token17*token17))/(2.*token20*(-t +  (mH1*mH1))*(-u +  (mH1*mH1))* (MZ*MZ)* (token18*token18)* (token19*token19)) + (( (mH3*mH3*mH3*mH3) - 2* (mH3*mH3)*(t +  (MZ*MZ)) +  (( (MZ*MZ) - t)*( (MZ*MZ) - t)))* (token11*token11)* (token12*token12)* (token16*token16)* (token17*token17))/(4.* (MZ*MZ)* (( (mH1*mH1) - t)*( (mH1*mH1) - t))* (token18*token18)* (token19*token19)) - (((-t +  (mH3*mH3))*(-s - t + u +  (mHsm*mHsm)) + (s - 2*t - u - 5* (mH3*mH3) + 3* (mHsm*mHsm))* (MZ*MZ) +  (MZ*MZ*MZ*MZ))* (token11*token11)* (token12*token12)* (token42*token42)* (token46*token46))/(2.*token20*(-t +  (mH2*mH2))*(-u +  (mH2*mH2))* (MZ*MZ)* (token18*token18)* (token19*token19)) + (( (mH3*mH3*mH3*mH3) - 2* (mH3*mH3)*(t +  (MZ*MZ)) +  (( (MZ*MZ) - t)*( (MZ*MZ) - t)))* (token11*token11)* (token12*token12)* (token42*token42)* (token46*token46))/(4.* (MZ*MZ)* (( (mH2*mH2) - t)*( (mH2*mH2) - t))* (token18*token18)* (token19*token19)) - (token16*token17*token42*token46* (token11*token11)* (token12*token12)*( (mHsm*mHsm*mHsm*mHsm) - 16* (mH3*mH3)* (MZ*MZ) - 2* (mHsm*mHsm)*(s + t - u +  (MZ*MZ)) +  (( (MZ*MZ) + s + t - u)*( (MZ*MZ) + s + t - u))))/(2.*(-u +  (mH1*mH1))*(u -  (mH2*mH2))* (MZ*MZ)* (token18*token18)* (token19*token19)* (token20*token20)) + ( (token11*token11)* (token12*token12)* (token16*token16)* (token17*token17)*( (mHsm*mHsm*mHsm*mHsm) - 16* (mH3*mH3)* (MZ*MZ) - 2* (mHsm*mHsm)*(s + t - u +  (MZ*MZ)) +  (( (MZ*MZ) + s + t - u)*( (MZ*MZ) + s + t - u))))/(4.* (MZ*MZ)* (token18*token18)* (token19*token19)* (token20*token20)* (( (mH1*mH1) - u)*( (mH1*mH1) - u))) + ( (token11*token11)* (token12*token12)* (token42*token42)* (token46*token46)*( (mHsm*mHsm*mHsm*mHsm) - 16* (mH3*mH3)* (MZ*MZ) - 2* (mHsm*mHsm)*(s + t - u +  (MZ*MZ)) +  (( (MZ*MZ) + s + t - u)*( (MZ*MZ) + s + t - u))))/(4.* (MZ*MZ)* (token18*token18)* (token19*token19)* (token20*token20)* (( (mH2*mH2) - u)*( (mH2*mH2) - u))) - (token16*token17*token84*(-s +  (MZ*MZ))*((-s +  (mHsm*mHsm))*(-s - t + u +  (mHsm*mHsm)) - (2*s - t + u + 2* (mHsm*mHsm))* (MZ*MZ) +  (MZ*MZ*MZ*MZ))* (token11*token11)* (token12*token12))/(token20*(-u +  (mH1*mH1))* (MZ*MZ)* (token18*token18)* (token19*token19)*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) - (token42*token46*token84*(-s +  (MZ*MZ))*((-s +  (mHsm*mHsm))*(-s - t + u +  (mHsm*mHsm)) - (2*s - t + u + 2* (mHsm*mHsm))* (MZ*MZ) +  (MZ*MZ*MZ*MZ))* (token11*token11)* (token12*token12))/(token20*(-u +  (mH2*mH2))* (MZ*MZ)* (token18*token18)* (token19*token19)*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + (token16*token17*token84*(-s +  (MZ*MZ))*((-t +  (mH3*mH3))*(-s +  (mHsm*mHsm)) + (-s - t - 2*u + 3* (mH3*mH3) + 3* (mHsm*mHsm))* (MZ*MZ) +  (MZ*MZ*MZ*MZ))* (token11*token11)* (token12*token12))/((-t +  (mH1*mH1))* (MZ*MZ)* (token18*token18)* (token19*token19)*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + (token42*token46*token84*(-s +  (MZ*MZ))*((-t +  (mH3*mH3))*(-s +  (mHsm*mHsm)) + (-s - t - 2*u + 3* (mH3*mH3) + 3* (mHsm*mHsm))* (MZ*MZ) +  (MZ*MZ*MZ*MZ))* (token11*token11)* (token12*token12))/((-t +  (mH2*mH2))* (MZ*MZ)* (token18*token18)* (token19*token19)*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + (( (mHsm*mHsm*mHsm*mHsm) - 2* (mHsm*mHsm)*(s +  (MZ*MZ)) +  (( (MZ*MZ) - s)*( (MZ*MZ) - s)))* (token11*token11)* (token12*token12)* (token84*token84))/( (MZ*MZ)* (token18*token18)* (token19*token19)*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ))));
}
double DT::H3H3ZZ(const double &cos_t, const double &s){
double t =  (mH3*mH3) + (-s + cos_t*sqrt(s - 4* (mH3*mH3))*sqrt(s - 4* (MZ*MZ)))/2. +  (MZ*MZ);
double u = -s - t + mH3*mH3 + mH3*mH3 + MZ*MZ + MZ*MZ;
return -0.25*(token25*token85*(s*(s + t - u)*(-u +  (mH3*mH3)) - 2*(s + 3*t + u + 4* (mH3*mH3))* (MZ*MZ*MZ*MZ) + 8* (MZ*MZ*MZ*MZ*MZ*MZ) +  (MZ*MZ)*(2*t*(t - u) + 3*s*(t + u) - 2*(3*s + t - u)* (mH3*mH3) +  (s*s)))* (token21*token21)* (token23*token23))/((-u +  (mH1*mH1))* (MZ*MZ*MZ*MZ)* (token20*token20)* (token26*token26)* (token27*token27)) - (token77*token85*(s*(s + t - u)*(-u +  (mH3*mH3)) - 2*(s + 3*t + u + 4* (mH3*mH3))* (MZ*MZ*MZ*MZ) + 8* (MZ*MZ*MZ*MZ*MZ*MZ) +  (MZ*MZ)*(2*t*(t - u) + 3*s*(t + u) - 2*(3*s + t - u)* (mH3*mH3) +  (s*s)))* (token21*token21)* (token23*token23))/(4.*(-u +  (mH2*mH2))* (MZ*MZ*MZ*MZ)* (token20*token20)* (token26*token26)* (token27*token27)) - (token25*token85*(s*(s - t + u)*(-t +  (mH3*mH3)) - 2*(s + t + 3*u + 4* (mH3*mH3))* (MZ*MZ*MZ*MZ) + 8* (MZ*MZ*MZ*MZ*MZ*MZ) +  (MZ*MZ)*(2*u*(-t + u) + 3*s*(t + u) - 2*(3*s - t + u)* (mH3*mH3) +  (s*s)))* (token21*token21)* (token23*token23))/(4.*(-t +  (mH1*mH1))* (MZ*MZ*MZ*MZ)* (token20*token20)* (token26*token26)* (token27*token27)) - (token77*token85*(s*(s - t + u)*(-t +  (mH3*mH3)) - 2*(s + t + 3*u + 4* (mH3*mH3))* (MZ*MZ*MZ*MZ) + 8* (MZ*MZ*MZ*MZ*MZ*MZ) +  (MZ*MZ)*(2*u*(-t + u) + 3*s*(t + u) - 2*(3*s - t + u)* (mH3*mH3) +  (s*s)))* (token21*token21)* (token23*token23))/(4.*(-t +  (mH2*mH2))* (MZ*MZ*MZ*MZ)* (token20*token20)* (token26*token26)* (token27*token27)) + ((-4*s* (MZ*MZ) + 12* (MZ*MZ*MZ*MZ) +  (s*s))* (token21*token21)* (token23*token23)* (token85*token85))/(4.* (MZ*MZ*MZ*MZ)* (token20*token20)* (token26*token26)* (token27*token27)) - (token25*token77* (token21*token21)* (token23*token23)*(-16* (mH3*mH3)* (MZ*MZ) +  ((s + t - u)*(s + t - u)))*( (mH3*mH3*mH3*mH3) - 2* (mH3*mH3)*(u +  (MZ*MZ)) +  (( (MZ*MZ) - u)*( (MZ*MZ) - u))))/(8.*(-u +  (mH1*mH1))*(u -  (mH2*mH2))* (MZ*MZ*MZ*MZ)* (token20*token20)* (token26*token26)* (token27*token27)) + ( (token21*token21)* (token23*token23)* (token25*token25)*(-16* (mH3*mH3)* (MZ*MZ) +  ((s + t - u)*(s + t - u)))*( (mH3*mH3*mH3*mH3) - 2* (mH3*mH3)*(u +  (MZ*MZ)) +  (( (MZ*MZ) - u)*( (MZ*MZ) - u))))/(16.* (MZ*MZ*MZ*MZ)* (token20*token20)* (token26*token26)* (token27*token27)* (( (mH1*mH1) - u)*( (mH1*mH1) - u))) + ( (token21*token21)* (token23*token23)* (token77*token77)*(-16* (mH3*mH3)* (MZ*MZ) +  ((s + t - u)*(s + t - u)))*( (mH3*mH3*mH3*mH3) - 2* (mH3*mH3)*(u +  (MZ*MZ)) +  (( (MZ*MZ) - u)*( (MZ*MZ) - u))))/(16.* (MZ*MZ*MZ*MZ)* (token20*token20)* (token26*token26)* (token27*token27)* (( (mH2*mH2) - u)*( (mH2*mH2) - u))) + (token25*token77* (token21*token21)* (token23*token23)*(-8*(-s + 2*(t + u) + 4* (mH3*mH3))* (MZ*MZ*MZ*MZ*MZ*MZ) + 16* (MZ*MZ*MZ*MZ*MZ*MZ*MZ*MZ) - (-t +  (mH3*mH3))*(-u +  (mH3*mH3))*(- (s*s) +  ((t - u)*(t - u))) +  (MZ*MZ)*(-8*s*t*u + 8*s* (mH3*mH3*mH3*mH3) + (t + u)* (s*s) - (t + u)* ((t - u)*(t - u)) - 2* (mH3*mH3)*( (s*s) + 3* ((t - u)*(t - u)))) +  (MZ*MZ*MZ*MZ)*(2*t*u - 16*(s - t - u)* (mH3*mH3) + 16* (mH3*mH3*mH3*mH3) +  (s*s) + 7* (t*t) + 7* (u*u))))/(8.*(-u +  (mH1*mH1))*(-t +  (mH2*mH2))* (MZ*MZ*MZ*MZ)* (token20*token20)* (token26*token26)* (token27*token27)) + (token25*token77* (token21*token21)* (token23*token23)*(-8*(-s + 2*(t + u) + 4* (mH3*mH3))* (MZ*MZ*MZ*MZ*MZ*MZ) + 16* (MZ*MZ*MZ*MZ*MZ*MZ*MZ*MZ) - (-t +  (mH3*mH3))*(-u +  (mH3*mH3))*(- (s*s) +  ((t - u)*(t - u))) +  (MZ*MZ)*(-8*s*t*u + 8*s* (mH3*mH3*mH3*mH3) + (t + u)* (s*s) - (t + u)* ((t - u)*(t - u)) - 2* (mH3*mH3)*( (s*s) + 3* ((t - u)*(t - u)))) +  (MZ*MZ*MZ*MZ)*(2*t*u - 16*(s - t - u)* (mH3*mH3) + 16* (mH3*mH3*mH3*mH3) +  (s*s) + 7* (t*t) + 7* (u*u))))/(8.*(-t +  (mH1*mH1))*(-u +  (mH2*mH2))* (MZ*MZ*MZ*MZ)* (token20*token20)* (token26*token26)* (token27*token27)) + ( (token21*token21)* (token23*token23)* (token25*token25)*(-8*(-s + 2*(t + u) + 4* (mH3*mH3))* (MZ*MZ*MZ*MZ*MZ*MZ) + 16* (MZ*MZ*MZ*MZ*MZ*MZ*MZ*MZ) - (-t +  (mH3*mH3))*(-u +  (mH3*mH3))*(- (s*s) +  ((t - u)*(t - u))) +  (MZ*MZ)*(-8*s*t*u + 8*s* (mH3*mH3*mH3*mH3) + (t + u)* (s*s) - (t + u)* ((t - u)*(t - u)) - 2* (mH3*mH3)*( (s*s) + 3* ((t - u)*(t - u)))) +  (MZ*MZ*MZ*MZ)*(2*t*u - 16*(s - t - u)* (mH3*mH3) + 16* (mH3*mH3*mH3*mH3) +  (s*s) + 7* (t*t) + 7* (u*u))))/(8.*(-t +  (mH1*mH1))*(-u +  (mH1*mH1))* (MZ*MZ*MZ*MZ)* (token20*token20)* (token26*token26)* (token27*token27)) + ( (token21*token21)* (token23*token23)* (token77*token77)*(-8*(-s + 2*(t + u) + 4* (mH3*mH3))* (MZ*MZ*MZ*MZ*MZ*MZ) + 16* (MZ*MZ*MZ*MZ*MZ*MZ*MZ*MZ) - (-t +  (mH3*mH3))*(-u +  (mH3*mH3))*(- (s*s) +  ((t - u)*(t - u))) +  (MZ*MZ)*(-8*s*t*u + 8*s* (mH3*mH3*mH3*mH3) + (t + u)* (s*s) - (t + u)* ((t - u)*(t - u)) - 2* (mH3*mH3)*( (s*s) + 3* ((t - u)*(t - u)))) +  (MZ*MZ*MZ*MZ)*(2*t*u - 16*(s - t - u)* (mH3*mH3) + 16* (mH3*mH3*mH3*mH3) +  (s*s) + 7* (t*t) + 7* (u*u))))/(8.*(-t +  (mH2*mH2))*(-u +  (mH2*mH2))* (MZ*MZ*MZ*MZ)* (token20*token20)* (token26*token26)* (token27*token27)) - (token25*token77*( (mH3*mH3*mH3*mH3) - 2* (mH3*mH3)*(t +  (MZ*MZ)) +  (( (MZ*MZ) - t)*( (MZ*MZ) - t)))* (token21*token21)* (token23*token23)*(-16* (mH3*mH3)* (MZ*MZ) +  ((s - t + u)*(s - t + u))))/(8.*(-t +  (mH1*mH1))*(t -  (mH2*mH2))* (MZ*MZ*MZ*MZ)* (token20*token20)* (token26*token26)* (token27*token27)) + (( (mH3*mH3*mH3*mH3) - 2* (mH3*mH3)*(t +  (MZ*MZ)) +  (( (MZ*MZ) - t)*( (MZ*MZ) - t)))* (token21*token21)* (token23*token23)* (token25*token25)*(-16* (mH3*mH3)* (MZ*MZ) +  ((s - t + u)*(s - t + u))))/(16.* (MZ*MZ*MZ*MZ)* (( (mH1*mH1) - t)*( (mH1*mH1) - t))* (token20*token20)* (token26*token26)* (token27*token27)) + (( (mH3*mH3*mH3*mH3) - 2* (mH3*mH3)*(t +  (MZ*MZ)) +  (( (MZ*MZ) - t)*( (MZ*MZ) - t)))* (token21*token21)* (token23*token23)* (token77*token77)*(-16* (mH3*mH3)* (MZ*MZ) +  ((s - t + u)*(s - t + u))))/(16.* (MZ*MZ*MZ*MZ)* (( (mH2*mH2) - t)*( (mH2*mH2) - t))* (token20*token20)* (token26*token26)* (token27*token27)) - (token4*token53*token85*(-s +  (mHsm*mHsm))*(-4*s* (MZ*MZ) + 12* (MZ*MZ*MZ*MZ) +  (s*s))* (token21*token21)* (token23*token23))/(2.* (MZ*MZ*MZ*MZ)* (token20*token20)* (token26*token26)* (token27*token27)*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + (token25*token4*token53*(-s +  (mHsm*mHsm))*(s*(s + t - u)*(-u +  (mH3*mH3)) - 2*(s + 3*t + u + 4* (mH3*mH3))* (MZ*MZ*MZ*MZ) + 8* (MZ*MZ*MZ*MZ*MZ*MZ) +  (MZ*MZ)*(2*t*(t - u) + 3*s*(t + u) - 2*(3*s + t - u)* (mH3*mH3) +  (s*s)))* (token21*token21)* (token23*token23))/(4.*(-u +  (mH1*mH1))* (MZ*MZ*MZ*MZ)* (token20*token20)* (token26*token26)* (token27*token27)*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + (token4*token53*token77*(-s +  (mHsm*mHsm))*(s*(s + t - u)*(-u +  (mH3*mH3)) - 2*(s + 3*t + u + 4* (mH3*mH3))* (MZ*MZ*MZ*MZ) + 8* (MZ*MZ*MZ*MZ*MZ*MZ) +  (MZ*MZ)*(2*t*(t - u) + 3*s*(t + u) - 2*(3*s + t - u)* (mH3*mH3) +  (s*s)))* (token21*token21)* (token23*token23))/(4.*(-u +  (mH2*mH2))* (MZ*MZ*MZ*MZ)* (token20*token20)* (token26*token26)* (token27*token27)*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + (token25*token4*token53*(-s +  (mHsm*mHsm))*(s*(s - t + u)*(-t +  (mH3*mH3)) - 2*(s + t + 3*u + 4* (mH3*mH3))* (MZ*MZ*MZ*MZ) + 8* (MZ*MZ*MZ*MZ*MZ*MZ) +  (MZ*MZ)*(2*u*(-t + u) + 3*s*(t + u) - 2*(3*s - t + u)* (mH3*mH3) +  (s*s)))* (token21*token21)* (token23*token23))/(4.*(-t +  (mH1*mH1))* (MZ*MZ*MZ*MZ)* (token20*token20)* (token26*token26)* (token27*token27)*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + (token4*token53*token77*(-s +  (mHsm*mHsm))*(s*(s - t + u)*(-t +  (mH3*mH3)) - 2*(s + t + 3*u + 4* (mH3*mH3))* (MZ*MZ*MZ*MZ) + 8* (MZ*MZ*MZ*MZ*MZ*MZ) +  (MZ*MZ)*(2*u*(-t + u) + 3*s*(t + u) - 2*(3*s - t + u)* (mH3*mH3) +  (s*s)))* (token21*token21)* (token23*token23))/(4.*(-t +  (mH2*mH2))* (MZ*MZ*MZ*MZ)* (token20*token20)* (token26*token26)* (token27*token27)*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + ((-4*s* (MZ*MZ) + 12* (MZ*MZ*MZ*MZ) +  (s*s))* (token21*token21)* (token23*token23)* (token4*token4)* (token53*token53))/(4.* (MZ*MZ*MZ*MZ)* (token20*token20)* (token26*token26)* (token27*token27)*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm))));
}
double DT::H3H3wW(const double &cos_t, const double &s){
double t =  (mH3*mH3) + (-s + cos_t*sqrt(s - 4* (mH3*mH3))*sqrt(s - 4* (MW*MW)))/2. +  (MW*MW);
double u = -s - t + mH3*mH3 + mH3*mH3 + MW*MW + MW*MW;
return -0.25*(token28*token29*(s*(s - t + u)*(-t +  (mH3*mH3)) - 2*(s + t + 3*u + 4* (mH3*mH3))* (MW*MW*MW*MW) + 8* (MW*MW*MW*MW*MW*MW) +  (MW*MW)*(2*u*(-t + u) + 3*s*(t + u) - 2*(3*s - t + u)* (mH3*mH3) +  (s*s)))* (token21*token21)* (token85*token85))/(token19*token20*token27*(-t +  (mHc*mHc))* (MW*MW*MW*MW)) - (token29*(s*(s + t - u)*(-u +  (mH3*mH3)) - 2*(s + 3*t + u + 4* (mH3*mH3))* (MW*MW*MW*MW) + 8* (MW*MW*MW*MW*MW*MW) +  (MW*MW)*(2*t*(t - u) + 3*s*(t + u) - 2*(3*s + t - u)* (mH3*mH3) +  (s*s)))* (token21*token21)* (token85*token85))/(4.*token19*token27*(-u +  (mHc*mHc))* (MW*MW*MW*MW)* (token20*token20)) + ((-4*s* (MW*MW) + 12* (MW*MW*MW*MW) +  (s*s))* (token21*token21)* (token85*token85))/(4.* (MW*MW*MW*MW)* (token20*token20)* (token27*token27)) + ( (token21*token21)* (token29*token29)* (token85*token85)*(-16* (mH3*mH3)* (MW*MW) +  ((s + t - u)*(s + t - u)))*( (mH3*mH3*mH3*mH3) - 2* (mH3*mH3)*(u +  (MW*MW)) +  (( (MW*MW) - u)*( (MW*MW) - u))))/(16.* (MW*MW*MW*MW)* (token19*token19)* (token20*token20)* (( (mHc*mHc) - u)*( (mHc*mHc) - u))) + (token28* (token21*token21)* (token29*token29)* (token85*token85)*(-8*(-s + 2*(t + u) + 4* (mH3*mH3))* (MW*MW*MW*MW*MW*MW) + 16* (MW*MW*MW*MW*MW*MW*MW*MW) - (-t +  (mH3*mH3))*(-u +  (mH3*mH3))*(- (s*s) +  ((t - u)*(t - u))) +  (MW*MW)*(-8*s*t*u + 8*s* (mH3*mH3*mH3*mH3) + (t + u)* (s*s) - (t + u)* ((t - u)*(t - u)) - 2* (mH3*mH3)*( (s*s) + 3* ((t - u)*(t - u)))) +  (MW*MW*MW*MW)*(2*t*u - 16*(s - t - u)* (mH3*mH3) + 16* (mH3*mH3*mH3*mH3) +  (s*s) + 7* (t*t) + 7* (u*u))))/(8.*token20*(-t +  (mHc*mHc))*(-u +  (mHc*mHc))* (MW*MW*MW*MW)* (token19*token19)) + (( (mH3*mH3*mH3*mH3) - 2* (mH3*mH3)*(t +  (MW*MW)) +  (( (MW*MW) - t)*( (MW*MW) - t)))* (token21*token21)* (token28*token28)* (token29*token29)* (token85*token85)*(-16* (mH3*mH3)* (MW*MW) +  ((s - t + u)*(s - t + u))))/(16.* (MW*MW*MW*MW)* (( (mHc*mHc) - t)*( (mHc*mHc) - t))* (token19*token19)) + (token28*token29*token4*token53*token85*(-s +  (mHsm*mHsm))*(s*(s - t + u)*(-t +  (mH3*mH3)) - 2*(s + t + 3*u + 4* (mH3*mH3))* (MW*MW*MW*MW) + 8* (MW*MW*MW*MW*MW*MW) +  (MW*MW)*(2*u*(-t + u) + 3*s*(t + u) - 2*(3*s - t + u)* (mH3*mH3) +  (s*s)))* (token21*token21))/(4.*token19*token20*token27*(-t +  (mHc*mHc))* (MW*MW*MW*MW)*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + (token29*token4*token53*token85*(-s +  (mHsm*mHsm))*(s*(s + t - u)*(-u +  (mH3*mH3)) - 2*(s + 3*t + u + 4* (mH3*mH3))* (MW*MW*MW*MW) + 8* (MW*MW*MW*MW*MW*MW) +  (MW*MW)*(2*t*(t - u) + 3*s*(t + u) - 2*(3*s + t - u)* (mH3*mH3) +  (s*s)))* (token21*token21))/(4.*token19*token27*(-u +  (mHc*mHc))* (MW*MW*MW*MW)* (token20*token20)*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) - (token4*token53*token85*(-s +  (mHsm*mHsm))*(-4*s* (MW*MW) + 12* (MW*MW*MW*MW) +  (s*s))* (token21*token21))/(2.* (MW*MW*MW*MW)* (token20*token20)* (token27*token27)*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + ((-4*s* (MW*MW) + 12* (MW*MW*MW*MW) +  (s*s))* (token21*token21)* (token4*token4)* (token53*token53))/(4.* (MW*MW*MW*MW)* (token20*token20)* (token27*token27)*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm))));
}
double DT::H3H3Ee(const double &cos_t, const double &s){
return (2*(s - 4* (Me*Me))* (token30*token30)* (token53*token53)* (token6*token6))/( (token4*token4)*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + (8*s* (token30*token30)* (token31*token31)* (token84*token84))/( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)));
}
double DT::H3H3Mm(const double &cos_t, const double &s){
return (2*(s - 4* (MM*MM))* (token32*token32)* (token53*token53)* (token6*token6))/( (token4*token4)*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + (8*s* (token31*token31)* (token32*token32)* (token84*token84))/( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)));
}
double DT::H3H3TAta(const double &cos_t, const double &s){
return (2*(s - 4* (MTA*MTA))* (token33*token33)* (token53*token53)* (token6*token6))/( (token4*token4)*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + (8*s* (token31*token31)* (token33*token33)* (token84*token84))/( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)));
}
double DT::H3H3Uu(const double &cos_t, const double &s){
return (6*(s - 4* (MU*MU))* (token34*token34)* (token53*token53)* (token6*token6))/( (token4*token4)*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + (24*s* (token31*token31)* (token34*token34)* (token84*token84))/( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)));
}
double DT::H3H3Cc(const double &cos_t, const double &s){
return (6*(s - 4* (MC*MC))* (token35*token35)* (token53*token53)* (token6*token6))/( (token4*token4)*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + (24*s* (token31*token31)* (token35*token35)* (token84*token84))/( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)));
}
double DT::H3H3Tt(const double &cos_t, const double &s){
return (6*(s - 4* (MT*MT))* (token36*token36)* (token53*token53)* (token6*token6))/( (token4*token4)*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + (24*s* (token31*token31)* (token36*token36)* (token84*token84))/( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)));
}
double DT::H3H3Dd(const double &cos_t, const double &s){
return (6*(s - 4* (MD*MD))* (token37*token37)* (token53*token53)* (token6*token6))/( (token4*token4)*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + (24*s* (token31*token31)* (token37*token37)* (token84*token84))/( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)));
}
double DT::H3H3Ss(const double &cos_t, const double &s){
return (6*(s - 4* (MS*MS))* (token38*token38)* (token53*token53)* (token6*token6))/( (token4*token4)*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + (24*s* (token31*token31)* (token38*token38)* (token84*token84))/( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)));
}
double DT::H3H3Bb(const double &cos_t, const double &s){
return (6*(s - 4* (MB*MB))* (token39*token39)* (token53*token53)* (token6*token6))/( (token4*token4)*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + (24*s* (token31*token31)* (token39*token39)* (token84*token84))/( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)));
}
