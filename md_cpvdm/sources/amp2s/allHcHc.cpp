///////////////////CODE GENERATED VIA MATHEMATICA///////////////////


#include "../../model.hpp"

double DT::HcHcWW(const double &cos_t, const double &s){
	using namespace PAR;
	double t =  (mHc*mHc) + (-s + cos_t*sqrt(s - 4* (mHc*mHc))*sqrt(s - 4* (MW*MW)))/2. +  (MW*MW);
	double u = -s - t + mHc*mHc + mHc*mHc + MW*MW + MW*MW;
	return 0.5*(-0.5*((4*RR1x1*RR1x2*RR2x1*RR2x2 +  (RR1x1*RR1x1)*( (RR2x1*RR2x1) -  (RR2x2*RR2x2)) +  (RR1x2*RR1x2)*(- (RR2x1*RR2x1) +  (RR2x2*RR2x2)))* (token21*token21)*(-16* (mHc*mHc)* (MW*MW) +  ((s + t - u)*(s + t - u)))*( (mHc*mHc*mHc*mHc) - 2* (mHc*mHc)*(u +  (MW*MW)) +  (( (MW*MW) - u)*( (MW*MW) - u))))/((-u +  (mH1*mH1))*(u -  (mH2*mH2))* (MW*MW*MW*MW)* (token27*token27)* (token28*token28)) - ((4*RR1x1*RR1x2*RR3x1*RR3x2 +  (RR1x1*RR1x1)*( (RR3x1*RR3x1) -  (RR3x2*RR3x2)) +  (RR1x2*RR1x2)*(- (RR3x1*RR3x1) +  (RR3x2*RR3x2)))* (token21*token21)*(-16* (mHc*mHc)* (MW*MW) +  ((s + t - u)*(s + t - u)))*( (mHc*mHc*mHc*mHc) - 2* (mHc*mHc)*(u +  (MW*MW)) +  (( (MW*MW) - u)*( (MW*MW) - u))))/(2.*(-u +  (mH1*mH1))*(u -  (mH3*mH3))* (MW*MW*MW*MW)* (token27*token27)* (token28*token28)) - ((4*RR2x1*RR2x2*RR3x1*RR3x2 +  (RR2x1*RR2x1)*( (RR3x1*RR3x1) -  (RR3x2*RR3x2)) +  (RR2x2*RR2x2)*(- (RR3x1*RR3x1) +  (RR3x2*RR3x2)))* (token21*token21)*(-16* (mHc*mHc)* (MW*MW) +  ((s + t - u)*(s + t - u)))*( (mHc*mHc*mHc*mHc) - 2* (mHc*mHc)*(u +  (MW*MW)) +  (( (MW*MW) - u)*( (MW*MW) - u))))/(2.*(-u +  (mH2*mH2))*(u -  (mH3*mH3))* (MW*MW*MW*MW)* (token27*token27)* (token28*token28)) + ((4*RR1x1*RR1x2*RR2x1*RR2x2 +  (RR1x1*RR1x1)*( (RR2x1*RR2x1) -  (RR2x2*RR2x2)) +  (RR1x2*RR1x2)*(- (RR2x1*RR2x1) +  (RR2x2*RR2x2)))* (token21*token21)*(-8*(-s + 2*(t + u) + 4* (mHc*mHc))* (MW*MW*MW*MW*MW*MW) + 16* (MW*MW*MW*MW*MW*MW*MW*MW) - (-t +  (mHc*mHc))*(-u +  (mHc*mHc))*(- (s*s) +  ((t - u)*(t - u))) +  (MW*MW)*(-8*s*t*u + 8*s* (mHc*mHc*mHc*mHc) + (t + u)* (s*s) - (t + u)* ((t - u)*(t - u)) - 2* (mHc*mHc)*( (s*s) + 3* ((t - u)*(t - u)))) +  (MW*MW*MW*MW)*(2*t*u - 16*(s - t - u)* (mHc*mHc) + 16* (mHc*mHc*mHc*mHc) +  (s*s) + 7* (t*t) + 7* (u*u))))/(2.*(-u +  (mH1*mH1))*(-t +  (mH2*mH2))* (MW*MW*MW*MW)* (token27*token27)* (token28*token28)) + ((4*RR1x1*RR1x2*RR2x1*RR2x2 +  (RR1x1*RR1x1)*( (RR2x1*RR2x1) -  (RR2x2*RR2x2)) +  (RR1x2*RR1x2)*(- (RR2x1*RR2x1) +  (RR2x2*RR2x2)))* (token21*token21)*(-8*(-s + 2*(t + u) + 4* (mHc*mHc))* (MW*MW*MW*MW*MW*MW) + 16* (MW*MW*MW*MW*MW*MW*MW*MW) - (-t +  (mHc*mHc))*(-u +  (mHc*mHc))*(- (s*s) +  ((t - u)*(t - u))) +  (MW*MW)*(-8*s*t*u + 8*s* (mHc*mHc*mHc*mHc) + (t + u)* (s*s) - (t + u)* ((t - u)*(t - u)) - 2* (mHc*mHc)*( (s*s) + 3* ((t - u)*(t - u)))) +  (MW*MW*MW*MW)*(2*t*u - 16*(s - t - u)* (mHc*mHc) + 16* (mHc*mHc*mHc*mHc) +  (s*s) + 7* (t*t) + 7* (u*u))))/(2.*(-t +  (mH1*mH1))*(-u +  (mH2*mH2))* (MW*MW*MW*MW)* (token27*token27)* (token28*token28)) + ((4*RR1x1*RR1x2*RR3x1*RR3x2 +  (RR1x1*RR1x1)*( (RR3x1*RR3x1) -  (RR3x2*RR3x2)) +  (RR1x2*RR1x2)*(- (RR3x1*RR3x1) +  (RR3x2*RR3x2)))* (token21*token21)*(-8*(-s + 2*(t + u) + 4* (mHc*mHc))* (MW*MW*MW*MW*MW*MW) + 16* (MW*MW*MW*MW*MW*MW*MW*MW) - (-t +  (mHc*mHc))*(-u +  (mHc*mHc))*(- (s*s) +  ((t - u)*(t - u))) +  (MW*MW)*(-8*s*t*u + 8*s* (mHc*mHc*mHc*mHc) + (t + u)* (s*s) - (t + u)* ((t - u)*(t - u)) - 2* (mHc*mHc)*( (s*s) + 3* ((t - u)*(t - u)))) +  (MW*MW*MW*MW)*(2*t*u - 16*(s - t - u)* (mHc*mHc) + 16* (mHc*mHc*mHc*mHc) +  (s*s) + 7* (t*t) + 7* (u*u))))/(2.*(-u +  (mH1*mH1))*(-t +  (mH3*mH3))* (MW*MW*MW*MW)* (token27*token27)* (token28*token28)) + ((4*RR1x1*RR1x2*RR3x1*RR3x2 +  (RR1x1*RR1x1)*( (RR3x1*RR3x1) -  (RR3x2*RR3x2)) +  (RR1x2*RR1x2)*(- (RR3x1*RR3x1) +  (RR3x2*RR3x2)))* (token21*token21)*(-8*(-s + 2*(t + u) + 4* (mHc*mHc))* (MW*MW*MW*MW*MW*MW) + 16* (MW*MW*MW*MW*MW*MW*MW*MW) - (-t +  (mHc*mHc))*(-u +  (mHc*mHc))*(- (s*s) +  ((t - u)*(t - u))) +  (MW*MW)*(-8*s*t*u + 8*s* (mHc*mHc*mHc*mHc) + (t + u)* (s*s) - (t + u)* ((t - u)*(t - u)) - 2* (mHc*mHc)*( (s*s) + 3* ((t - u)*(t - u)))) +  (MW*MW*MW*MW)*(2*t*u - 16*(s - t - u)* (mHc*mHc) + 16* (mHc*mHc*mHc*mHc) +  (s*s) + 7* (t*t) + 7* (u*u))))/(2.*(-t +  (mH1*mH1))*(-u +  (mH3*mH3))* (MW*MW*MW*MW)* (token27*token27)* (token28*token28)) + ((4*RR2x1*RR2x2*RR3x1*RR3x2 +  (RR2x1*RR2x1)*( (RR3x1*RR3x1) -  (RR3x2*RR3x2)) +  (RR2x2*RR2x2)*(- (RR3x1*RR3x1) +  (RR3x2*RR3x2)))* (token21*token21)*(-8*(-s + 2*(t + u) + 4* (mHc*mHc))* (MW*MW*MW*MW*MW*MW) + 16* (MW*MW*MW*MW*MW*MW*MW*MW) - (-t +  (mHc*mHc))*(-u +  (mHc*mHc))*(- (s*s) +  ((t - u)*(t - u))) +  (MW*MW)*(-8*s*t*u + 8*s* (mHc*mHc*mHc*mHc) + (t + u)* (s*s) - (t + u)* ((t - u)*(t - u)) - 2* (mHc*mHc)*( (s*s) + 3* ((t - u)*(t - u)))) +  (MW*MW*MW*MW)*(2*t*u - 16*(s - t - u)* (mHc*mHc) + 16* (mHc*mHc*mHc*mHc) +  (s*s) + 7* (t*t) + 7* (u*u))))/(2.*(-u +  (mH2*mH2))*(-t +  (mH3*mH3))* (MW*MW*MW*MW)* (token27*token27)* (token28*token28)) + ((4*RR2x1*RR2x2*RR3x1*RR3x2 +  (RR2x1*RR2x1)*( (RR3x1*RR3x1) -  (RR3x2*RR3x2)) +  (RR2x2*RR2x2)*(- (RR3x1*RR3x1) +  (RR3x2*RR3x2)))* (token21*token21)*(-8*(-s + 2*(t + u) + 4* (mHc*mHc))* (MW*MW*MW*MW*MW*MW) + 16* (MW*MW*MW*MW*MW*MW*MW*MW) - (-t +  (mHc*mHc))*(-u +  (mHc*mHc))*(- (s*s) +  ((t - u)*(t - u))) +  (MW*MW)*(-8*s*t*u + 8*s* (mHc*mHc*mHc*mHc) + (t + u)* (s*s) - (t + u)* ((t - u)*(t - u)) - 2* (mHc*mHc)*( (s*s) + 3* ((t - u)*(t - u)))) +  (MW*MW*MW*MW)*(2*t*u - 16*(s - t - u)* (mHc*mHc) + 16* (mHc*mHc*mHc*mHc) +  (s*s) + 7* (t*t) + 7* (u*u))))/(2.*(-t +  (mH2*mH2))*(-u +  (mH3*mH3))* (MW*MW*MW*MW)* (token27*token27)* (token28*token28)) - ((4*RR1x1*RR1x2*RR2x1*RR2x2 +  (RR1x1*RR1x1)*( (RR2x1*RR2x1) -  (RR2x2*RR2x2)) +  (RR1x2*RR1x2)*(- (RR2x1*RR2x1) +  (RR2x2*RR2x2)))*( (mHc*mHc*mHc*mHc) - 2* (mHc*mHc)*(t +  (MW*MW)) +  (( (MW*MW) - t)*( (MW*MW) - t)))* (token21*token21)*(-16* (mHc*mHc)* (MW*MW) +  ((s - t + u)*(s - t + u))))/(2.*(-t +  (mH1*mH1))*(t -  (mH2*mH2))* (MW*MW*MW*MW)* (token27*token27)* (token28*token28)) - ((4*RR1x1*RR1x2*RR3x1*RR3x2 +  (RR1x1*RR1x1)*( (RR3x1*RR3x1) -  (RR3x2*RR3x2)) +  (RR1x2*RR1x2)*(- (RR3x1*RR3x1) +  (RR3x2*RR3x2)))*( (mHc*mHc*mHc*mHc) - 2* (mHc*mHc)*(t +  (MW*MW)) +  (( (MW*MW) - t)*( (MW*MW) - t)))* (token21*token21)*(-16* (mHc*mHc)* (MW*MW) +  ((s - t + u)*(s - t + u))))/(2.*(-t +  (mH1*mH1))*(t -  (mH3*mH3))* (MW*MW*MW*MW)* (token27*token27)* (token28*token28)) - ((4*RR2x1*RR2x2*RR3x1*RR3x2 +  (RR2x1*RR2x1)*( (RR3x1*RR3x1) -  (RR3x2*RR3x2)) +  (RR2x2*RR2x2)*(- (RR3x1*RR3x1) +  (RR3x2*RR3x2)))*( (mHc*mHc*mHc*mHc) - 2* (mHc*mHc)*(t +  (MW*MW)) +  (( (MW*MW) - t)*( (MW*MW) - t)))* (token21*token21)*(-16* (mHc*mHc)* (MW*MW) +  ((s - t + u)*(s - t + u))))/(2.*(-t +  (mH2*mH2))*(t -  (mH3*mH3))* (MW*MW*MW*MW)* (token27*token27)* (token28*token28)) + ( (token21*token21)*(-16* (mHc*mHc)* (MW*MW) +  ((s + t - u)*(s + t - u)))*( (mHc*mHc*mHc*mHc) - 2* (mHc*mHc)*(u +  (MW*MW)) +  (( (MW*MW) - u)*( (MW*MW) - u)))* (( (RR1x1*RR1x1) +  (RR1x2*RR1x2))*( (RR1x1*RR1x1) +  (RR1x2*RR1x2))))/(4.* (MW*MW*MW*MW)* (token27*token27)* (token28*token28)* (( (mH1*mH1) - u)*( (mH1*mH1) - u))) + ( (token21*token21)*(-8*(-s + 2*(t + u) + 4* (mHc*mHc))* (MW*MW*MW*MW*MW*MW) + 16* (MW*MW*MW*MW*MW*MW*MW*MW) - (-t +  (mHc*mHc))*(-u +  (mHc*mHc))*(- (s*s) +  ((t - u)*(t - u))) +  (MW*MW)*(-8*s*t*u + 8*s* (mHc*mHc*mHc*mHc) + (t + u)* (s*s) - (t + u)* ((t - u)*(t - u)) - 2* (mHc*mHc)*( (s*s) + 3* ((t - u)*(t - u)))) +  (MW*MW*MW*MW)*(2*t*u - 16*(s - t - u)* (mHc*mHc) + 16* (mHc*mHc*mHc*mHc) +  (s*s) + 7* (t*t) + 7* (u*u)))* (( (RR1x1*RR1x1) +  (RR1x2*RR1x2))*( (RR1x1*RR1x1) +  (RR1x2*RR1x2))))/(2.*(-t +  (mH1*mH1))*(-u +  (mH1*mH1))* (MW*MW*MW*MW)* (token27*token27)* (token28*token28)) + (( (mHc*mHc*mHc*mHc) - 2* (mHc*mHc)*(t +  (MW*MW)) +  (( (MW*MW) - t)*( (MW*MW) - t)))* (token21*token21)*(-16* (mHc*mHc)* (MW*MW) +  ((s - t + u)*(s - t + u)))* (( (RR1x1*RR1x1) +  (RR1x2*RR1x2))*( (RR1x1*RR1x1) +  (RR1x2*RR1x2))))/(4.* (MW*MW*MW*MW)* (( (mH1*mH1) - t)*( (mH1*mH1) - t))* (token27*token27)* (token28*token28)) + ( (token21*token21)*(-16* (mHc*mHc)* (MW*MW) +  ((s + t - u)*(s + t - u)))*( (mHc*mHc*mHc*mHc) - 2* (mHc*mHc)*(u +  (MW*MW)) +  (( (MW*MW) - u)*( (MW*MW) - u)))* (( (RR2x1*RR2x1) +  (RR2x2*RR2x2))*( (RR2x1*RR2x1) +  (RR2x2*RR2x2))))/(4.* (MW*MW*MW*MW)* (token27*token27)* (token28*token28)* (( (mH2*mH2) - u)*( (mH2*mH2) - u))) + ( (token21*token21)*(-8*(-s + 2*(t + u) + 4* (mHc*mHc))* (MW*MW*MW*MW*MW*MW) + 16* (MW*MW*MW*MW*MW*MW*MW*MW) - (-t +  (mHc*mHc))*(-u +  (mHc*mHc))*(- (s*s) +  ((t - u)*(t - u))) +  (MW*MW)*(-8*s*t*u + 8*s* (mHc*mHc*mHc*mHc) + (t + u)* (s*s) - (t + u)* ((t - u)*(t - u)) - 2* (mHc*mHc)*( (s*s) + 3* ((t - u)*(t - u)))) +  (MW*MW*MW*MW)*(2*t*u - 16*(s - t - u)* (mHc*mHc) + 16* (mHc*mHc*mHc*mHc) +  (s*s) + 7* (t*t) + 7* (u*u)))* (( (RR2x1*RR2x1) +  (RR2x2*RR2x2))*( (RR2x1*RR2x1) +  (RR2x2*RR2x2))))/(2.*(-t +  (mH2*mH2))*(-u +  (mH2*mH2))* (MW*MW*MW*MW)* (token27*token27)* (token28*token28)) + (( (mHc*mHc*mHc*mHc) - 2* (mHc*mHc)*(t +  (MW*MW)) +  (( (MW*MW) - t)*( (MW*MW) - t)))* (token21*token21)*(-16* (mHc*mHc)* (MW*MW) +  ((s - t + u)*(s - t + u)))* (( (RR2x1*RR2x1) +  (RR2x2*RR2x2))*( (RR2x1*RR2x1) +  (RR2x2*RR2x2))))/(4.* (MW*MW*MW*MW)* (( (mH2*mH2) - t)*( (mH2*mH2) - t))* (token27*token27)* (token28*token28)) + ( (token21*token21)*(-16* (mHc*mHc)* (MW*MW) +  ((s + t - u)*(s + t - u)))*( (mHc*mHc*mHc*mHc) - 2* (mHc*mHc)*(u +  (MW*MW)) +  (( (MW*MW) - u)*( (MW*MW) - u)))* (( (RR3x1*RR3x1) +  (RR3x2*RR3x2))*( (RR3x1*RR3x1) +  (RR3x2*RR3x2))))/(4.* (MW*MW*MW*MW)* (token27*token27)* (token28*token28)* (( (mH3*mH3) - u)*( (mH3*mH3) - u))) + ( (token21*token21)*(-8*(-s + 2*(t + u) + 4* (mHc*mHc))* (MW*MW*MW*MW*MW*MW) + 16* (MW*MW*MW*MW*MW*MW*MW*MW) - (-t +  (mHc*mHc))*(-u +  (mHc*mHc))*(- (s*s) +  ((t - u)*(t - u))) +  (MW*MW)*(-8*s*t*u + 8*s* (mHc*mHc*mHc*mHc) + (t + u)* (s*s) - (t + u)* ((t - u)*(t - u)) - 2* (mHc*mHc)*( (s*s) + 3* ((t - u)*(t - u)))) +  (MW*MW*MW*MW)*(2*t*u - 16*(s - t - u)* (mHc*mHc) + 16* (mHc*mHc*mHc*mHc) +  (s*s) + 7* (t*t) + 7* (u*u)))* (( (RR3x1*RR3x1) +  (RR3x2*RR3x2))*( (RR3x1*RR3x1) +  (RR3x2*RR3x2))))/(2.*(-t +  (mH3*mH3))*(-u +  (mH3*mH3))* (MW*MW*MW*MW)* (token27*token27)* (token28*token28)) + (( (mHc*mHc*mHc*mHc) - 2* (mHc*mHc)*(t +  (MW*MW)) +  (( (MW*MW) - t)*( (MW*MW) - t)))* (token21*token21)*(-16* (mHc*mHc)* (MW*MW) +  ((s - t + u)*(s - t + u)))* (( (RR3x1*RR3x1) +  (RR3x2*RR3x2))*( (RR3x1*RR3x1) +  (RR3x2*RR3x2))))/(4.* (MW*MW*MW*MW)* (( (mH3*mH3) - t)*( (mH3*mH3) - t))* (token27*token27)* (token28*token28)));
}
double DT::HcHChh(const double &cos_t, const double &s){
	using namespace PAR;
	double t =  (mHc*mHc) + (-s + cos_t*sqrt(s - 4* (mHc*mHc))*sqrt(s - 4* (mHsm*mHsm)))/2. +  (mHsm*mHsm);
	double u = -s - t + mHc*mHc + mHc*mHc + mHsm*mHsm + mHsm*mHsm;
	return 0.5*((2*token57*token87*token88* (token6*token6))/(t -  (mHc*mHc)) + (2*token57*token87*token88* (token6*token6))/(u -  (mHc*mHc)) +  (token57*token57)* (token6*token6) + (2* (token6*token6)* (token87*token87)* (token88*token88))/((-t +  (mHc*mHc))*(-u +  (mHc*mHc))) + ( (token6*token6)* (token87*token87)* (token88*token88))/ (( (mHc*mHc) - t)*( (mHc*mHc) - t)) + ( (token6*token6)* (token87*token87)* (token88*token88))/ (( (mHc*mHc) - u)*( (mHc*mHc) - u)) + (2*token2*token3*token6*token87*(s -  (mHsm*mHsm))* (token57*token57))/( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm))) + (2*token2*token3*token57*token6*token88*(-s +  (mHsm*mHsm))* (token87*token87))/((-t +  (mHc*mHc))*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + (2*token2*token3*token57*token6*token88*(-s +  (mHsm*mHsm))* (token87*token87))/((-u +  (mHc*mHc))*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + ( (token2*token2)* (token3*token3)* (token57*token57)* (token87*token87))/( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm))));
}
double DT::HcHChA(const double &cos_t, const double &s){
	using namespace PAR;
	double t = (-s + 2* (mHc*mHc) +  (mHsm*mHsm) + cos_t*sqrt(s - 4* (mHc*mHc))*sqrt( ((- (mHsm*mHsm) + s)*(- (mHsm*mHsm) + s))/s))/2.;
	double u = -s - t + mHc*mHc + mHc*mHc + mHsm*mHsm + 0*0;
	return (-(((-s + t + u + 6* (mHc*mHc) - 3* (mHsm*mHsm))* (token11*token11)* (token4*token4)* (token57*token57))/((-t +  (mHc*mHc))*(-u +  (mHc*mHc)))) - (2*(t +  (mHc*mHc))* (token11*token11)* (token4*token4)* (token57*token57))/ (( (mHc*mHc) - t)*( (mHc*mHc) - t)) + ((s + t - u - 4* (mHc*mHc) -  (mHsm*mHsm))* (token11*token11)* (token4*token4)* (token57*token57))/ (( (mHc*mHc) - u)*( (mHc*mHc) - u)));
}
double DT::HcHChZ(const double &cos_t, const double &s){
	using namespace PAR;
	double t = (-s + 2* (mHc*mHc) +  (mHsm*mHsm) +  (MZ*MZ) + cos_t*sqrt(s - 4* (mHc*mHc))*sqrt(( (mHsm*mHsm*mHsm*mHsm) - 2* (mHsm*mHsm)*(s +  (MZ*MZ)) +  (( (MZ*MZ) - s)*( (MZ*MZ) - s)))/s))/2.;
	double u = -s - t + mHc*mHc + mHc*mHc + mHsm*mHsm + MZ*MZ;
	return (-((token29*token60*((-t +  (mHc*mHc))*(-s - t + u +  (mHsm*mHsm)) + (s - 2*t - u - 5* (mHc*mHc) + 3* (mHsm*mHsm))* (MZ*MZ) +  (MZ*MZ*MZ*MZ))* (token11*token11)* (token30*token30)* (token4*token4)* (token51*token51)* (token57*token57)* (token58*token58)* (token59*token59))/((-t +  (mHc*mHc))*(-u +  (mHc*mHc))* (MZ*MZ))) + (( (mHc*mHc*mHc*mHc) - 2* (mHc*mHc)*(t +  (MZ*MZ)) +  (( (MZ*MZ) - t)*( (MZ*MZ) - t)))* (token11*token11)* (token30*token30)* (token4*token4)* (token51*token51)* (token57*token57)* (token58*token58)* (token59*token59)* (token60*token60))/( (MZ*MZ)* (( (mHc*mHc) - t)*( (mHc*mHc) - t))) + ( (token11*token11)* (token29*token29)* (token30*token30)* (token4*token4)* (token51*token51)* (token57*token57)* (token58*token58)* (token59*token59)*( (mHsm*mHsm*mHsm*mHsm) - 16* (mHc*mHc)* (MZ*MZ) - 2* (mHsm*mHsm)*(s + t - u +  (MZ*MZ)) +  (( (MZ*MZ) + s + t - u)*( (MZ*MZ) + s + t - u))))/(4.* (MZ*MZ)* (( (mHc*mHc) - u)*( (mHc*mHc) - u))) + (token11*token23*token29*token45*token57*token60*(-s +  (MZ*MZ))*((t - u)*(-t +  (mHc*mHc)) + (-2*s + t - u + 8* (mHc*mHc))* (MZ*MZ))* (token30*token30)* (token4*token4)* (token51*token51)* (token58*token58)* (token59*token59))/(token20*token26*token27*(-t +  (mHc*mHc))* (MZ*MZ)*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + (token11*token23*token45*token57*(-s +  (MZ*MZ))*((t - u)*(s + t - u -  (mHsm*mHsm)) + (4*s + t - u - 16* (mHc*mHc))* (MZ*MZ))* (token29*token29)* (token30*token30)* (token4*token4)* (token51*token51)* (token58*token58)* (token59*token59))/(2.*token20*token26*token27*(-u +  (mHc*mHc))* (MZ*MZ)*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + ( (token23*token23)* (token29*token29)* (token30*token30)* (token4*token4)* (token45*token45)* (token51*token51)* (token58*token58)* (token59*token59)*(4*(s - 4* (mHc*mHc))* (MZ*MZ) +  ((t - u)*(t - u))))/(4.* (MZ*MZ)* (token20*token20)* (token26*token26)* (token27*token27)*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))));
}
double DT::HcHCAA(const double &cos_t, const double &s){
	using namespace PAR;
	double t = (-s + cos_t*sqrt(s)*sqrt(s - 4* (mHc*mHc)))/2. +  (mHc*mHc);
	double u = -s - t + mHc*mHc + mHc*mHc + 0*0 + 0*0;
	return 0.5*(2* (token20*token20)* (token21*token21) + (2*token20* (token21*token21)*(4*s* (mHc*mHc) -  (s*s) +  ((t - u)*(t - u))))/(s*(-t +  (mHc*mHc))) + (2*token20* (token21*token21)*(4*s* (mHc*mHc) -  (s*s) +  ((t - u)*(t - u))))/(s*(-u +  (mHc*mHc))) - (4* (token21*token21)*(4*s* (mHc*mHc*mHc*mHc*mHc*mHc) +  (mHc*mHc*mHc*mHc)*(-4*s*(t + u) - 5* (s*s) +  ((t - u)*(t - u))) + t*u*(- (s*s) +  ((t - u)*(t - u))) +  (mHc*mHc)*((t + u)* (s*s) +  (s*s*s) - (t + u)* ((t - u)*(t - u)) - s*(-6*t*u +  (t*t) +  (u*u)))))/( (s*s)* (( (mHc*mHc) - t)*( (mHc*mHc) - t))) - (4* (token21*token21)*(4*s* (mHc*mHc*mHc*mHc*mHc*mHc) +  (mHc*mHc*mHc*mHc)*(-4*s*(t + u) - 5* (s*s) +  ((t - u)*(t - u))) + t*u*(- (s*s) +  ((t - u)*(t - u))) +  (mHc*mHc)*((t + u)* (s*s) +  (s*s*s) - (t + u)* ((t - u)*(t - u)) - s*(-6*t*u +  (t*t) +  (u*u)))))/( (s*s)* (( (mHc*mHc) - u)*( (mHc*mHc) - u))) + (2* (token21*token21)* ((4* (mHc*mHc)*s -  (s*s) +  ((t - u)*(t - u)))*(4* (mHc*mHc)*s -  (s*s) +  ((t - u)*(t - u)))))/((-t +  (mHc*mHc))*(-u +  (mHc*mHc))* (s*s)));
}
double DT::HcHCAZ(const double &cos_t, const double &s){
	using namespace PAR;
	double t = (-s + 2* (mHc*mHc) +  (MZ*MZ) + cos_t*sqrt(s - 4* (mHc*mHc))*sqrt( ((- (MZ*MZ) + s)*(- (MZ*MZ) + s))/s))/2.;
	double u = -s - t + mHc*mHc + mHc*mHc + 0*0 + MZ*MZ;
	return ((token29*token30*token51*((t - u)*(-t +  (mHc*mHc)) + (-2*s + t - u + 8* (mHc*mHc))* (MZ*MZ))* (token21*token21)* (token58*token58)* (token59*token59))/(token18*token19*(-t +  (mHc*mHc))* (MZ*MZ)) + (token29*token30*token51*((s + t - u)*(-s - 2*t + 2* (mHc*mHc)) + (3*(t + u) + 10* (mHc*mHc))* (MZ*MZ) - 3* (MZ*MZ*MZ*MZ))* (token21*token21)* (token58*token58)* (token59*token59))/(2.*token18*token19*(-u +  (mHc*mHc))* (MZ*MZ)) + (3* (token21*token21)* (token58*token58)* (token59*token59))/( (token18*token18)* (token19*token19)) - ((-s + t - u + 4* (mHc*mHc) +  (MZ*MZ))*( (mHc*mHc*mHc*mHc) - 2* (mHc*mHc)*(t +  (MZ*MZ)) +  (( (MZ*MZ) - t)*( (MZ*MZ) - t)))* (token21*token21)* (token29*token29)* (token30*token30)* (token51*token51)* (token58*token58)* (token59*token59))/( (MZ*MZ)* (( (mHc*mHc) - t)*( (mHc*mHc) - t))) - ((u +  (mHc*mHc))* (token21*token21)* (token29*token29)* (token30*token30)* (token51*token51)* (token58*token58)* (token59*token59)*(-16* (mHc*mHc)* (MZ*MZ) +  (( (MZ*MZ) + s + t - u)*( (MZ*MZ) + s + t - u))))/(2.* (MZ*MZ)* (( (mHc*mHc) - u)*( (mHc*mHc) - u))) + ( (token21*token21)* (token29*token29)* (token30*token30)* (token51*token51)* (token58*token58)* (token59*token59)*((s + t - u)*(-t +  (mHc*mHc))*(-s + t + u + 6* (mHc*mHc)) - (-4*s + 7*t + 4*u + 21* (mHc*mHc))* (MZ*MZ*MZ*MZ) + 3* (MZ*MZ*MZ*MZ*MZ*MZ) +  (MZ*MZ)*(-2*s*u - 14*(s - t - u)* (mHc*mHc) + 30* (mHc*mHc*mHc*mHc) +  (s*s) + 5* (t*t) +  (u*u))))/(2.*(-t +  (mHc*mHc))*(-u +  (mHc*mHc))* (MZ*MZ)));
}
double DT::HcHCZZ(const double &cos_t, const double &s){
	using namespace PAR;
	double t =  (mHc*mHc) + (-s + cos_t*sqrt(s - 4* (mHc*mHc))*sqrt(s - 4* (MZ*MZ)))/2. +  (MZ*MZ);
	double u = -s - t + mHc*mHc + mHc*mHc + MZ*MZ + MZ*MZ;
	return 0.5*(-0.5*(token90*token91*token92*(s*(s + t - u)*(-u +  (mHc*mHc)) - 2*(s + 3*t + u + 4* (mHc*mHc))* (MZ*MZ*MZ*MZ) + 8* (MZ*MZ*MZ*MZ*MZ*MZ) +  (MZ*MZ)*(2*t*(t - u) + 3*s*(t + u) - 2*(3*s + t - u)* (mHc*mHc) +  (s*s)))* (token21*token21)* (token89*token89))/(token20*token26*token27*(-u +  (mHc*mHc))* (MZ*MZ*MZ*MZ)) - (token90*token91*token92*(s*(s - t + u)*(-t +  (mHc*mHc)) - 2*(s + t + 3*u + 4* (mHc*mHc))* (MZ*MZ*MZ*MZ) + 8* (MZ*MZ*MZ*MZ*MZ*MZ) +  (MZ*MZ)*(2*u*(-t + u) + 3*s*(t + u) - 2*(3*s - t + u)* (mHc*mHc) +  (s*s)))* (token21*token21)* (token89*token89))/(2.*token20*token26*token27*(-t +  (mHc*mHc))* (MZ*MZ*MZ*MZ)) + ((-4*s* (MZ*MZ) + 12* (MZ*MZ*MZ*MZ) +  (s*s))* (token21*token21)* (token89*token89))/(4.* (MZ*MZ*MZ*MZ)* (token20*token20)* (token26*token26)* (token27*token27)) + ( (token21*token21)* (token89*token89)* (token90*token90)* (token91*token91)* (token92*token92)*(-16* (mHc*mHc)* (MZ*MZ) +  ((s + t - u)*(s + t - u)))*( (mHc*mHc*mHc*mHc) - 2* (mHc*mHc)*(u +  (MZ*MZ)) +  (( (MZ*MZ) - u)*( (MZ*MZ) - u))))/(4.* (MZ*MZ*MZ*MZ)* (( (mHc*mHc) - u)*( (mHc*mHc) - u))) + ( (token21*token21)* (token89*token89)* (token90*token90)* (token91*token91)* (token92*token92)*(-8*(-s + 2*(t + u) + 4* (mHc*mHc))* (MZ*MZ*MZ*MZ*MZ*MZ) + 16* (MZ*MZ*MZ*MZ*MZ*MZ*MZ*MZ) - (-t +  (mHc*mHc))*(-u +  (mHc*mHc))*(- (s*s) +  ((t - u)*(t - u))) +  (MZ*MZ)*(-8*s*t*u + 8*s* (mHc*mHc*mHc*mHc) + (t + u)* (s*s) - (t + u)* ((t - u)*(t - u)) - 2* (mHc*mHc)*( (s*s) + 3* ((t - u)*(t - u)))) +  (MZ*MZ*MZ*MZ)*(2*t*u - 16*(s - t - u)* (mHc*mHc) + 16* (mHc*mHc*mHc*mHc) +  (s*s) + 7* (t*t) + 7* (u*u))))/(2.*(-t +  (mHc*mHc))*(-u +  (mHc*mHc))* (MZ*MZ*MZ*MZ)) + (( (mHc*mHc*mHc*mHc) - 2* (mHc*mHc)*(t +  (MZ*MZ)) +  (( (MZ*MZ) - t)*( (MZ*MZ) - t)))* (token21*token21)* (token89*token89)* (token90*token90)* (token91*token91)* (token92*token92)*(-16* (mHc*mHc)* (MZ*MZ) +  ((s - t + u)*(s - t + u))))/(4.* (MZ*MZ*MZ*MZ)* (( (mHc*mHc) - t)*( (mHc*mHc) - t))) + (token23*token57*token87*token89*token90*token91*token92*(-s +  (mHsm*mHsm))*(s*(s + t - u)*(-u +  (mHc*mHc)) - 2*(s + 3*t + u + 4* (mHc*mHc))* (MZ*MZ*MZ*MZ) + 8* (MZ*MZ*MZ*MZ*MZ*MZ) +  (MZ*MZ)*(2*t*(t - u) + 3*s*(t + u) - 2*(3*s + t - u)* (mHc*mHc) +  (s*s)))* (token21*token21))/(2.*token20*token26*token27*(-u +  (mHc*mHc))* (MZ*MZ*MZ*MZ)*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + (token23*token57*token87*token89*token90*token91*token92*(-s +  (mHsm*mHsm))*(s*(s - t + u)*(-t +  (mHc*mHc)) - 2*(s + t + 3*u + 4* (mHc*mHc))* (MZ*MZ*MZ*MZ) + 8* (MZ*MZ*MZ*MZ*MZ*MZ) +  (MZ*MZ)*(2*u*(-t + u) + 3*s*(t + u) - 2*(3*s - t + u)* (mHc*mHc) +  (s*s)))* (token21*token21))/(2.*token20*token26*token27*(-t +  (mHc*mHc))* (MZ*MZ*MZ*MZ)*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) - (token23*token57*token87*token89*(-s +  (mHsm*mHsm))*(-4*s* (MZ*MZ) + 12* (MZ*MZ*MZ*MZ) +  (s*s))* (token21*token21))/(2.* (MZ*MZ*MZ*MZ)* (token20*token20)* (token26*token26)* (token27*token27)*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + ((-4*s* (MZ*MZ) + 12* (MZ*MZ*MZ*MZ) +  (s*s))* (token21*token21)* (token23*token23)* (token57*token57)* (token87*token87))/(4.* (MZ*MZ*MZ*MZ)* (token20*token20)* (token26*token26)* (token27*token27)*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))));
}
double DT::HcHCwW(const double &cos_t, const double &s){
	using namespace PAR;
	double t =  (mHc*mHc) + (-s + cos_t*sqrt(s - 4* (mHc*mHc))*sqrt(s - 4* (MW*MW)))/2. +  (MW*MW);
	double u = -s - t + mHc*mHc + mHc*mHc + MW*MW + MW*MW;
	return (((t - u)*(-12* (MW*MW*MW*MW) +  (s*s))* (token21*token21))/(2.*s*token20*token27* (MW*MW*MW*MW)) - (token22*token29*token30*(s*(s + t - u)*(-u +  (mHc*mHc)) - 2*(s + 3*t + u + 4* (mHc*mHc))* (MW*MW*MW*MW) + 8* (MW*MW*MW*MW*MW*MW) +  (MW*MW)*(2*t*(t - u) + 3*s*(t + u) - 2*(3*s + t - u)* (mHc*mHc) +  (s*s)))* (token21*token21))/(2.*token19*token27*(-u +  (mH1*mH1))* (MW*MW*MW*MW)* (token20*token20)) - (token29*token30*token76*(s*(s + t - u)*(-u +  (mHc*mHc)) - 2*(s + 3*t + u + 4* (mHc*mHc))* (MW*MW*MW*MW) + 8* (MW*MW*MW*MW*MW*MW) +  (MW*MW)*(2*t*(t - u) + 3*s*(t + u) - 2*(3*s + t - u)* (mHc*mHc) +  (s*s)))* (token21*token21))/(2.*token19*token27*(-u +  (mH2*mH2))* (MW*MW*MW*MW)* (token20*token20)) - (token29*token30*token85*(s*(s + t - u)*(-u +  (mHc*mHc)) - 2*(s + 3*t + u + 4* (mHc*mHc))* (MW*MW*MW*MW) + 8* (MW*MW*MW*MW*MW*MW) +  (MW*MW)*(2*t*(t - u) + 3*s*(t + u) - 2*(3*s + t - u)* (mHc*mHc) +  (s*s)))* (token21*token21))/(2.*token19*token27*(-u +  (mH3*mH3))* (MW*MW*MW*MW)* (token20*token20)) + ((-4*s* (MW*MW) + 12* (MW*MW*MW*MW) +  (s*s))* (token21*token21))/(4.* (MW*MW*MW*MW)* (token20*token20)* (token27*token27)) + ( (token21*token21)*( (s*s)* ((t - u)*(t - u)) - 4*s* (MW*MW)*(8*s* (mHc*mHc) - 2* (s*s) +  ((t - u)*(t - u))) + 4* (MW*MW*MW*MW)*(32*s* (mHc*mHc) - 8* (s*s) + 3* ((t - u)*(t - u)))))/(4.* (MW*MW*MW*MW)* (s*s)) - (token22*token76* (token21*token21)* (token29*token29)* (token30*token30)*(-16* (mHc*mHc)* (MW*MW) +  ((s + t - u)*(s + t - u)))*( (mHc*mHc*mHc*mHc) - 2* (mHc*mHc)*(u +  (MW*MW)) +  (( (MW*MW) - u)*( (MW*MW) - u))))/(2.*(-u +  (mH1*mH1))*(u -  (mH2*mH2))* (MW*MW*MW*MW)* (token19*token19)* (token20*token20)) - (token22*token85* (token21*token21)* (token29*token29)* (token30*token30)*(-16* (mHc*mHc)* (MW*MW) +  ((s + t - u)*(s + t - u)))*( (mHc*mHc*mHc*mHc) - 2* (mHc*mHc)*(u +  (MW*MW)) +  (( (MW*MW) - u)*( (MW*MW) - u))))/(2.*(-u +  (mH1*mH1))*(u -  (mH3*mH3))* (MW*MW*MW*MW)* (token19*token19)* (token20*token20)) - (token76*token85* (token21*token21)* (token29*token29)* (token30*token30)*(-16* (mHc*mHc)* (MW*MW) +  ((s + t - u)*(s + t - u)))*( (mHc*mHc*mHc*mHc) - 2* (mHc*mHc)*(u +  (MW*MW)) +  (( (MW*MW) - u)*( (MW*MW) - u))))/(2.*(-u +  (mH2*mH2))*(u -  (mH3*mH3))* (MW*MW*MW*MW)* (token19*token19)* (token20*token20)) + ( (token21*token21)* (token22*token22)* (token29*token29)* (token30*token30)*(-16* (mHc*mHc)* (MW*MW) +  ((s + t - u)*(s + t - u)))*( (mHc*mHc*mHc*mHc) - 2* (mHc*mHc)*(u +  (MW*MW)) +  (( (MW*MW) - u)*( (MW*MW) - u))))/(4.* (MW*MW*MW*MW)* (token19*token19)* (token20*token20)* (( (mH1*mH1) - u)*( (mH1*mH1) - u))) + ( (token21*token21)* (token29*token29)* (token30*token30)* (token76*token76)*(-16* (mHc*mHc)* (MW*MW) +  ((s + t - u)*(s + t - u)))*( (mHc*mHc*mHc*mHc) - 2* (mHc*mHc)*(u +  (MW*MW)) +  (( (MW*MW) - u)*( (MW*MW) - u))))/(4.* (MW*MW*MW*MW)* (token19*token19)* (token20*token20)* (( (mH2*mH2) - u)*( (mH2*mH2) - u))) + ( (token21*token21)* (token29*token29)* (token30*token30)* (token85*token85)*(-16* (mHc*mHc)* (MW*MW) +  ((s + t - u)*(s + t - u)))*( (mHc*mHc*mHc*mHc) - 2* (mHc*mHc)*(u +  (MW*MW)) +  (( (MW*MW) - u)*( (MW*MW) - u))))/(4.* (MW*MW*MW*MW)* (token19*token19)* (token20*token20)* (( (mH3*mH3) - u)*( (mH3*mH3) - u))) + (token22*token29*token30* (token21*token21)*(s*(s + t - u)*(-t + u)*(-u +  (mHc*mHc)) - 8*(-2*s - t + u + 8* (mHc*mHc))* (MW*MW*MW*MW*MW*MW) - 2* (MW*MW*MW*MW)*(2*t*u + s*(t + 7*u) - 4*(3*t + 5*u)* (mHc*mHc) + 32* (mHc*mHc*mHc*mHc) - 2* (s*s) +  (t*t) - 3* (u*u)) +  (MW*MW)*(16*s* (mHc*mHc*mHc*mHc) + (-3*t + 7*u)* (s*s) - 2* (s*s*s) - 2*u* ((t - u)*(t - u)) + 2* (mHc*mHc)*(s*(5*t - 13*u) + 2* (s*s) +  ((t - u)*(t - u))) + s*(- (t*t) +  (u*u)))))/(2.*s*token19*token20*(-u +  (mH1*mH1))* (MW*MW*MW*MW)) + (token29*token30*token76* (token21*token21)*(s*(s + t - u)*(-t + u)*(-u +  (mHc*mHc)) - 8*(-2*s - t + u + 8* (mHc*mHc))* (MW*MW*MW*MW*MW*MW) - 2* (MW*MW*MW*MW)*(2*t*u + s*(t + 7*u) - 4*(3*t + 5*u)* (mHc*mHc) + 32* (mHc*mHc*mHc*mHc) - 2* (s*s) +  (t*t) - 3* (u*u)) +  (MW*MW)*(16*s* (mHc*mHc*mHc*mHc) + (-3*t + 7*u)* (s*s) - 2* (s*s*s) - 2*u* ((t - u)*(t - u)) + 2* (mHc*mHc)*(s*(5*t - 13*u) + 2* (s*s) +  ((t - u)*(t - u))) + s*(- (t*t) +  (u*u)))))/(2.*s*token19*token20*(-u +  (mH2*mH2))* (MW*MW*MW*MW)) + (token29*token30*token85* (token21*token21)*(s*(s + t - u)*(-t + u)*(-u +  (mHc*mHc)) - 8*(-2*s - t + u + 8* (mHc*mHc))* (MW*MW*MW*MW*MW*MW) - 2* (MW*MW*MW*MW)*(2*t*u + s*(t + 7*u) - 4*(3*t + 5*u)* (mHc*mHc) + 32* (mHc*mHc*mHc*mHc) - 2* (s*s) +  (t*t) - 3* (u*u)) +  (MW*MW)*(16*s* (mHc*mHc*mHc*mHc) + (-3*t + 7*u)* (s*s) - 2* (s*s*s) - 2*u* ((t - u)*(t - u)) + 2* (mHc*mHc)*(s*(5*t - 13*u) + 2* (s*s) +  ((t - u)*(t - u))) + s*(- (t*t) +  (u*u)))))/(2.*s*token19*token20*(-u +  (mH3*mH3))* (MW*MW*MW*MW)) - (token57*token87*(t - u)*(-s +  (mHsm*mHsm))*(-12* (MW*MW*MW*MW) +  (s*s))* (token21*token21))/(2.*s*token20*token27* (MW*MW*MW*MW)*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + (token22*token29*token30*token57*token87*(-s +  (mHsm*mHsm))*(s*(s + t - u)*(-u +  (mHc*mHc)) - 2*(s + 3*t + u + 4* (mHc*mHc))* (MW*MW*MW*MW) + 8* (MW*MW*MW*MW*MW*MW) +  (MW*MW)*(2*t*(t - u) + 3*s*(t + u) - 2*(3*s + t - u)* (mHc*mHc) +  (s*s)))* (token21*token21))/(2.*token19*token27*(-u +  (mH1*mH1))* (MW*MW*MW*MW)* (token20*token20)*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + (token29*token30*token57*token76*token87*(-s +  (mHsm*mHsm))*(s*(s + t - u)*(-u +  (mHc*mHc)) - 2*(s + 3*t + u + 4* (mHc*mHc))* (MW*MW*MW*MW) + 8* (MW*MW*MW*MW*MW*MW) +  (MW*MW)*(2*t*(t - u) + 3*s*(t + u) - 2*(3*s + t - u)* (mHc*mHc) +  (s*s)))* (token21*token21))/(2.*token19*token27*(-u +  (mH2*mH2))* (MW*MW*MW*MW)* (token20*token20)*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + (token29*token30*token57*token85*token87*(-s +  (mHsm*mHsm))*(s*(s + t - u)*(-u +  (mHc*mHc)) - 2*(s + 3*t + u + 4* (mHc*mHc))* (MW*MW*MW*MW) + 8* (MW*MW*MW*MW*MW*MW) +  (MW*MW)*(2*t*(t - u) + 3*s*(t + u) - 2*(3*s + t - u)* (mHc*mHc) +  (s*s)))* (token21*token21))/(2.*token19*token27*(-u +  (mH3*mH3))* (MW*MW*MW*MW)* (token20*token20)*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) - (token57*token87*(-s +  (mHsm*mHsm))*(-4*s* (MW*MW) + 12* (MW*MW*MW*MW) +  (s*s))* (token21*token21))/(2.* (MW*MW*MW*MW)* (token20*token20)* (token27*token27)*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + ((-4*s* (MW*MW) + 12* (MW*MW*MW*MW) +  (s*s))* (token21*token21)* (token57*token57)* (token87*token87))/(4.* (MW*MW*MW*MW)* (token20*token20)* (token27*token27)*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) - (token29*token58*token59*token92*(t - u)*(-s +  (MZ*MZ))*(-12* (MW*MW*MW*MW) +  (s*s))* (token21*token21))/(2.*token20*token27* (MW*MW*MW*MW)*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) - (token29*token58*token59*token92*(-s +  (MZ*MZ))* (token21*token21)*( (s*s)* ((t - u)*(t - u)) - 4*s* (MW*MW)*(8*s* (mHc*mHc) - 2* (s*s) +  ((t - u)*(t - u))) + 4* (MW*MW*MW*MW)*(32*s* (mHc*mHc) - 8* (s*s) + 3* ((t - u)*(t - u)))))/(2.*s* (MW*MW*MW*MW)*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + ( (token21*token21)* (token29*token29)* (token58*token58)* (token59*token59)* (token92*token92)*( (s*s)* ((t - u)*(t - u)) - 4*s* (MW*MW)*(8*s* (mHc*mHc) - 2* (s*s) +  ((t - u)*(t - u))) + 4* (MW*MW*MW*MW)*(32*s* (mHc*mHc) - 8* (s*s) + 3* ((t - u)*(t - u)))))/(4.* (MW*MW*MW*MW)*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + (token22*token30*token58*token59*token92*(-s +  (MZ*MZ))* (token21*token21)* (token29*token29)*(s*(t - u)*(s + t - u)*(-u +  (mHc*mHc)) + 8*(-2*s - t + u + 8* (mHc*mHc))* (MW*MW*MW*MW*MW*MW) +  (MW*MW)*(-16*s* (mHc*mHc*mHc*mHc) + (3*t - 7*u)* (s*s) + 2* (s*s*s) + 2*u* ((t - u)*(t - u)) - 2* (mHc*mHc)*(s*(5*t - 13*u) + 2* (s*s) +  ((t - u)*(t - u))) + s*( (t*t) -  (u*u))) + 2* (MW*MW*MW*MW)*(2*t*u + s*(t + 7*u) - 4*(3*t + 5*u)* (mHc*mHc) + 32* (mHc*mHc*mHc*mHc) - 2* (s*s) +  (t*t) - 3* (u*u))))/(2.*token19*token20*(-u +  (mH1*mH1))* (MW*MW*MW*MW)*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + (token30*token58*token59*token76*token92*(-s +  (MZ*MZ))* (token21*token21)* (token29*token29)*(s*(t - u)*(s + t - u)*(-u +  (mHc*mHc)) + 8*(-2*s - t + u + 8* (mHc*mHc))* (MW*MW*MW*MW*MW*MW) +  (MW*MW)*(-16*s* (mHc*mHc*mHc*mHc) + (3*t - 7*u)* (s*s) + 2* (s*s*s) + 2*u* ((t - u)*(t - u)) - 2* (mHc*mHc)*(s*(5*t - 13*u) + 2* (s*s) +  ((t - u)*(t - u))) + s*( (t*t) -  (u*u))) + 2* (MW*MW*MW*MW)*(2*t*u + s*(t + 7*u) - 4*(3*t + 5*u)* (mHc*mHc) + 32* (mHc*mHc*mHc*mHc) - 2* (s*s) +  (t*t) - 3* (u*u))))/(2.*token19*token20*(-u +  (mH2*mH2))* (MW*MW*MW*MW)*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + (token30*token58*token59*token85*token92*(-s +  (MZ*MZ))* (token21*token21)* (token29*token29)*(s*(t - u)*(s + t - u)*(-u +  (mHc*mHc)) + 8*(-2*s - t + u + 8* (mHc*mHc))* (MW*MW*MW*MW*MW*MW) +  (MW*MW)*(-16*s* (mHc*mHc*mHc*mHc) + (3*t - 7*u)* (s*s) + 2* (s*s*s) + 2*u* ((t - u)*(t - u)) - 2* (mHc*mHc)*(s*(5*t - 13*u) + 2* (s*s) +  ((t - u)*(t - u))) + s*( (t*t) -  (u*u))) + 2* (MW*MW*MW*MW)*(2*t*u + s*(t + 7*u) - 4*(3*t + 5*u)* (mHc*mHc) + 32* (mHc*mHc*mHc*mHc) - 2* (s*s) +  (t*t) - 3* (u*u))))/(2.*token19*token20*(-u +  (mH3*mH3))* (MW*MW*MW*MW)*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + (token29*token57*token58*token59*token87*token92*(t - u)*(mHsm*MZ*WHsm*WZ + s*(s -  (MZ*MZ)) +  (mHsm*mHsm)*(-s +  (MZ*MZ)))*(-12* (MW*MW*MW*MW) +  (s*s))* (token21*token21))/(2.*token20*token27* (MW*MW*MW*MW)*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))));
}
double DT::HcHCVEve(const double &cos_t, const double &s){
	using namespace PAR;
	double t =  (mHc*mHc) + (-s + cos_t*sqrt(s - 4* (mHc*mHc))*sqrt(s - 4* (Mnue*Mnue)))/2. +  (Mnue*Mnue);
	double u = -s - t + mHc*mHc + mHc*mHc + Mnue*Mnue + Mnue*Mnue;
	return ((4* (token21*token21)* (token91*token91)* (token92*token92)* (token93*token93)* (token94*token94)*(2*t*u - 2*s* (Mnue*Mnue) +  (mHc*mHc)*(-4*s + 8* (Mnue*Mnue)) +  (s*s) -  (t*t) -  (u*u)))/( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ))));
}
double DT::HcHCVMvm(const double &cos_t, const double &s){
	using namespace PAR;
	double t =  (mHc*mHc) + (-s + cos_t*sqrt(s - 4* (mHc*mHc))*sqrt(s - 4* (Mnum*Mnum)))/2. +  (Mnum*Mnum);
	double u = -s - t + mHc*mHc + mHc*mHc + Mnum*Mnum + Mnum*Mnum;
	return ((4* (token21*token21)* (token91*token91)* (token92*token92)* (token93*token93)* (token94*token94)*(2*t*u - 2*s* (Mnum*Mnum) +  (mHc*mHc)*(-4*s + 8* (Mnum*Mnum)) +  (s*s) -  (t*t) -  (u*u)))/( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ))));
}
double DT::HcHCVTvt(const double &cos_t, const double &s){
	using namespace PAR;
	double t =  (mHc*mHc) + (-s + cos_t*sqrt(s - 4* (mHc*mHc))*sqrt(s - 4* (Mnut*Mnut)))/2. +  (Mnut*Mnut);
	double u = -s - t + mHc*mHc + mHc*mHc + Mnut*Mnut + Mnut*Mnut;
	return ((4* (token21*token21)* (token91*token91)* (token92*token92)* (token93*token93)* (token94*token94)*(2*t*u - 2*s* (Mnut*Mnut) +  (mHc*mHc)*(-4*s + 8* (Mnut*Mnut)) +  (s*s) -  (t*t) -  (u*u)))/( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ))));
}
double DT::HcHCEe(const double &cos_t, const double &s){
	using namespace PAR;
	double t =  (Me*Me) + (-s + cos_t*sqrt(s - 4* (Me*Me))*sqrt(s - 4* (mHc*mHc)))/2. +  (mHc*mHc);
	double u = -s - t + mHc*mHc + mHc*mHc + Me*Me + Me*Me;
	return ((-2* (token21*token21)*(4*s* (mHc*mHc) -  (s*s) +  ((t - u)*(t - u))))/ (s*s) - (8*Me*token21*token31*token57*token6*(t - u)*(-s +  (mHsm*mHsm)))/(s*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + (2*(s - 4* (Me*Me))* (token31*token31)* (token57*token57)* (token6*token6))/( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm))) + (4*token91*token92*token93*(-s +  (MZ*MZ))*( (CW*CW*CW*CW) - 4* (CW*CW)* (SW*SW) + 3* (SW*SW*SW*SW))* (token21*token21)*(4*s* (mHc*mHc) -  (s*s) +  ((t - u)*(t - u))))/(s*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + (8*Me*token21*token31*token57*token6*token91*token92*token93*(t - u)*(mHsm*MZ*WHsm*WZ + s*(s -  (MZ*MZ)) +  (mHsm*mHsm)*(-s +  (MZ*MZ)))*( (CW*CW*CW*CW) - 4* (CW*CW)* (SW*SW) + 3* (SW*SW*SW*SW)))/(( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + (4* (token21*token21)* (token91*token91)* (token92*token92)* (token93*token93)*( (SW*SW*SW*SW)*( (Me*Me)*(-2*s + 8* (mHc*mHc)) - 5*(4*s* (mHc*mHc) -  (s*s) +  ((t - u)*(t - u)))) +  (CW*CW*CW*CW)*(2*t*u - 4*s* (mHc*mHc) +  (Me*Me)*(-2*s + 8* (mHc*mHc)) +  (s*s) -  (t*t) -  (u*u)) + 2* (CW*CW)* (SW*SW)*(-2*t*u + 4*s* (mHc*mHc) +  (Me*Me)*(-2*s + 8* (mHc*mHc)) -  (s*s) +  (t*t) +  (u*u)))* (( (CW*CW) -  (SW*SW))*( (CW*CW) -  (SW*SW))))/( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ))));
}
double DT::HcHCMm(const double &cos_t, const double &s){
	using namespace PAR;
	double t =  (mHc*mHc) + (-s + cos_t*sqrt(s - 4* (mHc*mHc))*sqrt(s - 4* (MM*MM)))/2. +  (MM*MM);
	double u = -s - t + mHc*mHc + mHc*mHc + MM*MM + MM*MM;
	return ((-2* (token21*token21)*(4*s* (mHc*mHc) -  (s*s) +  ((t - u)*(t - u))))/ (s*s) - (8*MM*token21*token33*token57*token6*(t - u)*(-s +  (mHsm*mHsm)))/(s*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + (2*(s - 4* (MM*MM))* (token33*token33)* (token57*token57)* (token6*token6))/( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm))) - (4*token91*token92*token93*(-s +  (MZ*MZ))*( (CW*CW*CW*CW) - 4* (CW*CW)* (SW*SW) + 3* (SW*SW*SW*SW))* (token21*token21)*(-4*s* (mHc*mHc) +  (s*s) -  ((t - u)*(t - u))))/(s*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + (8*MM*token21*token33*token57*token6*token91*token92*token93*(t - u)*(mHsm*MZ*WHsm*WZ + s*(s -  (MZ*MZ)) +  (mHsm*mHsm)*(-s +  (MZ*MZ)))*( (CW*CW*CW*CW) - 4* (CW*CW)* (SW*SW) + 3* (SW*SW*SW*SW)))/(( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + (4* (token21*token21)* (token91*token91)* (token92*token92)* (token93*token93)*( (SW*SW*SW*SW)*(-2*s* (MM*MM) + 4* (mHc*mHc)*(-5*s + 2* (MM*MM)) + 5*( (s*s) -  ((t - u)*(t - u)))) +  (CW*CW*CW*CW)*(2*t*u - 2*s* (MM*MM) +  (mHc*mHc)*(-4*s + 8* (MM*MM)) +  (s*s) -  (t*t) -  (u*u)) + 2* (CW*CW)* (SW*SW)*(-2*t*u - 2*s* (MM*MM) + 4* (mHc*mHc)*(s + 2* (MM*MM)) -  (s*s) +  (t*t) +  (u*u)))* (( (CW*CW) -  (SW*SW))*( (CW*CW) -  (SW*SW))))/( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ))));
}
double DT::HcHCTAta(const double &cos_t, const double &s){
	using namespace PAR;
	double t =  (mHc*mHc) + (-s + cos_t*sqrt(s - 4* (mHc*mHc))*sqrt(s - 4* (MTA*MTA)))/2. +  (MTA*MTA);
	double u = -s - t + mHc*mHc + mHc*mHc + MTA*MTA + MTA*MTA;
	return ((-2* (token21*token21)*(4*s* (mHc*mHc) -  (s*s) +  ((t - u)*(t - u))))/ (s*s) - (8*MTA*token21*token34*token57*token6*(t - u)*(-s +  (mHsm*mHsm)))/(s*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + (2*(s - 4* (MTA*MTA))* (token34*token34)* (token57*token57)* (token6*token6))/( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm))) + (4*token91*token92*token93*(-s +  (MZ*MZ))*( (CW*CW*CW*CW) - 4* (CW*CW)* (SW*SW) + 3* (SW*SW*SW*SW))* (token21*token21)*(4*s* (mHc*mHc) -  (s*s) +  ((t - u)*(t - u))))/(s*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + (8*MTA*token21*token34*token57*token6*token91*token92*token93*(t - u)*(mHsm*MZ*WHsm*WZ + s*(s -  (MZ*MZ)) +  (mHsm*mHsm)*(-s +  (MZ*MZ)))*( (CW*CW*CW*CW) - 4* (CW*CW)* (SW*SW) + 3* (SW*SW*SW*SW)))/(( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + (4* (token21*token21)* (token91*token91)* (token92*token92)* (token93*token93)*( (SW*SW*SW*SW)*(-2*s* (MTA*MTA) + 4* (mHc*mHc)*(-5*s + 2* (MTA*MTA)) + 5*( (s*s) -  ((t - u)*(t - u)))) +  (CW*CW*CW*CW)*(2*t*u - 2*s* (MTA*MTA) +  (mHc*mHc)*(-4*s + 8* (MTA*MTA)) +  (s*s) -  (t*t) -  (u*u)) + 2* (CW*CW)* (SW*SW)*(-2*t*u - 2*s* (MTA*MTA) + 4* (mHc*mHc)*(s + 2* (MTA*MTA)) -  (s*s) +  (t*t) +  (u*u)))* (( (CW*CW) -  (SW*SW))*( (CW*CW) -  (SW*SW))))/( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ))));
}
double DT::HcHCUu(const double &cos_t, const double &s){
	using namespace PAR;
	double t =  (mHc*mHc) + (-s + cos_t*sqrt(s - 4* (mHc*mHc))*sqrt(s - 4* (MU*MU)))/2. +  (MU*MU);
	double u = -s - t + mHc*mHc + mHc*mHc + MU*MU + MU*MU;
	return ((-6* (token21*token21)* (token95*token95)*(4*s* (mHc*mHc) -  (s*s) +  ((t - u)*(t - u))))/ (s*s) + (24*MU*token21*token35*token57*token6*token95*(t - u)*(-s +  (mHsm*mHsm)))/(s*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + (6*(s - 4* (MU*MU))* (token35*token35)* (token57*token57)* (token6*token6))/( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm))) - (12*token58*token59*token91*token92*token95*token96*(-s +  (MZ*MZ))*(3* (CW*CW) - 5* (SW*SW))* (token21*token21)*(-4*s* (mHc*mHc) +  (s*s) -  ((t - u)*(t - u))))/(s*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + (12* (token21*token21)* (token58*token58)* (token59*token59)* (token91*token91)* (token92*token92)* (token96*token96)*( (SW*SW*SW*SW)*(-18*s* (MU*MU) +  (mHc*mHc)*(-68*s + 72* (MU*MU)) + 17*( (s*s) -  ((t - u)*(t - u)))) + 9* (CW*CW*CW*CW)*(2*t*u - 2*s* (MU*MU) +  (mHc*mHc)*(-4*s + 8* (MU*MU)) +  (s*s) -  (t*t) -  (u*u)) + 6* (CW*CW)* (SW*SW)*(-2*t*u - 6*s* (MU*MU) + 4* (mHc*mHc)*(s + 6* (MU*MU)) -  (s*s) +  (t*t) +  (u*u))))/( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ))) - (24*MU*token21*token35*token57*token58*token59*token6*token91*token92*token96*(t - u)*(mHsm*MZ*WHsm*WZ + s*(s -  (MZ*MZ)) +  (mHsm*mHsm)*(-s +  (MZ*MZ)))*(3* (CW*CW) - 5* (SW*SW)))/(( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))));
}
double DT::HcHCCc(const double &cos_t, const double &s){
	using namespace PAR;
	double t =  (MC*MC) + (-s + cos_t*sqrt(s - 4* (MC*MC))*sqrt(s - 4* (mHc*mHc)))/2. +  (mHc*mHc);
	double u = -s - t + mHc*mHc + mHc*mHc + MC*MC + MC*MC;
	return ((-6* (token21*token21)* (token95*token95)*(4*s* (mHc*mHc) -  (s*s) +  ((t - u)*(t - u))))/ (s*s) + (24*MC*token21*token36*token57*token6*token95*(t - u)*(-s +  (mHsm*mHsm)))/(s*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + (6*(s - 4* (MC*MC))* (token36*token36)* (token57*token57)* (token6*token6))/( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm))) - (12*token58*token59*token91*token92*token95*token96*(-s +  (MZ*MZ))*(3* (CW*CW) - 5* (SW*SW))* (token21*token21)*(-4*s* (mHc*mHc) +  (s*s) -  ((t - u)*(t - u))))/(s*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + (12* (token21*token21)* (token58*token58)* (token59*token59)* (token91*token91)* (token92*token92)* (token96*token96)*( (SW*SW*SW*SW)*(18* (MC*MC)*(-s + 4* (mHc*mHc)) - 17*(4*s* (mHc*mHc) -  (s*s) +  ((t - u)*(t - u)))) + 9* (CW*CW*CW*CW)*(2*t*u - 4*s* (mHc*mHc) +  (MC*MC)*(-2*s + 8* (mHc*mHc)) +  (s*s) -  (t*t) -  (u*u)) + 6* (CW*CW)* (SW*SW)*(-2*t*u + 4*s* (mHc*mHc) + 6* (MC*MC)*(-s + 4* (mHc*mHc)) -  (s*s) +  (t*t) +  (u*u))))/( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ))) - (24*MC*token21*token36*token57*token58*token59*token6*token91*token92*token96*(t - u)*(mHsm*MZ*WHsm*WZ + s*(s -  (MZ*MZ)) +  (mHsm*mHsm)*(-s +  (MZ*MZ)))*(3* (CW*CW) - 5* (SW*SW)))/(( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))));
}
double DT::HcHCTt(const double &cos_t, const double &s){
	using namespace PAR;
	double t =  (mHc*mHc) + (-s + cos_t*sqrt(s - 4* (mHc*mHc))*sqrt(s - 4* (MT*MT)))/2. +  (MT*MT);
	double u = -s - t + mHc*mHc + mHc*mHc + MT*MT + MT*MT;
	return ((-6* (token21*token21)* (token95*token95)*(4*s* (mHc*mHc) -  (s*s) +  ((t - u)*(t - u))))/ (s*s) + (24*MT*token21*token37*token57*token6*token95*(t - u)*(-s +  (mHsm*mHsm)))/(s*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + (6*(s - 4* (MT*MT))* (token37*token37)* (token57*token57)* (token6*token6))/( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm))) - (12*token58*token59*token91*token92*token95*token96*(-s +  (MZ*MZ))*(3* (CW*CW) - 5* (SW*SW))* (token21*token21)*(-4*s* (mHc*mHc) +  (s*s) -  ((t - u)*(t - u))))/(s*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + (12* (token21*token21)* (token58*token58)* (token59*token59)* (token91*token91)* (token92*token92)* (token96*token96)*( (SW*SW*SW*SW)*(-18*s* (MT*MT) +  (mHc*mHc)*(-68*s + 72* (MT*MT)) + 17*( (s*s) -  ((t - u)*(t - u)))) + 9* (CW*CW*CW*CW)*(2*t*u - 2*s* (MT*MT) +  (mHc*mHc)*(-4*s + 8* (MT*MT)) +  (s*s) -  (t*t) -  (u*u)) + 6* (CW*CW)* (SW*SW)*(-2*t*u - 6*s* (MT*MT) + 4* (mHc*mHc)*(s + 6* (MT*MT)) -  (s*s) +  (t*t) +  (u*u))))/( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ))) - (24*MT*token21*token37*token57*token58*token59*token6*token91*token92*token96*(t - u)*(mHsm*MZ*WHsm*WZ + s*(s -  (MZ*MZ)) +  (mHsm*mHsm)*(-s +  (MZ*MZ)))*(3* (CW*CW) - 5* (SW*SW)))/(( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))));
}
double DT::HcHCDd(const double &cos_t, const double &s){
	using namespace PAR;
	double t =  (MD*MD) + (-s + cos_t*sqrt(s - 4* (MD*MD))*sqrt(s - 4* (mHc*mHc)))/2. +  (mHc*mHc);
	double u = -s - t + mHc*mHc + mHc*mHc + MD*MD + MD*MD;
	return ((-6* (token21*token21)* (token97*token97)*(4*s* (mHc*mHc) -  (s*s) +  ((t - u)*(t - u))))/ (s*s) - (24*MD*token21*token38*token57*token6*token97*(t - u)*(-s +  (mHsm*mHsm)))/(s*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + (6*(s - 4* (MD*MD))* (token38*token38)* (token57*token57)* (token6*token6))/( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm))) + (12*token58*token59*token91*token92*token97*token98*(-s +  (MZ*MZ))*(3* (CW*CW) -  (SW*SW))* (token21*token21)*(-4*s* (mHc*mHc) +  (s*s) -  ((t - u)*(t - u))))/(s*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + (12* (token21*token21)* (token58*token58)* (token59*token59)* (token91*token91)* (token92*token92)* (token98*token98)*( (SW*SW*SW*SW)*(18* (MD*MD)*(-s + 4* (mHc*mHc)) - 5*(4*s* (mHc*mHc) -  (s*s) +  ((t - u)*(t - u)))) + 6* (CW*CW)* (SW*SW)*(2*t*u - 4*s* (mHc*mHc) + 6* (MD*MD)*(-s + 4* (mHc*mHc)) +  (s*s) -  (t*t) -  (u*u)) + 9* (CW*CW*CW*CW)*(2*t*u - 4*s* (mHc*mHc) +  (MD*MD)*(-2*s + 8* (mHc*mHc)) +  (s*s) -  (t*t) -  (u*u))))/( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ))) - (24*MD*token21*token38*token57*token58*token59*token6*token91*token92*token98*(t - u)*(mHsm*MZ*WHsm*WZ + s*(s -  (MZ*MZ)) +  (mHsm*mHsm)*(-s +  (MZ*MZ)))*(3* (CW*CW) -  (SW*SW)))/(( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))));
}
double DT::HcHCSs(const double &cos_t, const double &s){
	using namespace PAR;
	double t =  (mHc*mHc) + (-s + cos_t*sqrt(s - 4* (mHc*mHc))*sqrt(s - 4* (MS*MS)))/2. +  (MS*MS);
	double u = -s - t + mHc*mHc + mHc*mHc + MS*MS + MS*MS;
	return ((-6* (token21*token21)* (token97*token97)*(4*s* (mHc*mHc) -  (s*s) +  ((t - u)*(t - u))))/ (s*s) - (24*MS*token21*token39*token57*token6*token97*(t - u)*(-s +  (mHsm*mHsm)))/(s*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + (6*(s - 4* (MS*MS))* (token39*token39)* (token57*token57)* (token6*token6))/( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm))) + (12*token58*token59*token91*token92*token97*token98*(-s +  (MZ*MZ))*(3* (CW*CW) -  (SW*SW))* (token21*token21)*(-4*s* (mHc*mHc) +  (s*s) -  ((t - u)*(t - u))))/(s*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + (12* (token21*token21)* (token58*token58)* (token59*token59)* (token91*token91)* (token92*token92)* (token98*token98)*( (SW*SW*SW*SW)*(-18*s* (MS*MS) + 4* (mHc*mHc)*(-5*s + 18* (MS*MS)) + 5*( (s*s) -  ((t - u)*(t - u)))) + 6* (CW*CW)* (SW*SW)*(2*t*u - 6*s* (MS*MS) + 4* (mHc*mHc)*(-s + 6* (MS*MS)) +  (s*s) -  (t*t) -  (u*u)) + 9* (CW*CW*CW*CW)*(2*t*u - 2*s* (MS*MS) +  (mHc*mHc)*(-4*s + 8* (MS*MS)) +  (s*s) -  (t*t) -  (u*u))))/( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ))) - (24*MS*token21*token39*token57*token58*token59*token6*token91*token92*token98*(t - u)*(mHsm*MZ*WHsm*WZ + s*(s -  (MZ*MZ)) +  (mHsm*mHsm)*(-s +  (MZ*MZ)))*(3* (CW*CW) -  (SW*SW)))/(( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))));
}
double DT::HcHCBb(const double &cos_t, const double &s){
	using namespace PAR;
	double t =  (MB*MB) + (-s + cos_t*sqrt(s - 4* (MB*MB))*sqrt(s - 4* (mHc*mHc)))/2. +  (mHc*mHc);
	double u = -s - t + mHc*mHc + mHc*mHc + MB*MB + MB*MB;
	return ((-6* (token21*token21)* (token97*token97)*(4*s* (mHc*mHc) -  (s*s) +  ((t - u)*(t - u))))/ (s*s) - (24*MB*token21*token40*token57*token6*token97*(t - u)*(-s +  (mHsm*mHsm)))/(s*( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))) + (6*(s - 4* (MB*MB))* (token40*token40)* (token57*token57)* (token6*token6))/( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm))) + (12*token58*token59*token91*token92*token97*token98*(-s +  (MZ*MZ))*(3* (CW*CW) -  (SW*SW))* (token21*token21)*(-4*s* (mHc*mHc) +  (s*s) -  ((t - u)*(t - u))))/(s*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))) + (12* (token21*token21)* (token58*token58)* (token59*token59)* (token91*token91)* (token92*token92)* (token98*token98)*( (SW*SW*SW*SW)*(18* (MB*MB)*(-s + 4* (mHc*mHc)) - 5*(4*s* (mHc*mHc) -  (s*s) +  ((t - u)*(t - u)))) + 6* (CW*CW)* (SW*SW)*(2*t*u - 4*s* (mHc*mHc) + 6* (MB*MB)*(-s + 4* (mHc*mHc)) +  (s*s) -  (t*t) -  (u*u)) + 9* (CW*CW*CW*CW)*(2*t*u - 4*s* (mHc*mHc) +  (MB*MB)*(-2*s + 8* (mHc*mHc)) +  (s*s) -  (t*t) -  (u*u))))/( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ))) - (24*MB*token21*token40*token57*token58*token59*token6*token91*token92*token98*(t - u)*(mHsm*MZ*WHsm*WZ + s*(s -  (MZ*MZ)) +  (mHsm*mHsm)*(-s +  (MZ*MZ)))*(3* (CW*CW) -  (SW*SW)))/(( (mHsm*mHsm*mHsm*mHsm) +  (s*s) +  (mHsm*mHsm)*(-2*s +  (WHsm*WHsm)))*( (MZ*MZ*MZ*MZ) +  (s*s) +  (MZ*MZ)*(-2*s +  (WZ*WZ)))));
}
