///////////////////CODE GENERATED VIA MATHEMATICA///////////////////


#include "../include/declarations.hpp"
#include "../amp2s/allamp2s.hpp"

namespace DT{
	double aEWM1 = 127.9;
	double Gf = 0.0000116637;
	double aS = 0.1184;
	double ymdo = 0.00504;
	double ymup = 0.00255;
	double yms = 0.101;
	double ymc = 1.27;
	double ymb = 4.7;
	double ymt = 172;
	double yme = 0.000511;
	double ymm = 0.10566;
	double ymtau = 1.777;
	double cabi = 0.227736;
	double MW = 79.8244;
	double svev = 100;
	double alpha = 0.;
	double MA1 = 100;
	double MS1 = 100;
	double MH = 125.09;
	double GG = 1.21978;
	double MZ = 91.1876;
	double Me = 0.000511;
	double MMU = 0.10566;
	double MTA = 1.777;
	double MU = 0.00255;
	double MC = 1.27;
	double MT = 172;
	double MD = 0.00504;
	double MS = 0.101;
	double MB = 4.7;
	double WZ = 2.4952;
	double WW = 2.085;
	double WT = 1.50834;
	double WH = 0.00407;
	double WS1 = 0;
	double WA1 = 0;
	double E = 2.71828;
	double Pi = 3.14159;
	double aEW = pow(aEWM1,-1);
	double sw2 = 1-pow(MW,2)*pow(MZ,-2);
	double EE = 2*pow(aEW,0.5)*pow(Pi,0.5);
	double cw = pow(1-sw2,0.5);
	double sw = pow(sw2,0.5);
	double gw = EE*pow(sw,-1);
	double g1 = EE*pow(cw,-1);
	double vev = 2*MW*pow(gw,-1);
	double delta2 = -((-pow(MH,2)+pow(MS1,2))*pow(svev,-1)*pow(vev,-1)*sin(2*alpha));
	double lam = (pow(MH,2)+cos(2*alpha)*(pow(MH,2)-pow(MS1,2))+pow(MS1,2))*pow(vev,-2);
	double muH = pow(2,-0.5)*pow(-(delta2*pow(svev,2))-lam*pow(vev,2),0.5);
	double ye = yme*pow(2,0.5)*pow(vev,-1);
	double ym = ymm*pow(2,0.5)*pow(vev,-1);
	double ytau = ymtau*pow(2,0.5)*pow(vev,-1);
	double yup = ymup*pow(2,0.5)*pow(vev,-1);
	double yc = ymc*pow(2,0.5)*pow(vev,-1);
	double yt = ymt*pow(2,0.5)*pow(vev,-1);
	double ydo = ymdo*pow(2,0.5)*pow(vev,-1);
	double ys = yms*pow(2,0.5)*pow(vev,-1);
	double yb = ymb*pow(2,0.5)*pow(vev,-1);
	double CKM1x1 = cos(cabi);
	double CKM1x2 = sin(cabi);
	double CKM1x3 = 0;
	double CKM2x1 = -sin(cabi);
	double CKM2x2 = cos(cabi);
	double CKM2x3 = 0;
	double CKM3x1 = 0;
	double CKM3x2 = 0;
	double CKM3x3 = 1;
	double d2 = (pow(MH,2)+pow(MS1,2)+cos(2*alpha)*(-pow(MH,2)+pow(MS1,2)))*pow(svev,-2);
	double b1 = -pow(MA1,2);
	double b2 = (2*pow(MA1,2)-pow(MH,2)+cos(2*alpha)*(pow(MH,2)-pow(MS1,2))-pow(MS1,2)-vev*(pow(MH,2)-pow(MS1,2))*pow(svev,-1)*sin(2*alpha))/2.;
	double I1a11 = CKM1x1*ydo;
	double I1a12 = CKM2x1*ydo;
	double I1a13 = CKM3x1*ydo;
	double I1a21 = CKM1x2*ys;
	double I1a22 = CKM2x2*ys;
	double I1a23 = CKM3x2*ys;
	double I1a31 = CKM1x3*yb;
	double I1a32 = CKM2x3*yb;
	double I1a33 = CKM3x3*yb;
	double I2a11 = CKM1x1*yup;
	double I2a12 = CKM2x1*yc;
	double I2a13 = CKM3x1*yt;
	double I2a21 = CKM1x2*yup;
	double I2a22 = CKM2x2*yc;
	double I2a23 = CKM3x2*yt;
	double I2a31 = CKM1x3*yup;
	double I2a32 = CKM2x3*yc;
	double I2a33 = CKM3x3*yt;
	double I3a11 = CKM1x1*yup;
	double I3a12 = CKM1x2*yup;
	double I3a13 = CKM1x3*yup;
	double I3a21 = CKM2x1*yc;
	double I3a22 = CKM2x2*yc;
	double I3a23 = CKM2x3*yc;
	double I3a31 = CKM3x1*yt;
	double I3a32 = CKM3x2*yt;
	double I3a33 = CKM3x3*yt;
	double I4a11 = CKM1x1*ydo;
	double I4a12 = CKM1x2*ys;
	double I4a13 = CKM1x3*yb;
	double I4a21 = CKM2x1*ydo;
	double I4a22 = CKM2x2*ys;
	double I4a23 = CKM2x3*yb;
	double I4a31 = CKM3x1*ydo;
	double I4a32 = CKM3x2*ys;
	double I4a33 = CKM3x3*yb;
	double EL = 0.312233;
	double ee = 0.312233;
	double gs = 1.21358;
	double G = 1.21358;
	double FAGS = 1.21358;
	double gc16;
	double gc17;
	double gc18;
	double gc20;
	double gc23;
	double gc24;
	double gc26;
	double gc28;
	double gc31;
	double gc32;
	double gc34;
	double gc36;
	double gc38;
	double gc40;
	double gc41;
	double gc42;
	double gc43L;
	double gc43R;
	double gc44L;
	double gc44R;
	double gc45L;
	double gc45R;
	double gc46L;
	double gc46R;
	double gc47L;
	double gc47R;
	double gc48L;
	double gc48R;
	double gc49L;
	double gc49R;
	double gc50L;
	double gc50R;
	double gc51L;
	double gc51R;
	double gc52L;
	double gc52R;
	double gc53L;
	double gc53R;
	double gc54L;
	double gc54R;
	double gc55;
	double gc56;
	double gc57;
	double gc58;
	double gc59;
	double gc60;
	double gc61L;
	double gc61R;
	double gc62L;
	double gc62R;
	double gc63L;
	double gc63R;
	double gc64;
	double gc65;
	double gc66;
	double gc67L;
	double gc67R;
	double gc68L;
	double gc68R;
	double gc69L;
	double gc69R;
	double gc70L;
	double gc70R;
	double gc71L;
	double gc71R;
	double gc72L;
	double gc72R;
	double gc73L;
	double gc73R;
	double gc74L;
	double gc74R;
	double gc75L;
	double gc75R;
	double gc76L;
	double gc76R;
	double gc77L;
	double gc77R;
	double gc78L;
	double gc78R;
	double gc79;
	double gc80;
	double gc81;
	double gc95;
	double gc96;
	double gc97;
	double gc98;
	double gc99;
	double gc100;
	double gc101;
	double gc102;
	double gc103;
	double gc113;
	double gc114;
	double gc115;
	double gc117;
	double gc121;
	double gc122;
	double gc124;
	double gc127;
	double gc133;
	double gc134;
	double gc135R;
	double gc136R;
	double gc137R;
	double gc139;
	double gc140;
	double gc141;
	double gc150;
	double gc158;
	double gc159;
	double gc160;
	double gc161;
	double gc162;
	double gc163;
	double gc164;
	double gc165;
	double gc166;
	double gc167;
	double gc168;
	double gc169;
	double gc170;
	double gc171;
	double gc172;
	double gc173;
	double gc174;
	double gc175;
	double gc176;
	double gc177;
	double gc178;
	double gc179;
	double gc180;
	double gc181;
	double gc182;
	double gc183;
	double gc184;
	double gc185;
	double gc186;
	double gc187;
	double gc188;
	double gc189;
	double gc190;
	double gc191;
	double gc192;
	double gc193;
	double gc194;
	double gc195;
	double gc196;
	double gc197;
	double gc198L;
	double gc198R;
	double gc199L;
	double gc199R;
	double gc200L;
	double gc200R;
	double gc201L;
	double gc201R;
	double gc202L;
	double gc202R;
	double gc203L;
	double gc203R;
	double gc204;
	double gc205;
	double gc206;
	double gc207L;
	double gc207R;
	double gc208L;
	double gc208R;
	double gc209L;
	double gc209R;
}
