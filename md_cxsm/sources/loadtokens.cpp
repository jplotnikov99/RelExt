///////////////////CODE GENERATED VIA MATHEMATICA///////////////////


#include "general_model.hpp"
#include "../model.hpp"

namespace DT{
	void Model::load_tokens(){
		token1 = -1;
		token2 = sin(alpha);
		token3 = 2*(MH - MS1)*(MH + MS1)*svev*pow(cos(alpha),3) + vev*(pow(MH,2) + pow(MS1,2) + (-pow(MH,2) + pow(MS1,2))*cos(2*alpha))*sin(alpha);
		token4 = -12;
		token5 = pow(MH,4);
		token6 = svev*pow(cos(alpha),3) + vev*pow(sin(alpha),3);
		token7 = pow(MS1,2);
		token8 = 2*pow(MH,2) + pow(MS1,2);
		token9 = pow(cos(alpha),2);
		token10 = svev*cos(alpha) - vev*sin(alpha);
		token11 = pow(sin(alpha),2);
		token12 = 2;
		token13 = pow(svev,2);
		token14 = vev;
		token15 = 4;
		token16 = cos(alpha);
		token17 = -((pow(MH,2) + pow(MS1,2))*vev) + (MH - MS1)*(MH + MS1)*(vev*cos(2*alpha) + svev*sin(2*alpha));
		token18 = pow(MH,2);
		token19 = pow(MH,2) + 2*pow(MS1,2);
		token20 = vev*cos(alpha) + svev*sin(alpha);
		token21 = vev*cos(alpha)*(pow(MH,2) + pow(MS1,2) + (-pow(MH,2) + pow(MS1,2))*cos(2*alpha)) + 2*(MH - MS1)*(MH + MS1)*svev*pow(sin(alpha),3);
		token22 = 12;
		token23 = pow(MS1,4);
		token24 = -(vev*pow(cos(alpha),3)) + svev*pow(sin(alpha),3);
		token25 = pow(EL,2);
		token26 = pow(pow(cw,2) + pow(sw,2),2);
		token27 = pow(cw,2);
		token28 = svev;
		token29 = pow(sw,2);
		token30 = ye;
		token31 = sqrt(2);
		token32 = ym;
		token33 = ytau;
		token34 = yup;
		token35 = yc;
		token36 = yt;
		token37 = ydo;
		token38 = ys;
		token39 = yb;

	// 	token40 = 0.005859375;
	// 	token41 = pow(Pi,-2);
	// 	token42 = pow(svev,-4);
	// 	token43 = pow(vev,-2);
	// 	token44 = 2*(5*pow(MH,2) + pow(MS1,2))*(pow(svev,2) + pow(vev,2)) + (15*pow(MH,2) + pow(MS1,2))*(svev - vev)*(svev + vev)*cos(2*alpha) + 2*(3*pow(MH,2) - pow(MS1,2))*(pow(svev,2) + pow(vev,2))*cos(4*alpha) + (MH - MS1)*(MH + MS1)*((svev - vev)*(svev + vev)*cos(6*alpha) + 8*svev*vev*pow(sin(2*alpha),3));
	// 	token45 = -0.01171875;
	// 	token46 = pow(sin(2*alpha),2);
	// 	token47 = (3*pow(MH,2) + pow(MS1,2))*svev*cos(alpha) + (MH - MS1)*(MH + MS1)*svev*cos(3*alpha) + (3*pow(MH,2) + pow(MS1,2))*vev*sin(alpha) + (-pow(MH,2) + pow(MS1,2))*vev*sin(3*alpha);
	// 	token48 = 0.00390625;
	// 	token49 = sin(2*alpha);
	// 	token50 = 6*(MH - MS1)*(MH + MS1)*svev*vev*cos(4*alpha) + 6*(pow(MH,2) + pow(MS1,2))*(pow(svev,2) + pow(vev,2))*sin(2*alpha) + (MH - MS1)*(MH + MS1)*(2*svev*vev + 3*(svev - vev)*(svev + vev)*sin(4*alpha));
	// 	token51 = 0.03125;
	// 	token52 = 1/vev;
	// 	token53 = pow(sin(alpha),3);
	// 	token54 = 0.046875;
	// 	token55 = 3*(MH - MS1)*(MH + MS1)*svev*cos(alpha) + (MH - MS1)*(MH + MS1)*svev*cos(3*alpha) + (3*pow(MH,2) + pow(MS1,2))*vev*sin(alpha) + (-pow(MH,2) + pow(MS1,2))*vev*sin(3*alpha);
	// 	token56 = -0.015625;
	// 	token57 = pow(cos(alpha),3);
	// 	token58 = (pow(MH,2) + pow(MS1,2))*vev - (MH - MS1)*(MH + MS1)*(vev*cos(2*alpha) + svev*sin(2*alpha));
	// 	token59 = 0.140625;
	// 	token60 = pow(vev,-3);
	// 	token61 = pow(svev*pow(cos(alpha),3) + vev*pow(sin(alpha),3),2);
	// 	token62 = 0.0625;
	// 	token63 = MH - MS1;
	// 	token64 = MH + MS1;
	// 	token65 = 1/svev;
	// 	token66 = 0.0029296875;
	// 	token67 = 4*(pow(svev,2) + pow(vev,2))*cos(2*alpha) + (svev - vev)*(svev + vev)*(3 + cos(4*alpha)) - 2*svev*vev*sin(4*alpha);
	// 	token68 = 0.015625;
	// 	token69 = pow(2*pow(MH,2) + pow(MS1,2),2);
	// 	token70 = pow(svev*cos(alpha) - vev*sin(alpha),2);
	// 	token71 = (pow(MH,2) + 3*pow(MS1,2))*vev*cos(alpha) - (MH - MS1)*(MH + MS1)*(vev*cos(3*alpha) - 4*svev*pow(sin(alpha),3));
	// 	token72 = 2*svev*vev*cos(2*alpha) + (svev - vev)*(svev + vev)*sin(2*alpha);
	// 	token73 = pow(pow(MH,2) + 2*pow(MS1,2),2);
	// 	token74 = pow(vev*cos(alpha) + svev*sin(alpha),2);
	// 	token75 = 0.09375;
	// 	token76 = pow(MH,2) + pow(MS1,2) + (-pow(MH,2) + pow(MS1,2))*cos(2*alpha);
	// 	token77 = pow(cw,-2);
	// 	token78 = pow(sw,-2);
	// 	token79 = pow(EL,2);
	// 	token80 = 1/sqrt(2);
	// 	token81 = Me;
	// 	token82 = pow(ye,3);
	// 	token83 = MMU;
	// 	token84 = pow(ym,3);
	// 	token85 = MTA;
	// 	token86 = pow(ytau,3);
	// 	token87 = MU;
	// 	token88 = pow(yup,3);
	// 	token89 = MC;
	// 	token90 = pow(yc,3);
	// 	token91 = MT;
	// 	token92 = pow(yt,3);
	// 	token93 = MD;
	// 	token94 = pow(ydo,3);
	// 	token95 = MS;
	// 	token96 = pow(ys,3);
	// 	token97 = MB;
	// 	token98 = pow(yb,3);
	// 	token99 = -1.6875;
	// 	token100 = pow(MH,8);
	// 	token101 = pow(vev + svev*pow(cos(alpha)/sin(alpha),3),3);
	// 	token102 = pow(sin(alpha),10);
	// 	token103 = -0.1875;
	// 	token104 = -0.0625;
	// 	token105 = pow(sin(alpha),4);
	// 	token106 = pow(pow(MH,2) + 2*pow(MS1,2),3);
	// 	token107 = pow(vev*cos(alpha) + svev*sin(alpha),3);
	// 	token108 = 0.5625;
	// 	token109 = 0.01171875;
	// 	token110 = -2*vev*(-5*pow(svev,2) + pow(vev,2))*cos(alpha) + 3*vev*(pow(svev,2) + pow(vev,2))*cos(3*alpha) - vev*(-3*pow(svev,2) + pow(vev,2))*cos(5*alpha) + 2*svev*(pow(svev,2) - 5*pow(vev,2))*sin(alpha) + 3*svev*(pow(svev,2) + pow(vev,2))*sin(3*alpha) + svev*(pow(svev,2) - 3*pow(vev,2))*sin(5*alpha);
	// 	token111 = pow(2*pow(MH,2) + pow(MS1,2),3);
	// 	token112 = pow(cos(alpha),4);
	// 	token113 = pow(svev*cos(alpha) - vev*sin(alpha),3);
	// 	token114 = 0.1875;
	// 	token115 = pow(EL,6);
	// 	token116 = pow(vev,3);
	// 	token117 = pow(cw,-2);
	// 	token118 = pow(sw,-2);
	// 	token119 = -0.00390625;
	// 	token120 = vev + svev*pow(cos(alpha)/sin(alpha),3);
	// 	token121 = pow(sin(alpha),6);
	// 	token122 = -0.5625;
	// 	token123 = pow(svev*pow(cos(alpha),3)*sin(alpha) + vev*pow(sin(alpha),4),2);
	// 	token124 = -0.0234375;
	// 	token125 = 6*svev*vev + 2*svev*vev*cos(4*alpha) + 2*(pow(svev,2) + pow(vev,2))*sin(2*alpha) + (svev - vev)*(svev + vev)*sin(4*alpha);
	// 	token126 = 0.0234375;
	// 	token127 = pow(MS1,6);
	// 	token128 = 6*svev*vev + 2*svev*vev*cos(4*alpha) - 2*(pow(svev,2) + pow(vev,2))*sin(2*alpha) + (svev - vev)*(svev + vev)*sin(4*alpha);
	// 	token129 = -0.005859375;
	// 	token130 = -0.03125;
	// 	token131 = 0.00018310546875;
	// 	token132 = 2*vev*(-2*pow(MH,2)*pow(MS1,2)*(pow(svev,2) - 7*pow(vev,2)) + 3*pow(MS1,4)*(3*pow(svev,2) + pow(vev,2)) + 9*pow(MH,4)*(pow(svev,2) + 7*pow(vev,2))) - 2*vev*(-((3*pow(MH,4) + 2*pow(MH,2)*pow(MS1,2) + 3*pow(MS1,4))*pow(svev,2)) + (105*pow(MH,4) + 14*pow(MH,2)*pow(MS1,2) + pow(MS1,4))*pow(vev,2))*cos(2*alpha) - 8*vev*(3*pow(MH,4)*(pow(svev,2) - 5*pow(vev,2)) + 2*pow(MH,2)*pow(MS1,2)*(-pow(svev,2) + pow(vev,2)) + pow(MS1,4)*(3*pow(svev,2) + pow(vev,2)))*cos(4*alpha) + vev*(3*pow(MS1,4)*(-3*pow(svev,2) + pow(vev,2)) - 9*pow(MH,4)*(pow(svev,2) + 5*pow(vev,2)) + 2*pow(MH,2)*pow(MS1,2)*(pow(svev,2) + 13*pow(vev,2)))*cos(6*alpha) + 2*(MH - MS1)*(MH + MS1)*vev*(-(pow(MS1,2)*(3*pow(svev,2) + pow(vev,2))) + pow(MH,2)*(3*pow(svev,2) + 5*pow(vev,2)))*cos(8*alpha) - pow(pow(MH,2) - pow(MS1,2),2)*vev*(-3*pow(svev,2) + pow(vev,2))*cos(10*alpha) + 2*(MH - MS1)*(MH + MS1)*svev*(21*pow(MH,2)*(pow(svev,2) + pow(vev,2)) + pow(MS1,2)*(7*pow(svev,2) + 15*pow(vev,2)))*sin(2*alpha) + 8*(MH - MS1)*(MH + MS1)*svev*((6*pow(MH,2) + pow(MS1,2))*pow(svev,2) - 3*pow(MH,2)*pow(vev,2))*sin(4*alpha) + 3*(MH - MS1)*(MH + MS1)*svev*(pow(MH,2)*(9*pow(svev,2) - 3*pow(vev,2)) - pow(MS1,2)*(pow(svev,2) + 5*pow(vev,2)))*sin(6*alpha) + 4*(MH - MS1)*(MH + MS1)*svev*(-(pow(MS1,2)*pow(svev,2)) + pow(MH,2)*(2*pow(svev,2) + 3*pow(vev,2)))*sin(8*alpha) + pow(pow(MH,2) - pow(MS1,2),2)*svev*(pow(svev,2) - 3*pow(vev,2))*sin(10*alpha);
	// 	token133 = 0.0078125;
	// 	token134 = pow(svev,-2);
	// 	token135 = (3*pow(MH,2) + pow(MS1,2))*svev*cos(alpha) + (MH - MS1)*(MH + MS1)*(svev*cos(3*alpha) + 4*vev*pow(sin(alpha),3));
	// 	token136 = -0.0029296875;
	// 	token137 = 4*pow(MS1,2)*(3*pow(MH,2) + pow(MS1,2))*svev*vev*cos(alpha) + 2*(pow(MH,4) - pow(MS1,4))*svev*vev*cos(3*alpha) - 2*pow(pow(MH,2) - pow(MS1,2),2)*svev*vev*cos(5*alpha) + 2*((-pow(MH,4) + pow(MS1,4))*pow(svev,2) + (5*pow(MH,4) + 2*pow(MH,2)*pow(MS1,2) + pow(MS1,4))*pow(vev,2))*sin(alpha) - (MH - MS1)*(MH + MS1)*((3*pow(MH,2) + pow(MS1,2))*pow(svev,2) + (5*pow(MH,2) + 3*pow(MS1,2))*pow(vev,2))*sin(3*alpha) - pow(MH - MS1,2)*pow(MH + MS1,2)*(svev - vev)*(svev + vev)*sin(5*alpha);
	// 	token138 = 0.00048828125;
	// 	token139 = (MH - MS1)*(MH + MS1)*svev*(3*pow(MS1,2)*(5*pow(svev,2) + 9*pow(vev,2)) + pow(MH,2)*(9*pow(svev,2) + 13*pow(vev,2)))*cos(alpha) - (MH - MS1)*(MH + MS1)*svev*(9*(pow(MH,2) + 3*pow(MS1,2))*pow(svev,2) + (25*pow(MH,2) - 13*pow(MS1,2))*pow(vev,2))*cos(3*alpha) - 3*(MH - MS1)*(MH + MS1)*svev*(pow(MH,2)*(pow(svev,2) - 7*pow(vev,2)) - 5*pow(MS1,2)*(pow(svev,2) + pow(vev,2)))*cos(5*alpha) + 3*pow(pow(MH,2) - pow(MS1,2),2)*svev*(pow(svev,2) - 3*pow(vev,2))*cos(7*alpha) + 3*vev*((9*pow(MH,4) - 2*pow(MH,2)*pow(MS1,2) + 9*pow(MS1,4))*pow(svev,2) + (5*pow(MH,4) + 6*pow(MH,2)*pow(MS1,2) + 5*pow(MS1,4))*pow(vev,2))*sin(alpha) + vev*((-13*pow(MH,4) + 74*pow(MH,2)*pow(MS1,2) - 13*pow(MS1,4))*pow(svev,2) + 3*pow(pow(MH,2) + 3*pow(MS1,2),2)*pow(vev,2))*sin(3*alpha) - 3*(MH - MS1)*(MH + MS1)*vev*(5*pow(MS1,2)*(pow(svev,2) + pow(vev,2)) + pow(MH,2)*(-5*pow(svev,2) + 3*pow(vev,2)))*sin(5*alpha) + 3*pow(pow(MH,2) - pow(MS1,2),2)*vev*(-3*pow(svev,2) + pow(vev,2))*sin(7*alpha);
	// 	token140 = -pow(MH,2) - pow(MS1,2) + (MH - MS1)*(MH + MS1)*cos(2*alpha);
	// 	token141 = pow(3*(MH - MS1)*(MH + MS1)*svev*cos(alpha) + (MH - MS1)*(MH + MS1)*svev*cos(3*alpha) + (3*pow(MH,2) + pow(MS1,2))*vev*sin(alpha) + (-pow(MH,2) + pow(MS1,2))*vev*sin(3*alpha),2);
	// 	token142 = pow((pow(MH,2) + pow(MS1,2))*vev - (MH - MS1)*(MH + MS1)*(vev*cos(2*alpha) + svev*sin(2*alpha)),2);
	// 	token143 = 0.0087890625;
	// 	token144 = pow(svev,-3);
	// 	token145 = (pow(MH,2) + pow(MS1,2))*svev + (MH - MS1)*(MH + MS1)*(svev*cos(2*alpha) - vev*sin(2*alpha));
	// 	token146 = (pow(MH,2) + 3*pow(MS1,2))*vev*cos(alpha) + (-pow(MH,2) + pow(MS1,2))*vev*cos(3*alpha) - 2*svev*(pow(MH,2) + pow(MS1,2) + (MH - MS1)*(MH + MS1)*cos(2*alpha))*sin(alpha);
	// 	token147 = -0.0087890625;
	// 	token148 = -0.0078125;
	// 	token149 = 3*(MH - MS1)*(MH + MS1)*vev*cos(alpha) + (MH - MS1)*(MH + MS1)*vev*cos(3*alpha) + (pow(MH,2) + 3*pow(MS1,2))*svev*sin(alpha) + (MH - MS1)*(MH + MS1)*svev*sin(3*alpha);
	// 	token150 = -2*(pow(MH,2) + 5*pow(MS1,2))*(pow(svev,2) + pow(vev,2)) + (pow(MH,2) + 15*pow(MS1,2))*(svev - vev)*(svev + vev)*cos(2*alpha) + 2*(pow(MH,2) - 3*pow(MS1,2))*(pow(svev,2) + pow(vev,2))*cos(4*alpha) - (MH - MS1)*(MH + MS1)*((svev - vev)*(svev + vev)*cos(6*alpha) + 8*svev*vev*pow(sin(2*alpha),3));
	// 	token151 = -0.09375;
	// 	token152 = svev*cos(alpha)*(pow(MH,2) + pow(MS1,2) + (MH - MS1)*(MH + MS1)*cos(2*alpha)) + 2*(MH - MS1)*(MH + MS1)*vev*pow(sin(alpha),3);
	// 	token153 = -0.046875;
	// 	token154 = pow(cw,-4);
	// 	token155 = pow(EL,4);
	// 	token156 = pow(sw,-4);
	// 	token157 = 2*(-pow(MH,2) + pow(MS1,2))*svev*pow(cos(alpha),3) + vev*(-pow(MH,2) - pow(MS1,2) + (MH - MS1)*(MH + MS1)*cos(2*alpha))*sin(alpha);
	// 	token158 = -6*(MH - MS1)*(MH + MS1)*svev*vev + 8*(MH - MS1)*(MH + MS1)*svev*vev*cos(4*alpha) + 2*(-pow(MH,2) + pow(MS1,2))*svev*vev*cos(8*alpha) - 2*(7*pow(MH,2) + 3*pow(MS1,2))*(pow(svev,2) + pow(vev,2))*sin(2*alpha) - 2*(7*pow(MH,2) + pow(MS1,2))*(svev - vev)*(svev + vev)*sin(4*alpha) - 2*(3*pow(MH,2) - pow(MS1,2))*(pow(svev,2) + pow(vev,2))*sin(6*alpha) - (MH - MS1)*(MH + MS1)*(svev - vev)*(svev + vev)*sin(8*alpha);
	// 	token159 = pow(MS1,-2);
	// 	token160 = pow(MH,-2);
	// 	token161 = pow(svev,2)*pow(cos(alpha),4)*(pow(MH,2) + pow(MS1,2) + (MH - MS1)*(MH + MS1)*cos(2*alpha)) + 4*(MH - MS1)*(MH + MS1)*svev*vev*pow(cos(alpha),3)*pow(sin(alpha),3) + pow(vev,2)*(pow(MH,2) + pow(MS1,2) + (-pow(MH,2) + pow(MS1,2))*cos(2*alpha))*pow(sin(alpha),4);
	// 	token162 = -6*svev*vev - 2*svev*vev*cos(4*alpha) + 2*(pow(svev,2) + pow(vev,2))*sin(2*alpha) + (-pow(svev,2) + pow(vev,2))*sin(4*alpha);
	// 	token163 = -0.001953125;
	// 	token164 = vev*pow(cos(alpha),3) - svev*pow(sin(alpha),3);
	// 	token165 = 0.001953125;
	// 	token166 = 0.0003662109375;
	// 	token167 = 0.0009765625;
	// 	token168 = -0.00146484375;
	// 	token169 = -pow(MH,2) + pow(MS1,2);
	// 	token170 = -0.125;
	// 	token171 = 0.125;
	// 	token172 = -0.0703125;
	// 	token173 = -4*(pow(svev,2) + pow(vev,2))*cos(2*alpha) - (svev - vev)*(svev + vev)*(3 + cos(4*alpha)) + 2*svev*vev*sin(4*alpha);
	// 	token174 = -2*pow(MH,4) + pow(MH,2)*pow(MS1,2) + pow(MS1,4);
	// 	token175 = -2*svev*vev*cos(2*alpha) + (-pow(svev,2) + pow(vev,2))*sin(2*alpha);
	// 	token176 = -0.375;
	// 	token177 = 0.0703125;
	// 	token178 = 0.00146484375;
	// 	token179 = -0.00439453125;
	// 	token180 = svev*vev*(15*cos(2*alpha) + cos(6*alpha)) - 2*(svev - vev)*(svev + vev)*pow(sin(2*alpha),3);
	// 	token181 = 1.125;
	// 	token182 = 0.25;
	// 	token183 = -0.84375;
	// 	token184 = pow(MH,6);
	// 	token185 = -0.140625;
	// 	token186 = -0.28125;
	// 	token187 = 0.00439453125;
	// 	token188 = (33*pow(svev,2)*vev - 3*pow(vev,3))*cos(alpha) + 3*vev*(9*pow(svev,2) + pow(vev,2))*cos(3*alpha) + vev*(pow(svev,2) + pow(vev,2))*cos(5*alpha) - vev*(-3*pow(svev,2) + pow(vev,2))*cos(7*alpha) - 3*svev*(pow(svev,2) - 11*pow(vev,2))*sin(alpha) - 3*svev*(pow(svev,2) + 9*pow(vev,2))*sin(3*alpha) + svev*(pow(svev,2) + pow(vev,2))*sin(5*alpha) + svev*(pow(svev,2) - 3*pow(vev,2))*sin(7*alpha);
	// 	token189 = 2*svev*(pow(svev,2) - 5*pow(vev,2))*cos(alpha) - 3*svev*(pow(svev,2) + pow(vev,2))*cos(3*alpha) + svev*(pow(svev,2) - 3*pow(vev,2))*cos(5*alpha) + 2*vev*(-5*pow(svev,2) + pow(vev,2))*sin(alpha) + 3*vev*(pow(svev,2) + pow(vev,2))*sin(3*alpha) + vev*(-3*pow(svev,2) + pow(vev,2))*sin(5*alpha);
	// 	token190 = 3*svev*(pow(svev,2) - 11*pow(vev,2))*cos(alpha) - 3*svev*(pow(svev,2) + 9*pow(vev,2))*cos(3*alpha) - svev*(pow(svev,2) + pow(vev,2))*cos(5*alpha) + svev*(pow(svev,2) - 3*pow(vev,2))*cos(7*alpha) - 3*vev*(-11*pow(svev,2) + pow(vev,2))*sin(alpha) - 3*vev*(9*pow(svev,2) + pow(vev,2))*sin(3*alpha) + vev*(pow(svev,2) + pow(vev,2))*sin(5*alpha) + vev*(-3*pow(svev,2) + pow(vev,2))*sin(7*alpha);
	// 	token191 = 0.28125;
	// 	token192 = -vev + svev*cos(alpha)/sin(alpha);
	// 	token193 = pow(svev - vev*pow(cos(alpha)/sin(alpha),3),2);
	// 	token194 = pow(sin(alpha),8);
	// 	token195 = pow(ye,2);
	// 	token196 = pow(ym,2);
	// 	token197 = pow(ytau,2);
	// 	token198 = pow(yup,2);
	// 	token199 = pow(yc,2);
	// 	token200 = pow(yt,2);
	// 	token201 = pow(ydo,2);
	// 	token202 = pow(ys,2);
	// 	token203 = pow(yb,2);
	// 	token204 = 0.84375;
	// 	token205 = -(svev*cos(alpha)) + vev*sin(alpha);
	// 	token206 = vev - svev*cos(alpha)/sin(alpha);
	// 	token207 = 1;
	// 	token208 = 16;
	// 	token209 = pow(Pi,2);
	// 	token210 = pow(svev,4);
	// 	token211 = 1024;
	// 	token212 = pow(cw,6);
	// 	token213 = pow(sw,6);
	// 	token214 = 32;
	// 	token215 = sqrt(2);
	// 	token216 = pow(svev,3);
	// 	token217 = 64;
	// 	token218 = pow(cw,2);
	// 	token219 = pow(sw,2);
	// 	token220 = pow(EL,2);
	// 	token221 = pow(MW,2);
	// 	token222 = sqrt(1 - MW*MW/(MZ*MZ));
	// 	token223 = -13;
	// 	token224 = pow(MB,2);
	// 	token225 = sqrt(MW*MW);
	// 	token226 = pow(MC,2);
	// 	token227 = pow(MD,2);
	// 	token228 = pow(MS,2);
	// 	token229 = pow(MT,2);
	// 	token230 = pow(MU,2);
	// 	token231 = 17;
	// 	token232 = pow(Me,2);
	// 	token233 = pow(MMU,2);
	// 	token234 = pow(MTA,2);
	// 	token235 = pow(MW*MW,1.5);
	// 	token236 = pow(MZ,2);
	// 	token237 = pow(CKM1x1,2);
	// 	token238 = pow(CKM1x2,2);
	// 	token239 = pow(CKM1x3,2);
	// 	token240 = pow(CKM2x1,2);
	// 	token241 = pow(CKM2x2,2);
	// 	token242 = pow(CKM2x3,2);
	// 	token243 = pow(CKM3x1,2);
	// 	token244 = pow(CKM3x2,2);
	// 	token245 = pow(CKM3x3,2);
	// 	token246 = pow(cw,4);
	// 	token247 = 3;
	// 	token248 = -3;
	// 	token249 = 13;
	// 	token250 = 5;
	// 	token251 = aEW;
	// 	token252 = pow(MH,2);
	// 	token253 = pow(EL,4);
	// 	token254 = pow(vev,2);
	// 	token255 = 7;
	// 	token256 = log(pow(cw,2));
	// 	token257 = -5;
	// 	token258 = MB;
	// 	token259 = -17;
	// 	token260 = MC;
	// 	token261 = MD;
	// 	token262 = cos(3*alpha);
	// 	token263 = MS;
	// 	token264 = MT;
	// 	token265 = MU;
	// 	token266 = -7;
	// 	token267 = -11;
	// 	token268 = 11;
	// 	token269 = pow(MW,2);
	// 	token270 = pow(MW,2);
	// 	token271 = pow(MZ,2);
	// 	token272 = pow(MZ,2);
	// 	token273 = 9;
	// 	token274 = -9;
	// 	token275 = 24;
	// 	token276 = EL;
	// 	token277 = 144;
	// 	token278 = pow(MZ,2);
	// 	token279 = 48;
	// 	token280 = pow(MZ*MZ,2);
	// 	token281 = MZ*MZ;
	// 	token282 = 96;
	// 	token283 = pow(MW,2);
	// 	token284 = pow(sw,4);
	// 	token285 = 8;
	// 	token286 = 36;
	// 	token287 = 18;
	// 	token288 = Pi;
	// 	token289 = 256;
	// 	token290 = 192;
	// 	token291 = 128;
	// 	token292 = 6;
	// 	token293 = pow(sw,6);
	// 	token294 = 288;
	// 	token295 = 72;
	// 	token296 = 384;
	// 	token297 = 576;
	// 	token298 = -0.25;
	// 	token299 = sin(4*alpha);
	// 	token300 = pow(MH,4);
	// 	token301 = pow(MH,2);
	// 	token302 = pow(MS1,2);
	// 	token303 = pow(sin(alpha),5);
	// 	token304 = -18;
	// 	token305 = -6;
	// 	token306 = -2;
	// 	token307 = -0.75;
	// 	token308 = 0.75;
	// 	token309 = -1.5;
	// 	token310 = 1.5;
	// 	token311 = sin(3*alpha);
	// 	token312 = pow(MH,2) - pow(MS1,2);
	// 	token313 = 512;
	// 	token314 = cos(2*alpha);
	// 	token315 = pow(EL,2);
	// 	token316 = EL;
	// 	token317 = MB;
	// 	token318 = EL;
	// 	token319 = pow(EL,2);
	// 	token320 = MB;
	// 	token321 = MC;
	// 	token322 = pow(MH,2);
	// 	token323 = pow(MW,2);
	// 	token324 = pow(MZ,2);
	// 	token325 = MD;
	// 	token326 = MH;
	// 	token327 = MH;
	// 	token328 = MC;
	// 	token329 = MD;
	// 	token330 = MS;
	// 	token331 = MT;
	// 	token332 = MU;
	// 	token333 = pow(MH,2);
	// 	token334 = MS;
	// 	token335 = MT;
	// 	token336 = MU;
	// 	token337 = MW;
	// 	token338 = MW;
	// 	token339 = pow(MW,2);
	// 	token340 = MZ;
	// 	token341 = MZ;
	// 	token342 = pow(MZ,2);
	// 	token343 = pow(MH,4);
	// 	token344 = pow(MH,4);
	// 	token345 = pow(FAGS,2);
	// 	token346 = 3;
	// 	token347 = 1152;
	// 	token348 = pow(pow(MH,2) + pow(MH,2),2);
	// 	token349 = 27;
	// 	token350 = -81;
	// 	token351 = -27;
	// 	token352 = pow(cos(3*alpha),2);
	// 	token353 = -15;
	// 	token354 = 81;
	// 	token355 = pow(MH,2);
	// 	token356 = cos(4*alpha);
	// 	token357 = pow(MS1,2);
	// 	token358 = 15;
	// 	token359 = pow(cos(alpha),5);
	// 	token360 = -2.25;
	// 	token361 = 2.25;
	// 	token362 = pow(MH,6);
	// 	token363 = cos(alpha)/sin(alpha);
	// 	token364 = 4.5;
	// 	token365 = -4.5;
	// 	token366 = -63;
	// 	token367 = 45;
	// 	token368 = tan(alpha);
	// 	token369 = 39;
	// 	token370 = -21;
	// 	token371 = pow(MA1,2);
	// 	token372 = 63;
	// 	token373 = pow(MB,2);
	// 	token374 = pow(MT,2);
	// 	token375 = -4;
	// 	token376 = cw;
	// 	token377 = sw;
	// 	token378 = -19;
	// 	token379 = -3*pow(MS1,2)*svev*pow(cos(alpha),3) + (2*pow(MH,2) + pow(MS1,2))*svev*cos(alpha)*pow(sin(alpha),2) - 2*(pow(MH,2) + 2*pow(MS1,2))*vev*pow(sin(alpha),3);
	
	token40 = 0.005859375;
	token41 = pow(Pi,-2);
	token42 = pow(svev,-4);
	token43 = pow(vev,-2);
	token44 = 2*(pow(svev,2) + pow(vev,2))*(5*pow(MH,2) - std::complex<double>(0,5)*MH*WH + MS1*(MS1 - std::complex<double>(0,1)*WS1)) + (svev - vev)*(svev + vev)*(15*pow(MH,2) - std::complex<double>(0,15)*MH*WH + MS1*(MS1 - std::complex<double>(0,1)*WS1))*cos(2*alpha) - 2*(pow(svev,2) + pow(vev,2))*(-3*pow(MH,2) + std::complex<double>(0,3)*MH*WH + MS1*(MS1 - std::complex<double>(0,1)*WS1))*cos(4*alpha) + (sqrt(MH*(MH - std::complex<double>(0,1)*WH)) - sqrt(MS1*(MS1 - std::complex<double>(0,1)*WS1)))*(sqrt(MH*(MH - std::complex<double>(0,1)*WH)) + sqrt(MS1*(MS1 - std::complex<double>(0,1)*WS1)))*((svev - vev)*(svev + vev)*cos(6*alpha) + 8*svev*vev*pow(sin(2*alpha),3));
	token45 = -0.01171875;
	token46 = pow(sin(2*alpha),2);
	token47 = svev*(3*pow(MH,2) - std::complex<double>(0,3)*MH*WH + MS1*(MS1 - std::complex<double>(0,1)*WS1))*cos(alpha) + svev*(pow(MH,2) - std::complex<double>(0,1)*MH*WH - MS1*(MS1 - std::complex<double>(0,1)*WS1))*cos(3*alpha) - 2*vev*(-pow(MH,2) - pow(MS1,2) + std::complex<double>(0,1)*MH*WH + std::complex<double>(0,1)*MS1*WS1 + (pow(MH,2) - pow(MS1,2) - std::complex<double>(0,1)*MH*WH + std::complex<double>(0,1)*MS1*WS1)*cos(2*alpha))*sin(alpha);
	token48 = 0.00390625;
	token49 = sin(2*alpha);
	token50 = 2*MH*svev*vev*(MH - std::complex<double>(0,1)*WH) - 2*MS1*svev*vev*(MS1 - std::complex<double>(0,1)*WS1) + 6*svev*vev*(pow(MH,2) - std::complex<double>(0,1)*MH*WH - MS1*(MS1 - std::complex<double>(0,1)*WS1))*cos(4*alpha) + 6*(pow(svev,2) + pow(vev,2))*(pow(MH,2) - std::complex<double>(0,1)*MH*WH + MS1*(MS1 - std::complex<double>(0,1)*WS1))*sin(2*alpha) + 3*MH*(svev - vev)*(svev + vev)*(MH - std::complex<double>(0,1)*WH)*sin(4*alpha) - 3*MS1*(svev - vev)*(svev + vev)*(MS1 - std::complex<double>(0,1)*WS1)*sin(4*alpha);
	token51 = 0.03125;
	token52 = 1/vev;
	token53 = pow(sin(alpha),3);
	token54 = 0.046875;
	token55 = 3*svev*(pow(MH,2) - std::complex<double>(0,1)*MH*WH - MS1*(MS1 - std::complex<double>(0,1)*WS1))*cos(alpha) + svev*(pow(MH,2) - std::complex<double>(0,1)*MH*WH - MS1*(MS1 - std::complex<double>(0,1)*WS1))*cos(3*alpha) - 2*vev*(-pow(MH,2) - pow(MS1,2) + std::complex<double>(0,1)*MH*WH + std::complex<double>(0,1)*MS1*WS1 + (pow(MH,2) - pow(MS1,2) - std::complex<double>(0,1)*MH*WH + std::complex<double>(0,1)*MS1*WS1)*cos(2*alpha))*sin(alpha);
	token56 = -0.015625;
	token57 = pow(cos(alpha),3);
	token58 = vev*(pow(MH,2) + pow(MS1,2) - std::complex<double>(0,1)*MH*WH - std::complex<double>(0,1)*MS1*WS1) - vev*(pow(MH,2) - std::complex<double>(0,1)*MH*WH - MS1*(MS1 - std::complex<double>(0,1)*WS1))*cos(2*alpha) - svev*(pow(MH,2) - pow(MS1,2) - std::complex<double>(0,1)*MH*WH + std::complex<double>(0,1)*MS1*WS1)*sin(2*alpha);
	token59 = 0.140625;
	token60 = pow(vev,-3);
	token61 = pow(svev*pow(cos(alpha),3) + vev*pow(sin(alpha),3),2);
	token62 = 0.0625;
	token63 = sqrt(MH*(MH - std::complex<double>(0,1)*WH)) - sqrt(MS1*(MS1 - std::complex<double>(0,1)*WS1));
	token64 = sqrt(MH*(MH - std::complex<double>(0,1)*WH)) + sqrt(MS1*(MS1 - std::complex<double>(0,1)*WS1));
	token65 = 1/svev;
	token66 = 0.0029296875;
	token67 = 4*(pow(svev,2) + pow(vev,2))*cos(2*alpha) + (svev - vev)*(svev + vev)*(3 + cos(4*alpha)) - 2*svev*vev*sin(4*alpha);
	token68 = 0.015625;
	token69 = pow(2*pow(MH,2) - std::complex<double>(0,2)*MH*WH + MS1*(MS1 - std::complex<double>(0,1)*WS1),2);
	token70 = pow(svev*cos(alpha) - vev*sin(alpha),2);
	token71 = vev*(pow(MH,2) - std::complex<double>(0,1)*MH*WH + 3*MS1*(MS1 - std::complex<double>(0,1)*WS1))*cos(alpha) - (pow(MH,2) - std::complex<double>(0,1)*MH*WH - MS1*(MS1 - std::complex<double>(0,1)*WS1))*(vev*cos(3*alpha) - 4*svev*pow(sin(alpha),3));
	token72 = 2*svev*vev*cos(2*alpha) + (svev - vev)*(svev + vev)*sin(2*alpha);
	token73 = pow(pow(MH,2) - std::complex<double>(0,1)*MH*WH + 2*MS1*(MS1 - std::complex<double>(0,1)*WS1),2);
	token74 = pow(vev*cos(alpha) + svev*sin(alpha),2);
	token75 = 0.09375;
	token76 = pow(MH,2) - std::complex<double>(0,1)*MH*WH + MS1*(MS1 - std::complex<double>(0,1)*WS1) + (-pow(MH,2) + std::complex<double>(0,1)*MH*WH + MS1*(MS1 - std::complex<double>(0,1)*WS1))*cos(2*alpha);
	token77 = pow(cw,-2);
	token78 = pow(sw,-2);
	token79 = 1/sqrt(2);
	token80 = Me;
	token81 = pow(ye,3);
	token82 = MMU;
	token83 = pow(ym,3);
	token84 = MTA;
	token85 = pow(ytau,3);
	token86 = MU;
	token87 = pow(yup,3);
	token88 = MC;
	token89 = pow(yc,3);
	token90 = MT;
	token91 = pow(yt,3);
	token92 = MD;
	token93 = pow(ydo,3);
	token94 = MS;
	token95 = pow(ys,3);
	token96 = MB;
	token97 = pow(yb,3);
	token98 = -1.6875;
	token99 = pow(pow(MH,2) - std::complex<double>(0,1)*MH*WH,4);
	token100 = pow(vev + svev*pow( (cos(alpha)/sin(alpha)),3),3);
	token101 = pow(sin(alpha),10);
	token102 = -0.1875;
	token103 = -0.0625;
	token104 = pow(sin(alpha),4);
	token105 = pow(pow(MH,2) - std::complex<double>(0,1)*MH*WH + 2*MS1*(MS1 - std::complex<double>(0,1)*WS1),3);
	token106 = pow(vev*cos(alpha) + svev*sin(alpha),3);
	token107 = 0.5625;
	token108 = 0.01171875;
	token109 = -2*vev*(-5*pow(svev,2) + pow(vev,2))*cos(alpha) + 3*vev*(pow(svev,2) + pow(vev,2))*cos(3*alpha) - vev*(-3*pow(svev,2) + pow(vev,2))*cos(5*alpha) + 2*svev*(pow(svev,2) - 5*pow(vev,2))*sin(alpha) + 3*svev*(pow(svev,2) + pow(vev,2))*sin(3*alpha) + svev*(pow(svev,2) - 3*pow(vev,2))*sin(5*alpha);
	token110 = pow(2*pow(MH,2) - std::complex<double>(0,2)*MH*WH + MS1*(MS1 - std::complex<double>(0,1)*WS1),3);
	token111 = pow(cos(alpha),4);
	token112 = pow(svev*cos(alpha) - vev*sin(alpha),3);
	token113 = 0.1875;
	token114 = pow(EL,6);
	token115 = pow(vev,3);
	token116 = pow(cw,-2);
	token117 = pow(EL,4);
	token118 = pow(sw,-2);
	token119 = -0.00390625;
	token120 = vev + svev*pow( (cos(alpha)/sin(alpha)),3);
	token121 = pow(sin(alpha),6);
	token122 = -0.5625;
	token123 = pow(svev*pow(cos(alpha),3)*sin(alpha) + vev*pow(sin(alpha),4),2);
	token124 = -0.0234375;
	token125 = 6*svev*vev + 2*svev*vev*cos(4*alpha) + 2*(pow(svev,2) + pow(vev,2))*sin(2*alpha) + (svev - vev)*(svev + vev)*sin(4*alpha);
	token126 = 0.0234375;
	token127 = pow(pow(MS1,2) - std::complex<double>(0,1)*MS1*WS1,3);
	token128 = 6*svev*vev + 2*svev*vev*cos(4*alpha) - 2*(pow(svev,2) + pow(vev,2))*sin(2*alpha) + (svev - vev)*(svev + vev)*sin(4*alpha);
	token129 = -0.005859375;
	token130 = -0.03125;
	token131 = 0.00018310546875;
	token132 = 2*vev*(9*pow(MH,2)*(pow(svev,2) + 7*pow(vev,2))*pow(MH - std::complex<double>(0,1)*WH,2) - 2*MH*MS1*(pow(svev,2) - 7*pow(vev,2))*(MH - std::complex<double>(0,1)*WH)*(MS1 - std::complex<double>(0,1)*WS1) + 3*pow(MS1,2)*(3*pow(svev,2) + pow(vev,2))*pow(MS1 - std::complex<double>(0,1)*WS1,2)) - 2*vev*(-(pow(svev,2)*(3*pow(MH,2)*pow(MH - std::complex<double>(0,1)*WH,2) + 2*MH*MS1*(MH - std::complex<double>(0,1)*WH)*(MS1 - std::complex<double>(0,1)*WS1) + 3*pow(MS1,2)*pow(MS1 - std::complex<double>(0,1)*WS1,2))) + pow(vev,2)*(105*pow(MH,2)*pow(MH - std::complex<double>(0,1)*WH,2) + 14*MH*MS1*(MH - std::complex<double>(0,1)*WH)*(MS1 - std::complex<double>(0,1)*WS1) + pow(pow(MS1,2) - std::complex<double>(0,1)*MS1*WS1,2)))*cos(2*alpha) - 8*vev*(3*pow(MH,2)*(pow(svev,2) - 5*pow(vev,2))*pow(MH - std::complex<double>(0,1)*WH,2) + 2*MH*MS1*(-pow(svev,2) + pow(vev,2))*(MH - std::complex<double>(0,1)*WH)*(MS1 - std::complex<double>(0,1)*WS1) + pow(MS1,2)*(3*pow(svev,2) + pow(vev,2))*pow(MS1 - std::complex<double>(0,1)*WS1,2))*cos(4*alpha) + vev*(-9*pow(MH,2)*(pow(svev,2) + 5*pow(vev,2))*pow(MH - std::complex<double>(0,1)*WH,2) + 2*MH*MS1*(pow(svev,2) + 13*pow(vev,2))*(MH - std::complex<double>(0,1)*WH)*(MS1 - std::complex<double>(0,1)*WS1) + 3*pow(MS1,2)*(-3*pow(svev,2) + pow(vev,2))*pow(MS1 - std::complex<double>(0,1)*WS1,2))*cos(6*alpha) + 2*vev*(MH*(3*pow(svev,2) + 5*pow(vev,2))*(MH - std::complex<double>(0,1)*WH) - MS1*(3*pow(svev,2) + pow(vev,2))*(MS1 - std::complex<double>(0,1)*WS1))*(sqrt(MH*(MH - std::complex<double>(0,1)*WH)) - sqrt(MS1*(MS1 - std::complex<double>(0,1)*WS1)))*(sqrt(MH*(MH - std::complex<double>(0,1)*WH)) + sqrt(MS1*(MS1 - std::complex<double>(0,1)*WS1)))*cos(8*alpha) - vev*(-3*pow(svev,2) + pow(vev,2))*pow(pow(MH,2) - std::complex<double>(0,1)*MH*WH - MS1*(MS1 - std::complex<double>(0,1)*WS1),2)*cos(10*alpha) + 2*svev*(21*MH*(pow(svev,2) + pow(vev,2))*(MH - std::complex<double>(0,1)*WH) + MS1*(7*pow(svev,2) + 15*pow(vev,2))*(MS1 - std::complex<double>(0,1)*WS1))*(sqrt(MH*(MH - std::complex<double>(0,1)*WH)) - sqrt(MS1*(MS1 - std::complex<double>(0,1)*WS1)))*(sqrt(MH*(MH - std::complex<double>(0,1)*WH)) + sqrt(MS1*(MS1 - std::complex<double>(0,1)*WS1)))*sin(2*alpha) + 8*svev*(-3*MH*pow(vev,2)*(MH - std::complex<double>(0,1)*WH) + pow(svev,2)*(6*pow(MH,2) - std::complex<double>(0,6)*MH*WH + MS1*(MS1 - std::complex<double>(0,1)*WS1)))*(sqrt(MH*(MH - std::complex<double>(0,1)*WH)) - sqrt(MS1*(MS1 - std::complex<double>(0,1)*WS1)))*(sqrt(MH*(MH - std::complex<double>(0,1)*WH)) + sqrt(MS1*(MS1 - std::complex<double>(0,1)*WS1)))*sin(4*alpha) + 3*svev*(MH*(9*pow(svev,2) - 3*pow(vev,2))*(MH - std::complex<double>(0,1)*WH) - MS1*(pow(svev,2) + 5*pow(vev,2))*(MS1 - std::complex<double>(0,1)*WS1))*(sqrt(MH*(MH - std::complex<double>(0,1)*WH)) - sqrt(MS1*(MS1 - std::complex<double>(0,1)*WS1)))*(sqrt(MH*(MH - std::complex<double>(0,1)*WH)) + sqrt(MS1*(MS1 - std::complex<double>(0,1)*WS1)))*sin(6*alpha) + 4*svev*(MH*(2*pow(svev,2) + 3*pow(vev,2))*(MH - std::complex<double>(0,1)*WH) - MS1*pow(svev,2)*(MS1 - std::complex<double>(0,1)*WS1))*(sqrt(MH*(MH - std::complex<double>(0,1)*WH)) - sqrt(MS1*(MS1 - std::complex<double>(0,1)*WS1)))*(sqrt(MH*(MH - std::complex<double>(0,1)*WH)) + sqrt(MS1*(MS1 - std::complex<double>(0,1)*WS1)))*sin(8*alpha) + svev*(pow(svev,2) - 3*pow(vev,2))*pow(pow(MH,2) - std::complex<double>(0,1)*MH*WH - MS1*(MS1 - std::complex<double>(0,1)*WS1),2)*sin(10*alpha);
	token133 = 0.0078125;
	token134 = pow(svev,-2);
	token135 = svev*(3*pow(MH,2) - std::complex<double>(0,3)*MH*WH + MS1*(MS1 - std::complex<double>(0,1)*WS1))*cos(alpha) + (pow(MH,2) - std::complex<double>(0,1)*MH*WH - MS1*(MS1 - std::complex<double>(0,1)*WS1))*(svev*cos(3*alpha) + 4*vev*pow(sin(alpha),3));
	token136 = -0.0029296875;
	token137 = 4*MS1*svev*vev*(3*pow(MH,2) - std::complex<double>(0,3)*MH*WH + MS1*(MS1 - std::complex<double>(0,1)*WS1))*(MS1 - std::complex<double>(0,1)*WS1)*cos(alpha) + 2*svev*vev*(pow(pow(MH,2) - std::complex<double>(0,1)*MH*WH,2) - pow(MS1,2)*pow(MS1 - std::complex<double>(0,1)*WS1,2))*cos(3*alpha) - 2*svev*vev*pow(pow(MH,2) - std::complex<double>(0,1)*MH*WH - MS1*(MS1 - std::complex<double>(0,1)*WS1),2)*cos(5*alpha) + 2.*(pow(svev,2)*(-(pow(MH,2)*pow(MH - std::complex<double>(0,1)*WH,2)) + pow(pow(MS1,2) - std::complex<double>(0,1)*MS1*WS1,2)) + pow(vev,2)*(5*pow(MH,2)*pow(MH - std::complex<double>(0,1)*WH,2) + 2*MH*MS1*(MH - std::complex<double>(0,1)*WH)*(MS1 - std::complex<double>(0,1)*WS1) + pow(pow(MS1,2) - std::complex<double>(0,1)*MS1*WS1,2)))*sin(alpha) - (pow(MH,2)*(3*pow(svev,2) + 5*pow(vev,2)) - std::complex<double>(0,1)*MH*(3*pow(svev,2) + 5*pow(vev,2))*WH + MS1*(pow(svev,2) + 3*pow(vev,2))*(MS1 - std::complex<double>(0,1)*WS1))*(sqrt(MH*(MH - std::complex<double>(0,1)*WH)) - sqrt(MS1*(MS1 - std::complex<double>(0,1)*WS1)))*(sqrt(MH*(MH - std::complex<double>(0,1)*WH)) + sqrt(MS1*(MS1 - std::complex<double>(0,1)*WS1)))*sin(3*alpha) - (svev - vev)*(svev + vev)*pow(pow(MH,2) - std::complex<double>(0,1)*MH*WH - MS1*(MS1 - std::complex<double>(0,1)*WS1),2)*sin(5*alpha);
	token138 = 0.00048828125;
	token139 = svev*(MH*(9*pow(svev,2) + 13*pow(vev,2))*(MH - std::complex<double>(0,1)*WH) + 3*MS1*(5*pow(svev,2) + 9*pow(vev,2))*(MS1 - std::complex<double>(0,1)*WS1))*(sqrt(MH*(MH - std::complex<double>(0,1)*WH)) - sqrt(MS1*(MS1 - std::complex<double>(0,1)*WS1)))*(sqrt(MH*(MH - std::complex<double>(0,1)*WH)) + sqrt(MS1*(MS1 - std::complex<double>(0,1)*WS1)))*cos(alpha) - svev*(pow(MH,2)*(9*pow(svev,2) + 25*pow(vev,2)) - std::complex<double>(0,1)*MH*(9*pow(svev,2) + 25*pow(vev,2))*WH + MS1*(27*pow(svev,2) - 13*pow(vev,2))*(MS1 - std::complex<double>(0,1)*WS1))*(sqrt(MH*(MH - std::complex<double>(0,1)*WH)) - sqrt(MS1*(MS1 - std::complex<double>(0,1)*WS1)))*(sqrt(MH*(MH - std::complex<double>(0,1)*WH)) + sqrt(MS1*(MS1 - std::complex<double>(0,1)*WS1)))*cos(3*alpha) - 3*svev*(MH*(pow(svev,2) - 7*pow(vev,2))*(MH - std::complex<double>(0,1)*WH) - 5*MS1*(pow(svev,2) + pow(vev,2))*(MS1 - std::complex<double>(0,1)*WS1))*(sqrt(MH*(MH - std::complex<double>(0,1)*WH)) - sqrt(MS1*(MS1 - std::complex<double>(0,1)*WS1)))*(sqrt(MH*(MH - std::complex<double>(0,1)*WH)) + sqrt(MS1*(MS1 - std::complex<double>(0,1)*WS1)))*cos(5*alpha) + 3*svev*(pow(svev,2) - 3*pow(vev,2))*pow(pow(MH,2) - std::complex<double>(0,1)*MH*WH - MS1*(MS1 - std::complex<double>(0,1)*WS1),2)*cos(7*alpha) + 3*vev*(pow(vev,2)*(5*pow(MH,2)*pow(MH - std::complex<double>(0,1)*WH,2) + 6*MH*MS1*(MH - std::complex<double>(0,1)*WH)*(MS1 - std::complex<double>(0,1)*WS1) + 5*pow(MS1,2)*pow(MS1 - std::complex<double>(0,1)*WS1,2)) + pow(svev,2)*(9*pow(MH,2)*pow(MH - std::complex<double>(0,1)*WH,2) - 2*MH*MS1*(MH - std::complex<double>(0,1)*WH)*(MS1 - std::complex<double>(0,1)*WS1) + 9*pow(MS1,2)*pow(MS1 - std::complex<double>(0,1)*WS1,2)))*sin(alpha) + vev*(3*pow(vev,2)*pow(pow(MH,2) - std::complex<double>(0,1)*MH*WH + 3*MS1*(MS1 - std::complex<double>(0,1)*WS1),2) + pow(svev,2)*(-13*pow(MH,2)*pow(MH - std::complex<double>(0,1)*WH,2) + 74*MH*MS1*(MH - std::complex<double>(0,1)*WH)*(MS1 - std::complex<double>(0,1)*WS1) - 13*pow(MS1,2)*pow(MS1 - std::complex<double>(0,1)*WS1,2)))*sin(3*alpha) - 3*vev*(MH*(-5*pow(svev,2) + 3*pow(vev,2))*(MH - std::complex<double>(0,1)*WH) + 5*MS1*(pow(svev,2) + pow(vev,2))*(MS1 - std::complex<double>(0,1)*WS1))*(sqrt(MH*(MH - std::complex<double>(0,1)*WH)) - sqrt(MS1*(MS1 - std::complex<double>(0,1)*WS1)))*(sqrt(MH*(MH - std::complex<double>(0,1)*WH)) + sqrt(MS1*(MS1 - std::complex<double>(0,1)*WS1)))*sin(5*alpha) + 3*vev*(-3*pow(svev,2) + pow(vev,2))*pow(pow(MH,2) - std::complex<double>(0,1)*MH*WH - MS1*(MS1 - std::complex<double>(0,1)*WS1),2)*sin(7*alpha);
	token140 = -pow(MH,2) + std::complex<double>(0,1)*MH*WH - MS1*(MS1 - std::complex<double>(0,1)*WS1) + (pow(MH,2) - std::complex<double>(0,1)*MH*WH - MS1*(MS1 - std::complex<double>(0,1)*WS1))*cos(2*alpha);
	token141 = pow(3*svev*(pow(MH,2) - std::complex<double>(0,1)*MH*WH - MS1*(MS1 - std::complex<double>(0,1)*WS1))*cos(alpha) + svev*(pow(MH,2) - std::complex<double>(0,1)*MH*WH - MS1*(MS1 - std::complex<double>(0,1)*WS1))*cos(3*alpha) - 2*vev*(-pow(MH,2) - pow(MS1,2) + std::complex<double>(0,1)*MH*WH + std::complex<double>(0,1)*MS1*WS1 + (pow(MH,2) - pow(MS1,2) - std::complex<double>(0,1)*MH*WH + std::complex<double>(0,1)*MS1*WS1)*cos(2*alpha))*sin(alpha),2);
	token142 = pow(-(vev*(pow(MH,2) + pow(MS1,2) - std::complex<double>(0,1)*MH*WH - std::complex<double>(0,1)*MS1*WS1)) + vev*(pow(MH,2) - std::complex<double>(0,1)*MH*WH - MS1*(MS1 - std::complex<double>(0,1)*WS1))*cos(2*alpha) + svev*(pow(MH,2) - pow(MS1,2) - std::complex<double>(0,1)*MH*WH + std::complex<double>(0,1)*MS1*WS1)*sin(2*alpha),2);
	token143 = 0.0087890625;
	token144 = pow(svev,-3);
	token145 = svev*(pow(MH,2) + pow(MS1,2) - std::complex<double>(0,1)*MH*WH - std::complex<double>(0,1)*MS1*WS1) + svev*(pow(MH,2) - std::complex<double>(0,1)*MH*WH - MS1*(MS1 - std::complex<double>(0,1)*WS1))*cos(2*alpha) - vev*(pow(MH,2) - pow(MS1,2) - std::complex<double>(0,1)*MH*WH + std::complex<double>(0,1)*MS1*WS1)*sin(2*alpha);
	token146 = vev*(pow(MH,2) - std::complex<double>(0,1)*MH*WH + 3*MS1*(MS1 - std::complex<double>(0,1)*WS1))*cos(alpha) + vev*(-pow(MH,2) + std::complex<double>(0,1)*MH*WH + MS1*(MS1 - std::complex<double>(0,1)*WS1))*cos(3*alpha) - 2*svev*(pow(MH,2) - std::complex<double>(0,1)*MH*WH + MS1*(MS1 - std::complex<double>(0,1)*WS1) + (pow(MH,2) - std::complex<double>(0,1)*MH*WH - MS1*(MS1 - std::complex<double>(0,1)*WS1))*cos(2*alpha))*sin(alpha);
	token147 = -0.0087890625;
	token148 = -0.0078125;
	token149 = 3*vev*(pow(MH,2) - std::complex<double>(0,1)*MH*WH - MS1*(MS1 - std::complex<double>(0,1)*WS1))*cos(alpha) + vev*(pow(MH,2) - std::complex<double>(0,1)*MH*WH - MS1*(MS1 - std::complex<double>(0,1)*WS1))*cos(3*alpha) + 2*svev*(pow(MH,2) + pow(MS1,2) - std::complex<double>(0,1)*MH*WH - std::complex<double>(0,1)*MS1*WS1 + (pow(MH,2) - pow(MS1,2) - std::complex<double>(0,1)*MH*WH + std::complex<double>(0,1)*MS1*WS1)*cos(2*alpha))*sin(alpha);
	token150 = -2*(pow(svev,2) + pow(vev,2))*(pow(MH,2) - std::complex<double>(0,1)*MH*WH + 5*MS1*(MS1 - std::complex<double>(0,1)*WS1)) + (svev - vev)*(svev + vev)*(pow(MH,2) - std::complex<double>(0,1)*MH*WH + 15*MS1*(MS1 - std::complex<double>(0,1)*WS1))*cos(2*alpha) + 2*(pow(svev,2) + pow(vev,2))*(pow(MH,2) - std::complex<double>(0,1)*MH*WH - 3*MS1*(MS1 - std::complex<double>(0,1)*WS1))*cos(4*alpha) - (pow(MH,2) - std::complex<double>(0,1)*MH*WH - MS1*(MS1 - std::complex<double>(0,1)*WS1))*((pow(svev,2) - pow(vev,2))*cos(6*alpha) + 8*svev*vev*pow(sin(2*alpha),3));
	token151 = -0.09375;
	token152 = svev*cos(alpha)*(pow(MH,2) + pow(MS1,2) - std::complex<double>(0,1)*MH*WH - std::complex<double>(0,1)*MS1*WS1 + (pow(MH,2) - pow(MS1,2) - std::complex<double>(0,1)*MH*WH + std::complex<double>(0,1)*MS1*WS1)*cos(2*alpha)) + 2*vev*(pow(MH,2) - std::complex<double>(0,1)*MH*WH - MS1*(MS1 - std::complex<double>(0,1)*WS1))*pow(sin(alpha),3);
	token153 = -0.046875;
	token154 = pow(cw,-4);
	token155 = pow(sw,-4);
	token156 = -2*svev*(pow(MH,2) - std::complex<double>(0,1)*MH*WH - MS1*(MS1 - std::complex<double>(0,1)*WS1))*pow(cos(alpha),3) + vev*(-pow(MH,2) - pow(MS1,2) + std::complex<double>(0,1)*MH*WH + std::complex<double>(0,1)*MS1*WS1 + (pow(MH,2) - pow(MS1,2) - std::complex<double>(0,1)*MH*WH + std::complex<double>(0,1)*MS1*WS1)*cos(2*alpha))*sin(alpha);
	token157 = 6*svev*vev*(-pow(MH,2) + std::complex<double>(0,1)*MH*WH + MS1*(MS1 - std::complex<double>(0,1)*WS1)) + 8*svev*vev*(pow(MH,2) - std::complex<double>(0,1)*MH*WH - MS1*(MS1 - std::complex<double>(0,1)*WS1))*cos(4*alpha) + 2*svev*vev*(-pow(MH,2) + std::complex<double>(0,1)*MH*WH + MS1*(MS1 - std::complex<double>(0,1)*WS1))*cos(8*alpha) - 2*(pow(svev,2) + pow(vev,2))*(7*pow(MH,2) - std::complex<double>(0,7)*MH*WH + 3*MS1*(MS1 - std::complex<double>(0,1)*WS1))*sin(2*alpha) - 2*(svev - vev)*(svev + vev)*(7*pow(MH,2) - std::complex<double>(0,7)*MH*WH + MS1*(MS1 - std::complex<double>(0,1)*WS1))*sin(4*alpha) + 2*(pow(svev,2) + pow(vev,2))*(-3*pow(MH,2) + std::complex<double>(0,3)*MH*WH + MS1*(MS1 - std::complex<double>(0,1)*WS1))*sin(6*alpha) - (svev - vev)*(svev + vev)*(sqrt(MH*(MH - std::complex<double>(0,1)*WH)) - sqrt(MS1*(MS1 - std::complex<double>(0,1)*WS1)))*(sqrt(MH*(MH - std::complex<double>(0,1)*WH)) + sqrt(MS1*(MS1 - std::complex<double>(0,1)*WS1)))*sin(8*alpha);
	token158 = 1./(pow(MS1,2) - std::complex<double>(0,1)*MS1*WS1);
	token159 = 1./(pow(MH,2) - std::complex<double>(0,1)*MH*WH);
	token160 = pow(svev,2)*pow(cos(alpha),4)*(pow(MH,2) + pow(MS1,2) - std::complex<double>(0,1)*MH*WH - std::complex<double>(0,1)*MS1*WS1 + (pow(MH,2) - pow(MS1,2) - std::complex<double>(0,1)*MH*WH + std::complex<double>(0,1)*MS1*WS1)*cos(2*alpha)) + 4*svev*vev*(pow(MH,2) - std::complex<double>(0,1)*MH*WH - MS1*(MS1 - std::complex<double>(0,1)*WS1))*pow(cos(alpha),3)*pow(sin(alpha),3) + pow(vev,2)*(pow(MH,2) + pow(MS1,2) - std::complex<double>(0,1)*MH*WH - std::complex<double>(0,1)*MS1*WS1 + (-pow(MH,2) + pow(MS1,2) + std::complex<double>(0,1)*MH*WH - std::complex<double>(0,1)*MS1*WS1)*cos(2*alpha))*pow(sin(alpha),4);
	token161 = -6*svev*vev - 2*svev*vev*cos(4*alpha) + 2*(pow(svev,2) + pow(vev,2))*sin(2*alpha) + (-pow(svev,2) + pow(vev,2))*sin(4*alpha);
	token162 = -0.001953125;
	token163 = vev*pow(cos(alpha),3) - svev*pow(sin(alpha),3);
	token164 = 0.001953125;
	token165 = 0.0003662109375;
	token166 = 0.0009765625;
	token167 = -0.00146484375;
	token168 = -pow(MH,2) + std::complex<double>(0,1)*MH*WH + MS1*(MS1 - std::complex<double>(0,1)*WS1);
	token169 = -0.125;
	token170 = 0.125;
	token171 = -0.0703125;
	token172 = -4*(pow(svev,2) + pow(vev,2))*cos(2*alpha) - (svev - vev)*(svev + vev)*(3 + cos(4*alpha)) + 2*svev*vev*sin(4*alpha);
	token173 = -2*pow(MH,2)*pow(MH - std::complex<double>(0,1)*WH,2) + MH*MS1*(MH - std::complex<double>(0,1)*WH)*(MS1 - std::complex<double>(0,1)*WS1) + pow(pow(MS1,2) - std::complex<double>(0,1)*MS1*WS1,2);
	token174 = -2*svev*vev*cos(2*alpha) + (-pow(svev,2) + pow(vev,2))*sin(2*alpha);
	token175 = -0.375;
	token176 = 0.0703125;
	token177 = 0.00146484375;
	token178 = -0.00439453125;
	token179 = svev*vev*(15*cos(2*alpha) + cos(6*alpha)) - 2*(svev - vev)*(svev + vev)*pow(sin(2*alpha),3);
	token180 = 1.125;
	token181 = 0.25;
	token182 = -0.84375;
	token183 = pow(pow(MH,2) - std::complex<double>(0,1)*MH*WH,3);
	token184 = -0.140625;
	token185 = -0.28125;
	token186 = 0.00439453125;
	token187 = (33*pow(svev,2)*vev - 3*pow(vev,3))*cos(alpha) + 3*vev*(9*pow(svev,2) + pow(vev,2))*cos(3*alpha) + vev*(pow(svev,2) + pow(vev,2))*cos(5*alpha) - vev*(-3*pow(svev,2) + pow(vev,2))*cos(7*alpha) - 3*svev*(pow(svev,2) - 11*pow(vev,2))*sin(alpha) - 3*svev*(pow(svev,2) + 9*pow(vev,2))*sin(3*alpha) + svev*(pow(svev,2) + pow(vev,2))*sin(5*alpha) + svev*(pow(svev,2) - 3*pow(vev,2))*sin(7*alpha);
	token188 = 2*svev*(pow(svev,2) - 5*pow(vev,2))*cos(alpha) - 3*svev*(pow(svev,2) + pow(vev,2))*cos(3*alpha) + svev*(pow(svev,2) - 3*pow(vev,2))*cos(5*alpha) + 2*vev*(-5*pow(svev,2) + pow(vev,2))*sin(alpha) + 3*vev*(pow(svev,2) + pow(vev,2))*sin(3*alpha) + vev*(-3*pow(svev,2) + pow(vev,2))*sin(5*alpha);
	token189 = 3*svev*(pow(svev,2) - 11*pow(vev,2))*cos(alpha) - 3*svev*(pow(svev,2) + 9*pow(vev,2))*cos(3*alpha) - svev*(pow(svev,2) + pow(vev,2))*cos(5*alpha) + svev*(pow(svev,2) - 3*pow(vev,2))*cos(7*alpha) - 3*vev*(-11*pow(svev,2) + pow(vev,2))*sin(alpha) - 3*vev*(9*pow(svev,2) + pow(vev,2))*sin(3*alpha) + vev*(pow(svev,2) + pow(vev,2))*sin(5*alpha) + vev*(-3*pow(svev,2) + pow(vev,2))*sin(7*alpha);
	token190 = 0.28125;
	token191 = -vev + svev* (cos(alpha)/sin(alpha));
	token192 = pow(svev - vev*pow( (cos(alpha)/sin(alpha)),3),2);
	token193 = pow(sin(alpha),8);
	token194 = pow(ye,2);
	token195 = pow(ym,2);
	token196 = pow(ytau,2);
	token197 = pow(yup,2);
	token198 = pow(yc,2);
	token199 = pow(yt,2);
	token200 = pow(ydo,2);
	token201 = pow(ys,2);
	token202 = pow(yb,2);
	token203 = 0.375;
	token204 = 0.84375;
	token205 = -(svev*cos(alpha)) + vev*sin(alpha);
	token206 = vev - svev* (cos(alpha)/sin(alpha));
	token207 = 1;
	token208 = 16;
	token209 = pow(Pi,2);
	token210 = pow(svev,4);
	token211 = 1024;
	token212 = pow(cw,6);
	token213 = pow(sw,6);
	token214 = 32;
	token215 = sqrt(2);
	token216 = pow(svev,3);
	token217 = 64;
	token218 = pow(cw,2);
	token219 = pow(sw,2);
	token220 = pow(EL,2);
	token221 = pow(MW,2);
	token222 = sqrt(1 - pow(MW,2)/pow(MZ,2));
	token223 = -13;
	token224 = pow(MB,2);
	token225 = sqrt(pow(MW,2));
	token226 = pow(MC,2);
	token227 = pow(MD,2);
	token228 = pow(MS,2);
	token229 = pow(MT,2);
	token230 = pow(MU,2);
	token231 = 17;
	token232 = pow(Me,2);
	token233 = pow(MMU,2);
	token234 = pow(MTA,2);
	token235 = pow(pow(MW,2),1.5);
	token236 = pow(MZ,2);
	token237 = pow(CKM1x1,2);
	token238 = pow(CKM1x2,2);
	token239 = pow(CKM1x3,2);
	token240 = pow(CKM2x1,2);
	token241 = pow(CKM2x2,2);
	token242 = pow(CKM2x3,2);
	token243 = pow(CKM3x1,2);
	token244 = pow(CKM3x2,2);
	token245 = pow(CKM3x3,2);
	token246 = pow(cw,4);
	token247 = 3;
	token248 = -3;
	token249 = 13;
	token250 = 5;
	token251 = aEW;
	token252 = MH*(MH - std::complex<double>(0,1)*WH);
	token253 = pow(EL,4);
	token254 = pow(vev,2);
	token255 = 7;
	token256 = log(pow(cw,2));
	token257 = -5;
	token258 = MB;
	token259 = -17;
	token260 = MC;
	token261 = MD;
	token262 = cos(3*alpha);
	token263 = MS;
	token264 = MT;
	token265 = MU;
	token266 = -7;
	token267 = -11;
	token268 = 11;
	token269 = pow(MW,2);
	token270 = pow(MW,2);
	token271 = pow(MZ,2);
	token272 = pow(MZ,2);
	token273 = 9;
	token274 = -9;
	token275 = 24;
	token276 = EL;
	token277 = 144;
	token278 = pow(MZ,2);
	token279 = 48;
	token280 = pow(MZ,4);
	token281 = pow(MZ,2);
	token282 = 96;
	token283 = pow(MW,2);
	token284 = pow(sw,4);
	token285 = 8;
	token286 = 36;
	token287 = 18;
	token288 = Pi;
	token289 = 256;
	token290 = 192;
	token291 = 128;
	token292 = 6;
	token293 = pow(sw,6);
	token294 = 288;
	token295 = 72;
	token296 = 384;
	token297 = 576;
	token298 = -0.25;
	token299 = sin(4*alpha);
	token300 = pow(pow(MH,2) - std::complex<double>(0,1)*MH*WH,2);
	token301 = pow(MH,2);
	token302 = pow(MS1,2);
	token303 = pow(sin(alpha),5);
	token304 = -18;
	token305 = -6;
	token306 = -2;
	token307 = -0.75;
	token308 = 0.75;
	token309 = -1.5;
	token310 = 1.5;
	token311 = sin(3*alpha);
	token312 = pow(MH,2) - std::complex<double>(0,1)*MH*WH - MS1*(MS1 - std::complex<double>(0,1)*WS1);
	token313 = 512;
	token314 = cos(2*alpha);
	token315 = 0;
	token316 = 0;
	token317 = 0;
	token318 = EL;
	token319 = pow(EL,2);
	token320 = MB;
	token321 = MC;
	token322 = pow((sqrt(MH*(MH - std::complex<double>(0,1)*WH))).imag(),2);
	token323 = 0;
	token324 = 0;
	token325 = MD;
	token326 = (sqrt(MH*(MH - std::complex<double>(0,1)*WH))).imag();
	token327 = (sqrt(MH*(MH - std::complex<double>(0,1)*WH))).real();
	token328 = 0;
	token329 = 0;
	token330 = 0;
	token331 = 0;
	token332 = 0;
	token333 = pow((sqrt(MH*(MH - std::complex<double>(0,1)*WH))).real(),2);
	token334 = MS;
	token335 = MT;
	token336 = MU;
	token337 = 0;
	token338 = MW;
	token339 = pow(MW,2);
	token340 = 0;
	token341 = MZ;
	token342 = pow(MZ,2);
	token343 = pow((sqrt(MH*(MH - std::complex<double>(0,1)*WH))).imag(),4);
	token344 = pow((sqrt(MH*(MH - std::complex<double>(0,1)*WH))).real(),4);
	token345 = pow(FAGS,2);
	token346 = 3;
	token347 = 1152;
	token348 = pow(pow((sqrt(MH*(MH - std::complex<double>(0,1)*WH))).imag(),2) + pow((sqrt(MH*(MH - std::complex<double>(0,1)*WH))).real(),2),2);
	token349 = 27;
	token350 = -81;
	token351 = -27;
	token352 = pow(cos(3*alpha),2);
	token353 = -15;
	token354 = 81;
	token355 = pow((sqrt(MH*(MH - std::complex<double>(0,1)*WH))).real(),2);
	token356 = cos(4*alpha);
	token357 = pow((sqrt(MS1*(MS1 - std::complex<double>(0,1)*WS1))).real(),2);
	token358 = 15;
	token359 = pow(cos(alpha),5);
	token360 = -2.25;
	token361 = 2.25;
	token362 = pow(pow(MH,2) - std::complex<double>(0,1)*MH*WH,3);
	token363 =  (cos(alpha)/sin(alpha));
	token364 = 4.5;
	token365 = -4.5;
	token366 = -63;
	token367 = 45;
	token368 = tan(alpha);
	token369 = 39;
	token370 = -21;
	token371 = pow(MA1,2);
	token372 = 63;
	token373 = pow(MB,2);
	token374 = pow(MT,2);
	token375 = -4;
	token376 = cw;
	token377 = sw;
	token378 = -19;
	token379 = -12*MS1*svev*(MS1 - std::complex<double>(0,1)*WS1)*pow(cos(alpha),3) + 4*svev*(2*pow(MH,2) - std::complex<double>(0,2)*MH*WH + MS1*(MS1 - std::complex<double>(0,1)*WS1))*cos(alpha)*pow(sin(alpha),2) - 8*vev*(pow(MH,2) - std::complex<double>(0,1)*MH*WH + 2*MS1*(MS1 - std::complex<double>(0,1)*WS1))*pow(sin(alpha),3);
	
	}
}
