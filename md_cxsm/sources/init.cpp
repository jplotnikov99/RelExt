///////////////////CODE GENERATED VIA MATHEMATICA///////////////////


#include "general_model.hpp"
#include "../model.hpp"

namespace DT{
	void Model::init()
	{
		aEWM1 = 127.9;
		Gf = 0.0000116637;
		aS = 0.1184;
		ymdo = 0.00504;
		ymup = 0.00255;
		yms = 0.101;
		ymc = 1.27;
		ymb = 4.7;
		ymt = 172;
		yme = 0.000511;
		ymm = 0.10566;
		ymtau = 1.777;
		cabi = 0.227736;
		MW = 79.8244;
		svev = 100;
		alpha = 0.;
		MA1 = 100;
		MS1 = 100;
		MH = 125.09;
		GG = 1.21978;
		MZ = 91.1876;
		Me = 0.000511;
		MMU = 0.10566;
		MTA = 1.777;
		MU = 0.00255;
		MC = 1.27;
		MT = 172;
		MD = 0.00504;
		MS = 0.101;
		MB = 4.7;
		WZ = 2.4952;
		WW = 2.085;
		WT = 1.50834;
		WH = 0.00407;
		WS1 = 0;
		WA1 = 0;
		E = 2.71828;
		Pi = 3.14159;
		double EL = 0.312233;
		double ee = 0.312233;
		double gs = 1.21358;
		double G = 1.21358;
		double FAGS = 1.21358;

		channelnames.push_back("A1A1HH");
		amp2s["A1A1HH"]=A1A1HH;
		amp2fls["A1A1HH"]=A1A1HHfl;
		mass1s["A1A1HH"]=&MA1;
		mass2s["A1A1HH"]=&MA1;
		channelnames.push_back("A1A1HS1");
		amp2s["A1A1HS1"]=A1A1HS1;
		amp2fls["A1A1HS1"]=A1A1HS1fl;
		mass1s["A1A1HS1"]=&MA1;
		mass2s["A1A1HS1"]=&MA1;
		channelnames.push_back("A1A1S1S1");
		amp2s["A1A1S1S1"]=A1A1S1S1;
		amp2fls["A1A1S1S1"]=A1A1S1S1fl;
		mass1s["A1A1S1S1"]=&MA1;
		mass2s["A1A1S1S1"]=&MA1;
		channelnames.push_back("A1A1ZZ");
		amp2s["A1A1ZZ"]=A1A1ZZ;
		amp2fls["A1A1ZZ"]=A1A1ZZfl;
		mass1s["A1A1ZZ"]=&MA1;
		mass2s["A1A1ZZ"]=&MA1;
		channelnames.push_back("A1A1wW");
		amp2s["A1A1wW"]=A1A1wW;
		amp2fls["A1A1wW"]=A1A1wWfl;
		mass1s["A1A1wW"]=&MA1;
		mass2s["A1A1wW"]=&MA1;
		channelnames.push_back("A1A1Ee");
		amp2s["A1A1Ee"]=A1A1Ee;
		amp2fls["A1A1Ee"]=A1A1Eefl;
		mass1s["A1A1Ee"]=&MA1;
		mass2s["A1A1Ee"]=&MA1;
		channelnames.push_back("A1A1MUmu");
		amp2s["A1A1MUmu"]=A1A1MUmu;
		amp2fls["A1A1MUmu"]=A1A1MUmufl;
		mass1s["A1A1MUmu"]=&MA1;
		mass2s["A1A1MUmu"]=&MA1;
		channelnames.push_back("A1A1TAta");
		amp2s["A1A1TAta"]=A1A1TAta;
		amp2fls["A1A1TAta"]=A1A1TAtafl;
		mass1s["A1A1TAta"]=&MA1;
		mass2s["A1A1TAta"]=&MA1;
		channelnames.push_back("A1A1Uu");
		amp2s["A1A1Uu"]=A1A1Uu;
		amp2fls["A1A1Uu"]=A1A1Uufl;
		mass1s["A1A1Uu"]=&MA1;
		mass2s["A1A1Uu"]=&MA1;
		channelnames.push_back("A1A1Cc");
		amp2s["A1A1Cc"]=A1A1Cc;
		amp2fls["A1A1Cc"]=A1A1Ccfl;
		mass1s["A1A1Cc"]=&MA1;
		mass2s["A1A1Cc"]=&MA1;
		channelnames.push_back("A1A1Tt");
		amp2s["A1A1Tt"]=A1A1Tt;
		amp2fls["A1A1Tt"]=A1A1Ttfl;
		mass1s["A1A1Tt"]=&MA1;
		mass2s["A1A1Tt"]=&MA1;
		channelnames.push_back("A1A1Dd");
		amp2s["A1A1Dd"]=A1A1Dd;
		amp2fls["A1A1Dd"]=A1A1Ddfl;
		mass1s["A1A1Dd"]=&MA1;
		mass2s["A1A1Dd"]=&MA1;
		channelnames.push_back("A1A1Ss");
		amp2s["A1A1Ss"]=A1A1Ss;
		amp2fls["A1A1Ss"]=A1A1Ssfl;
		mass1s["A1A1Ss"]=&MA1;
		mass2s["A1A1Ss"]=&MA1;
		channelnames.push_back("A1A1Bb");
		amp2s["A1A1Bb"]=A1A1Bb;
		amp2fls["A1A1Bb"]=A1A1Bbfl;
		mass1s["A1A1Bb"]=&MA1;
		mass2s["A1A1Bb"]=&MA1;
		channelnames.push_back("A1A1");
		amp2fls["A1A1"]=A1A1;
		mass1s["A1A1"]=&MA1;
		mass2s["A1A1"]=&MA1;
		inifuncs.push_back(A1A1);
		N_initial_states = 1;
		inimasses.push_back(&MA1);
		inimasses.push_back(&MA1);
		dsmasses.push_back(&MA1);
		neutraldsmasses.push_back(&MA1);
		denstructures.push_back(&MH);
		denstructures.push_back(&WH);
		denstructures.push_back(&MS1);
		denstructures.push_back(&WS1);
		N_widths = 2;
	}
}
