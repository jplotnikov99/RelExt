///////////////////CODE GENERATED VIA MATHEMATICA///////////////////


#include "../include/init.hpp"
#include "readdata.hpp"
#include "../amp2s/allamp2s.hpp"
#include "../include/declarations.hpp"

void DT::init(chinfo& ch, std::vector<std::string> data) {
	lamL = std::stod(data[reader::getColumnIndex("lamL")]);
	lam2 = std::stod(data[reader::getColumnIndex("lam2")]);
	mmh = std::stod(data[reader::getColumnIndex("mmh")]);
	mmH0 = std::stod(data[reader::getColumnIndex("mmH0")]);
	mmA0 = std::stod(data[reader::getColumnIndex("mmA0")]);
	mmHch = std::stod(data[reader::getColumnIndex("mmHch")]);
	Wh = std::stod(data[reader::getColumnIndex("Wh")]);
	aEWM1 = 0.00775795;
	Gf = 0.0000116637;
	MMZ = 91.1876;
	MMW = 79.947;
	MMC = 1.2;
	MMB = 4.23;
	MMT = 175;
	Mnue = 0.;
	Mnum = 0.;
	Mnut = 0.;
	Me = 0.;
	MM = 0.1057;
	MTA = 1.777;
	MU = 0.;
	MD = 0.;
	MS = 0.1;
	WT = 2.;
	WZ = 2.4952;
	WW = 2.085;
	WH0 = 0.;
	WA0 = 1.;
	WHch = 1.;
	E = 2.71828;
	Pi = 3.14159;
	MZ = MMZ;
	MW = MMW;
	MC = MMC;
	MB = MMB;
	MT = MMT;
	EE = 2*pow(aEWM1,0.5)*pow(Pi,0.5);
	CW2 = pow(MW,2)*pow(MZ,-2);
	SW2 = 1-CW2;
	CW = pow(CW2,0.5);
	SW = pow(SW2,0.5);
	g1 = EE*pow(CW,-1);
	g2 = EE*pow(SW,-1);
	v = 0.8408964152537146*pow(Gf,-0.5);
	aS = 0.1172;
	QS = 100.;
	gstr = 2*pow(aS,0.5)*pow(Pi,0.5);
	CKM1x1 = 0.97428;
	CKM1x2 = 0.2253;
	CKM1x3 = 0.00347;
	CKM2x1 = 0.2252;
	CKM2x2 = 0.97345;
	CKM2x3 = 0.041;
	CKM3x1 = 0.00862;
	CKM3x2 = 0.0403;
	CKM3x3 = 0.999152;
	mh = mmh;
	MH0 = mmH0;
	MA0 = mmA0;
	MHch = mmHch;
	mu1 = pow(2,-0.5)*pow(-pow(mh,2),0.5);
	mu2 = pow(pow(MH0,2)-lamL*pow(v,2),0.5);
	lam = (pow(mh,2)*pow(v,-2))/2.;
	lam3 = 2*pow(v,-2)*(-pow(MH0,2)+pow(MHch,2)+lamL*pow(v,2));
	lam4 = (pow(MA0,2)+pow(MH0,2)-2*pow(MHch,2))*pow(v,-2);
	lam5 = (-pow(MA0,2)+pow(MH0,2))*pow(v,-2);
	GH = -0.08333333333333333*(pow(gstr,2)*(1+(13*pow(mmh,6)*pow(MMT,-6))/16800.+(pow(mmh,4)*pow(MMT,-4))/168.+(7*pow(mmh,2)*pow(MMT,-2))/120.)*pow(Pi,-2)*pow(v,-1));
	EL = EE;
	gc46 = -EL;
	gc47 = -EL;
	gc48 = GH;
	gc49 = EL;
	gc50 = -EL;
	gc52 = EL;
	gc55 = -EL;
	gc56 = -((CW*EL)/SW);
	gc58 = (CW*EL)/SW;
	gc60 = -EL;
	gc63 = EL;
	gc64 = (CW*EL)/SW;
	gc66 = -((CW*EL)/SW);
	gc68 = (CW*EL)/SW;
	gc70 = -((CW*EL)/SW);
	gc72 = gstr;
	gc73 = -gstr;
	gc74 = - (gstr*gstr);
	gc75 = -(GH*gstr);
	gc76 = -(GH* (gstr*gstr));
	gc77L = -(MB/v);
	gc77R = MB/v;
	gc78 = -(MB/v);
	gc79L = -(MD/v);
	gc79R = MD/v;
	gc80 = -(MD/v);
	gc81L = -(MS/v);
	gc81R = MS/v;
	gc82 = -(MS/v);
	gc83L = -((sqrt(2)*MS*(CKM2x3))/v);
	gc83R = (sqrt(2)*MT*(CKM2x3))/v;
	gc84L = -((sqrt(2)*MB*(CKM3x3))/v);
	gc84R = (sqrt(2)*MT*(CKM3x3))/v;
	gc85L = -((sqrt(2)*MD*(CKM1x3))/v);
	gc85R = (sqrt(2)*MT*(CKM1x3))/v;
	gc86L = -((sqrt(2)*MS*(CKM2x1))/v);
	gc86R = (sqrt(2)*MU*(CKM2x1))/v;
	gc87L = -((sqrt(2)*MB*(CKM3x1))/v);
	gc87R = (sqrt(2)*MU*(CKM3x1))/v;
	gc88L = -((sqrt(2)*MD*(CKM1x1))/v);
	gc88R = (sqrt(2)*MU*(CKM1x1))/v;
	gc89L = -((sqrt(2)*MS*(CKM2x2))/v);
	gc89R = (sqrt(2)*MC*(CKM2x2))/v;
	gc90L = -((sqrt(2)*MB*(CKM3x2))/v);
	gc90R = (sqrt(2)*MC*(CKM3x2))/v;
	gc91L = -((sqrt(2)*MD*(CKM1x2))/v);
	gc91R = (sqrt(2)*MC*(CKM1x2))/v;
	gc92L = -(Me/v);
	gc92R = Me/v;
	gc93 = -(Me/v);
	gc94L = -(MM/v);
	gc94R = MM/v;
	gc95 = -(MM/v);
	gc96L = -(MTA/v);
	gc96R = MTA/v;
	gc97 = -(MTA/v);
	gc98 = -((sqrt(2)*Me)/v);
	gc99 = -((sqrt(2)*MM)/v);
	gc100 = -((sqrt(2)*MTA)/v);
	gc101L = (sqrt(2)*CKM2x3*MT)/v;
	gc101R = -((sqrt(2)*CKM2x3*MS)/v);
	gc102L = (sqrt(2)*CKM2x1*MU)/v;
	gc102R = -((sqrt(2)*CKM2x1*MS)/v);
	gc103L = (sqrt(2)*CKM2x2*MC)/v;
	gc103R = -((sqrt(2)*CKM2x2*MS)/v);
	gc104L = (sqrt(2)*CKM3x3*MT)/v;
	gc104R = -((sqrt(2)*CKM3x3*MB)/v);
	gc105L = (sqrt(2)*CKM3x1*MU)/v;
	gc105R = -((sqrt(2)*CKM3x1*MB)/v);
	gc106L = (sqrt(2)*CKM3x2*MC)/v;
	gc106R = -((sqrt(2)*CKM3x2*MB)/v);
	gc107L = (sqrt(2)*CKM1x3*MT)/v;
	gc107R = -((sqrt(2)*CKM1x3*MD)/v);
	gc108L = (sqrt(2)*CKM1x1*MU)/v;
	gc108R = -((sqrt(2)*CKM1x1*MD)/v);
	gc109L = (sqrt(2)*CKM1x2*MC)/v;
	gc109R = -((sqrt(2)*CKM1x2*MD)/v);
	gc110L = MC/v;
	gc110R = -(MC/v);
	gc111 = -(MC/v);
	gc112L = MT/v;
	gc112R = -(MT/v);
	gc113 = -(MT/v);
	gc114L = MU/v;
	gc114R = -(MU/v);
	gc115 = -(MU/v);
	gc116R = -((sqrt(2)*Me)/v);
	gc117R = -((sqrt(2)*MM)/v);
	gc118R = -((sqrt(2)*MTA)/v);
	gc119 = gstr;
	gc120 = gstr;
	gc121 = gstr;
	gc122 = gstr;
	gc123 = gstr;
	gc124 = gstr;
	gc129 = (v* (EL*EL))/(2.*SW);
	gc130 = EL/(2.*SW);
	gc131 = EL/(2.*SW);
	gc132 = EL/(2.*SW);
	gc133 = -0.5*EL/SW;
	gc134 = EL;
	gc139 = (v* (EL*EL))/(2.*SW);
	gc140 = EL/(2.*SW);
	gc141 = EL/(2.*SW);
	gc142 = -0.5*EL/SW;
	gc143 = EL/(2.*SW);
	gc150 = (v* (EL*EL))/(2.* (SW*SW));
	gc151 = - (EL*EL);
	gc152 = (CW*EL)/SW;
	gc153 =  (EL*EL)/ (SW*SW);
	gc156 = -0.5*(EL*( (CW*CW) +  (SW*SW)))/(CW*SW);
	gc157 = -0.5*(EL*( (CW*CW) +  (SW*SW)))/(CW*SW);
	gc158 = -0.5*(CW*EL)/SW + (EL*SW)/(2.*CW);
	gc159 = -0.5*(CW*EL)/SW + (EL*SW)/(2.*CW);
	gc164 = -0.5*(v* (EL*EL))/CW;
	gc169 = -0.5*(v* (EL*EL))/CW;
	gc170 = (CW* (EL*EL))/SW;
	gc177 = (v* (EL*EL)* (( (CW*CW) +  (SW*SW))*( (CW*CW) +  (SW*SW))))/(2.* (CW*CW)* (SW*SW));
	gc178 = -(( (CW*CW)* (EL*EL))/ (SW*SW));
	gc179 = -0.3333333333333333*EL;
	gc180 = -0.3333333333333333*EL;
	gc181 = -0.3333333333333333*EL;
	gc182 = -EL;
	gc183 = -EL;
	gc184 = -EL;
	gc185 = (2*EL)/3.;
	gc186 = (2*EL)/3.;
	gc187 = (2*EL)/3.;
	gc188 = EL/(sqrt(2)*SW);
	gc189 = EL/(sqrt(2)*SW);
	gc190 = EL/(sqrt(2)*SW);
	gc191 = (CKM2x3*EL)/(sqrt(2)*SW);
	gc192 = (CKM2x1*EL)/(sqrt(2)*SW);
	gc193 = (CKM2x2*EL)/(sqrt(2)*SW);
	gc194 = (CKM3x3*EL)/(sqrt(2)*SW);
	gc195 = (CKM3x1*EL)/(sqrt(2)*SW);
	gc196 = (CKM3x2*EL)/(sqrt(2)*SW);
	gc197 = (CKM1x3*EL)/(sqrt(2)*SW);
	gc198 = (CKM1x1*EL)/(sqrt(2)*SW);
	gc199 = (CKM1x2*EL)/(sqrt(2)*SW);
	gc200 = EL/(sqrt(2)*SW);
	gc201 = EL/(sqrt(2)*SW);
	gc202 = EL/(sqrt(2)*SW);
	gc203 = (EL*(CKM2x3))/(sqrt(2)*SW);
	gc204 = (EL*(CKM3x3))/(sqrt(2)*SW);
	gc205 = (EL*(CKM1x3))/(sqrt(2)*SW);
	gc206 = (EL*(CKM2x1))/(sqrt(2)*SW);
	gc207 = (EL*(CKM3x1))/(sqrt(2)*SW);
	gc208 = (EL*(CKM1x1))/(sqrt(2)*SW);
	gc209 = (EL*(CKM2x2))/(sqrt(2)*SW);
	gc210 = (EL*(CKM3x2))/(sqrt(2)*SW);
	gc211 = (EL*(CKM1x2))/(sqrt(2)*SW);
	gc212L = -0.16666666666666666*(EL*(3* (CW*CW) +  (SW*SW)))/(CW*SW);
	gc212R = (EL*SW)/(3.*CW);
	gc213L = -0.16666666666666666*(EL*(3* (CW*CW) +  (SW*SW)))/(CW*SW);
	gc213R = (EL*SW)/(3.*CW);
	gc214L = -0.16666666666666666*(EL*(3* (CW*CW) +  (SW*SW)))/(CW*SW);
	gc214R = (EL*SW)/(3.*CW);
	gc215L = -0.5*(EL*( (CW*CW) -  (SW*SW)))/(CW*SW);
	gc215R = (EL*SW)/CW;
	gc216L = -0.5*(EL*( (CW*CW) -  (SW*SW)))/(CW*SW);
	gc216R = (EL*SW)/CW;
	gc217L = -0.5*(EL*( (CW*CW) -  (SW*SW)))/(CW*SW);
	gc217R = (EL*SW)/CW;
	gc218L = (CW*EL)/(2.*SW) - (EL*SW)/(6.*CW);
	gc218R = (-2*EL*SW)/(3.*CW);
	gc219L = (CW*EL)/(2.*SW) - (EL*SW)/(6.*CW);
	gc219R = (-2*EL*SW)/(3.*CW);
	gc220L = (CW*EL)/(2.*SW) - (EL*SW)/(6.*CW);
	gc220R = (-2*EL*SW)/(3.*CW);
	gc221 = (EL*( (CW*CW) +  (SW*SW)))/(2.*CW*SW);
	gc222 = (EL*( (CW*CW) +  (SW*SW)))/(2.*CW*SW);
	gc223 = (EL*( (CW*CW) +  (SW*SW)))/(2.*CW*SW);
	ch.inimass[0] = MH0;
	ch.inimass[1] = MH0;
	ch.inimass[2] = MA0;
	ch.inimass[3] = MH0;
	ch.inimass[4] = MH0;
	ch.inimass[5] = MHch;
	ch.inimass[6] = MA0;
	ch.inimass[7] = MA0;
	ch.inimass[8] = MA0;
	ch.inimass[9] = MHch;
	ch.inimass[10] = MHch;
	ch.inimass[11] = MHch;
	ch.neutraldsmasses[0] = MH0;
	ch.neutraldsmasses[1] = MA0;
	ch.den_structure[0] = MZ;
	ch.den_structure[1] = WZ;
	ch.den_structure[2] = MW;
	ch.den_structure[3] = WW;
	ch.den_structure[4] = mh;
	ch.den_structure[5] = Wh;
	ch.inifunc[0] = amp2s::H0H0;
	ch.inifunc[1] = amp2s::H0A0;
	ch.inifunc[2] = amp2s::H0Hch;
	ch.inifunc[3] = amp2s::A0A0;
	ch.inifunc[4] = amp2s::A0Hch;
	ch.inifunc[5] = amp2s::HchHch;
}
